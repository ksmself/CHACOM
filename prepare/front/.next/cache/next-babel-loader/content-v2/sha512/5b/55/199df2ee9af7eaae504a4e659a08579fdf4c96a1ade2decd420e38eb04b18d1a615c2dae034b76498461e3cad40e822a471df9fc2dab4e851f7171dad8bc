{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\signup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 280px;\\n  margin: 50px auto 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Form, Input, Button } from 'antd';\nimport TitleLogo from '../components/TitleLogo';\nvar formStyle = css(_templateObject()); // localhost:3000/signup\n\nvar SignUp = function SignUp() {\n  _s();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var onFinish = function onFinish(values) {\n    // values는 {email: \"ksmself@wizlive.com\", password: \"sfsfsfs\", confirm: \"sfsfsfs\"}\n    console.log('Received values of form: ', values);\n  };\n\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), _jsxDEV(Form, {\n      form: form,\n      css: formStyle,\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      children: [_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: \"E-mail\",\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }],\n        children: _jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this), _jsxDEV(Form.Item, {\n        name: \"password\",\n        label: \"Password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        hasFeedback: true,\n        children: _jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), _jsxDEV(Form.Item, {\n        name: \"confirm\",\n        label: \"Confirm Password\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, function (_ref) {\n          var getFieldValue = _ref.getFieldValue;\n          return {\n            validator: function validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\n            }\n          };\n        }],\n        children: _jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this), _jsxDEV(Form.Item, {\n        children: _jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/signup.js"],"names":["css","Form","Input","Button","TitleLogo","formStyle","SignUp","useForm","form","onFinish","values","console","log","type","message","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,IAAMC,SAAS,GAAGL,GAAH,mBAAf,C,CAKA;;AACA,IAAMM,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,sBACJL,IAAI,CAACM,OAAL,EADI;AAAA;AAAA,MACZC,IADY;;AAGnB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AAC3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACD,GAHD;;AAKA,SACE;AAAA,eACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,IAAZ;AAAkB,MAAA,GAAG,EAAEH,SAAvB;AAAkC,MAAA,QAAQ,EAAEI,QAA5C;AAAsD,MAAA,kBAAkB,MAAxE;AAAA,iBACE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,KAAK,EAAE,CACL;AACEI,UAAAA,IAAI,EAAE,OADR;AAEEC,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACEC,UAAAA,QAAQ,EAAE,IADZ;AAEED,UAAAA,OAAO,EAAE;AAFX,SALK,CAHT;AAAA,kBAcE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,eADF,EAkBE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,KAAK,EAAE,CACL;AACEC,UAAAA,QAAQ,EAAE,IADZ;AAEED,UAAAA,OAAO,EAAE;AAFX,SADK,CAHT;AASE,QAAA,WAAW,MATb;AAAA,kBAWE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,eAlBF,EAgCE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAC,kBAFR;AAGE,QAAA,YAAY,EAAE,CAAC,UAAD,CAHhB;AAIE,QAAA,WAAW,MAJb;AAKE,QAAA,KAAK,EAAE,CACL;AACEC,UAAAA,QAAQ,EAAE,IADZ;AAEED,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AAAA,cAAGE,aAAH,QAAGA,aAAH;AAAA,iBAAwB;AACtBC,YAAAA,SADsB,qBACZC,CADY,EACTC,KADS,EACF;AAClB,kBAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,UAAD,CAAb,KAA8BG,KAA5C,EAAmD;AACjD,uBAAOC,OAAO,CAACC,OAAR,EAAP;AACD;;AAED,qBAAOD,OAAO,CAACE,MAAR,CACL,IAAIC,KAAJ,CAAU,kDAAV,CADK,CAAP;AAGD;AATqB,WAAxB;AAAA,SALK,CALT;AAAA,kBAuBE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAvBF;AAAA;AAAA;AAAA;AAAA,eAhCF,EAyDE,QAAC,IAAD,CAAM,IAAN;AAAA,kBACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAzDF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAoED,CA5ED;;GAAMjB,M;UACWL,IAAI,CAACM,O;;;KADhBD,M;AA8EN,eAAeA,MAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport TitleLogo from '../components/TitleLogo';\r\n\r\nconst formStyle = css`\r\n  width: 280px;\r\n  margin: 50px auto 0;\r\n`;\r\n\r\n// localhost:3000/signup\r\nconst SignUp = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    // values는 {email: \"ksmself@wizlive.com\", password: \"sfsfsfs\", confirm: \"sfsfsfs\"}\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleLogo />\r\n      <Form form={form} css={formStyle} onFinish={onFinish} scrollToFirstError>\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"E-mail\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your password!',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error('The two passwords that you entered do not match!')\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            회원가입\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}