{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  currentHashtags: [],\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  convertLoading: false,\n  convertDone: false,\n  convertError: null,\n  convertedPinyin: null\n};\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const ADD_HASHTAG_REQUEST = 'ADD_HASHTAG_REQUEST';\nexport const REMOVE_HASHTAG_REQUEST = 'REMOVE_HASHTAG_REQUEST';\nexport const CONVERT_PINYIN_REQUEST = 'CONVERT_PINYIN_REQUEST';\nexport const CONVERT_PINYIN_SUCCESS = 'CONVERT_PINYIN_SUCCESS';\nexport const CONVERT_PINYIN_FAILURE = 'CONVERT_PINYIN_FAILURE';\nexport const CONVERT_RESET_REQUEST = 'CONVERT_RESET_REQUEST';\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_POST_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.singlePost = action.data;\n      break;\n\n    case LOAD_POST_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      draft.addPostDone = false;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = action.data;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.currentHashtags = [];\n      draft.mainPosts.unshift(action.data);\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n\n    case LIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers = post.Likers.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n\n    case UNLIKE_POST_SUCCESS:\n      const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n      post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n      draft.unlikePostLoading = false;\n      draft.unlikePostDone = true;\n      break;\n\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostLoading = false;\n      draft.unlikePostError = action.error;\n      break;\n\n    case ADD_HASHTAG_REQUEST:\n      draft.currentHashtags.push(action.data);\n      break;\n\n    case REMOVE_HASHTAG_REQUEST:\n      draft.currentHashtags = draft.currentHashtags.filter(v => v !== action.data);\n      break;\n\n    case CONVERT_PINYIN_REQUEST:\n      draft.convertLoading = true;\n      draft.convertDone = false;\n      draft.convertError = null;\n      break;\n\n    case CONVERT_PINYIN_SUCCESS:\n      draft.convertLoading = false;\n      draft.convertDone = true;\n      draft.convertedPinyin = action.data;\n      break;\n\n    case CONVERT_PINYIN_FAILURE:\n      draft.convertLoading = false;\n      draft.convertError = action.error;\n      break;\n\n    case CONVERT_RESET_REQUEST:\n      draft.convertDone = false;\n      draft.convertError = null;\n      draft.convertedPinyin = null;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/reducers/post.js"],"names":["produce","initialState","mainPosts","currentHashtags","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","convertLoading","convertDone","convertError","convertedPinyin","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_HASHTAG_REQUEST","REMOVE_HASHTAG_REQUEST","CONVERT_PINYIN_REQUEST","CONVERT_PINYIN_SUCCESS","CONVERT_PINYIN_FAILURE","CONVERT_RESET_REQUEST","reducer","state","action","draft","type","singlePost","data","error","unshift","filter","v","id","PostId","post","find","Likers","push","UserId"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  currentHashtags: [],\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  convertLoading: false,\r\n  convertDone: false,\r\n  convertError: null,\r\n  convertedPinyin: null,\r\n};\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_HASHTAG_REQUEST = 'ADD_HASHTAG_REQUEST';\r\nexport const REMOVE_HASHTAG_REQUEST = 'REMOVE_HASHTAG_REQUEST';\r\n\r\nexport const CONVERT_PINYIN_REQUEST = 'CONVERT_PINYIN_REQUEST';\r\nexport const CONVERT_PINYIN_SUCCESS = 'CONVERT_PINYIN_SUCCESS';\r\nexport const CONVERT_PINYIN_FAILURE = 'CONVERT_PINYIN_FAILURE';\r\n\r\nexport const CONVERT_RESET_REQUEST = 'CONVERT_RESET_REQUEST';\r\n\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostDone = true;\r\n        draft.singlePost = action.data;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        draft.addPostDone = false;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = action.data;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.currentHashtags = [];\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.push({ id: action.data.UserId });\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      }\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostDone = false;\r\n        draft.unlikePostError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS:\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n      case ADD_HASHTAG_REQUEST:\r\n        draft.currentHashtags.push(action.data);\r\n        break;\r\n      case REMOVE_HASHTAG_REQUEST:\r\n        draft.currentHashtags = draft.currentHashtags.filter(\r\n          (v) => v !== action.data\r\n        );\r\n        break;\r\n      case CONVERT_PINYIN_REQUEST:\r\n        draft.convertLoading = true;\r\n        draft.convertDone = false;\r\n        draft.convertError = null;\r\n        break;\r\n      case CONVERT_PINYIN_SUCCESS:\r\n        draft.convertLoading = false;\r\n        draft.convertDone = true;\r\n        draft.convertedPinyin = action.data;\r\n        break;\r\n      case CONVERT_PINYIN_FAILURE:\r\n        draft.convertLoading = false;\r\n        draft.convertError = action.error;\r\n        break;\r\n      case CONVERT_RESET_REQUEST:\r\n        draft.convertDone = false;\r\n        draft.convertError = null;\r\n        draft.convertedPinyin = null;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}