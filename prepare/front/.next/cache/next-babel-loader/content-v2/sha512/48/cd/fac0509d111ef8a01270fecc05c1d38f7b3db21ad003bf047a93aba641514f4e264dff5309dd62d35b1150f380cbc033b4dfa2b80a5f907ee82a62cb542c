{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\signup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  .ant-modal-confirm-body-wrapper\\n    > .ant-modal-confirm-body\\n    > .ant-modal-confirm-title {\\n    font-weight: 700;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  padding-top: 25px;\\n\\n  .ant-form-item-control-input-content {\\n    display: flex;\\n    justify-content: center;\\n\\n    button {\\n      @media (min-width: 768px) {\\n        width: 130px;\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n\\n  .ant-input {\\n    width: 190px;\\n    margin-right: 10px;\\n\\n    @media (min-width: 768px) {\\n      width: 310px;\\n    }\\n\\n    @media (min-width: 1024px) {\\n      width: 410px;\\n    }\\n  }\\n\\n  button {\\n    padding: 4px 10px;\\n    font-weight: 700;\\n    border-color: #3a18ff;\\n\\n    @media (min-width: 768px) {\\n      height: 38px;\\n    }\\n  }\\n\\n  button:hover {\\n    color: #3a18ff;\\n    border-color: #3a18ff;\\n  }\\n\\n  button:focus {\\n    color: #3a18ff;\\n    border-color: #3a18ff;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 280px;\\n  margin: 40px auto 0;\\n\\n  @media (min-width: 768px) {\\n    width: 400px;\\n    margin-top: 70px;\\n  }\\n\\n  @media (min-width: 1024px) {\\n    width: 450px;\\n    margin-top: 60px;\\n  }\\n\\n  .ant-form-item {\\n    display: block;\\n\\n    @media (min-width: 768px) {\\n      margin-bottom: 50px;\\n    }\\n\\n    .ant-input {\\n      @media (min-width: 768px) {\\n        font-size: 16px;\\n      }\\n    }\\n  }\\n\\n  .ant-form-item-label {\\n    font-weight: 700;\\n\\n    label {\\n      @media (min-width: 768px) {\\n        margin-bottom: 10px;\\n        font-size: 18px;\\n      }\\n\\n      @media (min-width: 1024px) {\\n        margin-bottom: 16px;\\n        font-size: 22px;\\n      }\\n    }\\n\\n    label::after {\\n      content: '';\\n    }\\n  }\\n\\n  // \\uBE44\\uBC00\\uBC88\\uD638 & \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778 input \\uB192\\uC774\\n  .ant-input-affix-wrapper {\\n    height: 38px;\\n  }\\n\\n  .ant-form-item-has-error {\\n    margin-bottom: 10px;\\n\\n    @media (min-width: 768px) {\\n      margin-bottom: 28px;\\n    }\\n  }\\n\\n  .ant-btn-primary {\\n    width: 100px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 30px;\\n\\n  @media (min-width: 768px) {\\n    margin-top: 60px;\\n  }\\n\\n  @media (min-width: 1024px) {\\n    margin-top: 80px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useCallback, useEffect, useRef } from 'react';\nimport { Form, Input, Button, Modal } from 'antd';\nimport { createGlobalStyle } from 'styled-components';\nimport TitleLogo from '../components/TitleLogo';\nimport { roundBtn } from '../components/styles';\nvar headerStyle = css(_templateObject());\nvar formStyle = css(_templateObject2());\nvar emailForm = css(_templateObject3());\nvar submitDiv = css(_templateObject4());\nvar Global = createGlobalStyle(_templateObject5()); // localhost:3000/signup\n\n_c = Global;\n\nvar SignUp = function SignUp() {\n  _s();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var emailRef = useRef();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var onChangeEmail = useCallback(function (e) {\n    setEmail(e.target.value);\n  }, []);\n\n  var _useState2 = useState(false),\n      clicked = _useState2[0],\n      setClicked = _useState2[1];\n\n  var checkDuplicate = useCallback(function () {\n    if (!clicked) {\n      Modal.error({\n        title: '아이디 중복확인을 해주세요.'\n      });\n    }\n  }, [clicked]);\n\n  var _useState3 = useState(false),\n      duplicateUser = _useState3[0],\n      setDuplicateUser = _useState3[1];\n\n  var duplicatedId = function duplicatedId() {\n    // setClicked(true);\n    setEmail(function (state) {\n      return '';\n    });\n    form.setFieldsValue({\n      email: ''\n    });\n    Modal.error({\n      title: '이미 사용중인 이메일입니다.',\n      onOk: function onOk() {\n        setClicked(false);\n        emailRef.current.focus();\n      }\n    });\n  };\n\n  var nonDuplicatedId = function nonDuplicatedId() {\n    setClicked(true);\n    Modal.success({\n      title: '사용 가능한 이메일입니다.'\n    });\n  };\n\n  var onFinish = function onFinish(values) {\n    // values는 {email: \"ksmself@wizlive.com\", password: \"sfsfsfs\", confirm: \"sfsfsfs\"}\n    console.log('Received values of form: ', values);\n  };\n\n  return _jsxDEV(\"div\", {\n    css: headerStyle,\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, _this), _jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, _this), _jsxDEV(Form, {\n      form: form,\n      css: formStyle,\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      children: [_jsxDEV(\"div\", {\n        children: _jsxDEV(Form.Item, {\n          name: \"email\",\n          label: \"\\uC544\\uC774\\uB514(\\uC774\\uBA54\\uC77C)\",\n          rules: [{\n            type: 'email',\n            message: '올바른 이메일 주소를 입력해주세요!'\n          }, {\n            required: true,\n            message: '아이디(이메일)을 입력해주세요!'\n          }],\n          children: _jsxDEV(\"div\", {\n            css: emailForm,\n            children: [_jsxDEV(Input, {\n              className: \"email-input\",\n              type: \"email\",\n              value: email,\n              onChange: onChangeEmail,\n              placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              ref: emailRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, _this), _jsxDEV(Button, {\n              onClick: duplicateUser ? duplicatedId : nonDuplicatedId,\n              children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, _this), _jsxDEV(Form.Item, {\n        name: \"password\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        rules: [{\n          required: true,\n          message: '비밀번호를 입력해주세요!'\n        }],\n        hasFeedback: true,\n        children: _jsxDEV(Input.Password, {\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, _this), _jsxDEV(Form.Item, {\n        name: \"confirm\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: '비밀번호를 확인해주세요!'\n        }, function (_ref) {\n          var getFieldValue = _ref.getFieldValue;\n          return {\n            validator: function validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('입력하신 비밀번호와 일치하지 않습니다!'));\n            }\n          };\n        }],\n        children: _jsxDEV(Input.Password, {\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uD55C \\uBC88 \\uB354 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, _this), _jsxDEV(Form.Item, {\n        css: submitDiv,\n        children: _jsxDEV(Button, {\n          type: \"primary\",\n          className: \"submit-btn\",\n          shape: \"round\",\n          htmlType: \"submit\",\n          css: roundBtn,\n          onClick: checkDuplicate,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SignUp, \"aNE72hyVdZ7RP0d4ThErh2lzvT4=\", false, function () {\n  return [Form.useForm];\n});\n\n_c2 = SignUp;\nexport default SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Global\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/signup.js"],"names":["css","useState","useCallback","useEffect","useRef","Form","Input","Button","Modal","createGlobalStyle","TitleLogo","roundBtn","headerStyle","formStyle","emailForm","submitDiv","Global","SignUp","useForm","form","emailRef","email","setEmail","onChangeEmail","e","target","value","clicked","setClicked","checkDuplicate","error","title","duplicateUser","setDuplicateUser","duplicatedId","state","setFieldsValue","onOk","current","focus","nonDuplicatedId","success","onFinish","values","console","log","type","message","required","getFieldValue","validator","_","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button, Modal } from 'antd';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport TitleLogo from '../components/TitleLogo';\r\nimport { roundBtn } from '../components/styles';\r\n\r\nconst headerStyle = css`\r\n  margin-top: 30px;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-top: 60px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-top: 80px;\r\n  }\r\n`;\r\n\r\nconst formStyle = css`\r\n  width: 280px;\r\n  margin: 40px auto 0;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 400px;\r\n    margin-top: 70px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 450px;\r\n    margin-top: 60px;\r\n  }\r\n\r\n  .ant-form-item {\r\n    display: block;\r\n\r\n    @media (min-width: 768px) {\r\n      margin-bottom: 50px;\r\n    }\r\n\r\n    .ant-input {\r\n      @media (min-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-form-item-label {\r\n    font-weight: 700;\r\n\r\n    label {\r\n      @media (min-width: 768px) {\r\n        margin-bottom: 10px;\r\n        font-size: 18px;\r\n      }\r\n\r\n      @media (min-width: 1024px) {\r\n        margin-bottom: 16px;\r\n        font-size: 22px;\r\n      }\r\n    }\r\n\r\n    label::after {\r\n      content: '';\r\n    }\r\n  }\r\n\r\n  // 비밀번호 & 비밀번호 확인 input 높이\r\n  .ant-input-affix-wrapper {\r\n    height: 38px;\r\n  }\r\n\r\n  .ant-form-item-has-error {\r\n    margin-bottom: 10px;\r\n\r\n    @media (min-width: 768px) {\r\n      margin-bottom: 28px;\r\n    }\r\n  }\r\n\r\n  .ant-btn-primary {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst emailForm = css`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .ant-input {\r\n    width: 190px;\r\n    margin-right: 10px;\r\n\r\n    @media (min-width: 768px) {\r\n      width: 310px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      width: 410px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    padding: 4px 10px;\r\n    font-weight: 700;\r\n    border-color: #3a18ff;\r\n\r\n    @media (min-width: 768px) {\r\n      height: 38px;\r\n    }\r\n  }\r\n\r\n  button:hover {\r\n    color: #3a18ff;\r\n    border-color: #3a18ff;\r\n  }\r\n\r\n  button:focus {\r\n    color: #3a18ff;\r\n    border-color: #3a18ff;\r\n  }\r\n`;\r\n\r\nconst submitDiv = css`\r\n  padding-top: 25px;\r\n\r\n  .ant-form-item-control-input-content {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    button {\r\n      @media (min-width: 768px) {\r\n        width: 130px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Global = createGlobalStyle`\r\n  .ant-modal-confirm-body-wrapper\r\n    > .ant-modal-confirm-body\r\n    > .ant-modal-confirm-title {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\n// localhost:3000/signup\r\nconst SignUp = () => {\r\n  const [form] = Form.useForm();\r\n  const emailRef = useRef();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const onChangeEmail = useCallback((e) => {\r\n    setEmail(e.target.value);\r\n  }, []);\r\n\r\n  const [clicked, setClicked] = useState(false);\r\n  const checkDuplicate = useCallback(() => {\r\n    if (!clicked) {\r\n      Modal.error({\r\n        title: '아이디 중복확인을 해주세요.',\r\n      });\r\n    }\r\n  }, [clicked]);\r\n\r\n  const [duplicateUser, setDuplicateUser] = useState(false);\r\n\r\n  const duplicatedId = () => {\r\n    // setClicked(true);\r\n    setEmail((state) => '');\r\n    form.setFieldsValue({\r\n      email: '',\r\n    });\r\n    Modal.error({\r\n      title: '이미 사용중인 이메일입니다.',\r\n      onOk: () => {\r\n        setClicked(false);\r\n        emailRef.current.focus();\r\n      },\r\n    });\r\n  };\r\n\r\n  const nonDuplicatedId = () => {\r\n    setClicked(true);\r\n    Modal.success({\r\n      title: '사용 가능한 이메일입니다.',\r\n    });\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    // values는 {email: \"ksmself@wizlive.com\", password: \"sfsfsfs\", confirm: \"sfsfsfs\"}\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <div css={headerStyle}>\r\n      <Global />\r\n      <TitleLogo />\r\n      <Form form={form} css={formStyle} onFinish={onFinish} scrollToFirstError>\r\n        <div>\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"아이디(이메일)\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: '올바른 이메일 주소를 입력해주세요!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: '아이디(이메일)을 입력해주세요!',\r\n              },\r\n            ]}\r\n          >\r\n            <div css={emailForm}>\r\n              <Input\r\n                className=\"email-input\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={onChangeEmail}\r\n                placeholder=\"이메일을 입력해주세요\"\r\n                ref={emailRef}\r\n              />\r\n              <Button onClick={duplicateUser ? duplicatedId : nonDuplicatedId}>\r\n                중복확인\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"비밀번호\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 입력해주세요!',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password placeholder=\"비밀번호를 입력해주세요\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"비밀번호 확인\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 확인해주세요!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error('입력하신 비밀번호와 일치하지 않습니다!')\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"비밀번호를 한 번 더 입력해주세요\" />\r\n        </Form.Item>\r\n        <Form.Item css={submitDiv}>\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"submit-btn\"\r\n            shape=\"round\"\r\n            htmlType=\"submit\"\r\n            css={roundBtn}\r\n            onClick={checkDuplicate}\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}