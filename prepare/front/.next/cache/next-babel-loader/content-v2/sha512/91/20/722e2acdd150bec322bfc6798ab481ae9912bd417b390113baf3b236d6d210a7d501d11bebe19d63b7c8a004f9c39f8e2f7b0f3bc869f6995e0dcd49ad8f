{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  singlePost: null,\n  currentHashtags: [],\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  removeCommentLoading: false,\n  removeCommentDone: false,\n  removeCommentError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  convertLoading: false,\n  convertDone: false,\n  convertError: null,\n  convertedPinyin: null\n};\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\nexport const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const ADD_HASHTAG_REQUEST = 'ADD_HASHTAG_REQUEST';\nexport const REMOVE_HASHTAG_REQUEST = 'REMOVE_HASHTAG_REQUEST';\nexport const CONVERT_PINYIN_REQUEST = 'CONVERT_PINYIN_REQUEST';\nexport const CONVERT_PINYIN_SUCCESS = 'CONVERT_PINYIN_SUCCESS';\nexport const CONVERT_PINYIN_FAILURE = 'CONVERT_PINYIN_FAILURE';\nexport const CONVERT_RESET_REQUEST = 'CONVERT_RESET_REQUEST';\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_POST_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.singlePost = action.data;\n      break;\n\n    case LOAD_POST_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      draft.addPostDone = false;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = action.data;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.currentHashtags = [];\n      draft.mainPosts.unshift(action.data);\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      draft.addCommentLoading = false;\n      draft.addCommentDone = true; // comment 추가\n\n      break;\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case REMOVE_COMMENT_REQUEST:\n      draft.removeCommentLoading = true;\n      draft.removeCommentDone = false;\n      draft.removeCommentError = null;\n      break;\n\n    case REMOVE_COMMENT_SUCCESS:\n      draft.removeCommentLoading = false;\n      draft.removeCommentDone = true; // comment 지우기\n\n      break;\n\n    case REMOVE_COMMENT_FAILURE:\n      draft.removeCommentLoading = false;\n      draft.removeCommentError = action.error;\n      break;\n\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n\n    case LIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostLoading = false;\n      draft.unlikePostError = action.error;\n      break;\n\n    case ADD_HASHTAG_REQUEST:\n      draft.currentHashtags.push(action.data);\n      break;\n\n    case REMOVE_HASHTAG_REQUEST:\n      draft.currentHashtags = draft.currentHashtags.filter(v => v !== action.data);\n      break;\n\n    case CONVERT_PINYIN_REQUEST:\n      draft.convertLoading = true;\n      draft.convertDone = false;\n      draft.convertError = null;\n      break;\n\n    case CONVERT_PINYIN_SUCCESS:\n      draft.convertLoading = false;\n      draft.convertDone = true;\n      draft.convertedPinyin = action.data;\n      break;\n\n    case CONVERT_PINYIN_FAILURE:\n      draft.convertLoading = false;\n      draft.convertError = action.error;\n      break;\n\n    case CONVERT_RESET_REQUEST:\n      draft.convertDone = false;\n      draft.convertError = null;\n      draft.convertedPinyin = null;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/reducers/post.js"],"names":["produce","initialState","mainPosts","singlePost","currentHashtags","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","removeCommentLoading","removeCommentDone","removeCommentError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","convertLoading","convertDone","convertError","convertedPinyin","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_HASHTAG_REQUEST","REMOVE_HASHTAG_REQUEST","CONVERT_PINYIN_REQUEST","CONVERT_PINYIN_SUCCESS","CONVERT_PINYIN_FAILURE","CONVERT_RESET_REQUEST","reducer","state","action","draft","type","data","error","unshift","filter","v","id","PostId","post","find","Likers","push","UserId"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  singlePost: null,\r\n  currentHashtags: [],\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  removeCommentLoading: false,\r\n  removeCommentDone: false,\r\n  removeCommentError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  convertLoading: false,\r\n  convertDone: false,\r\n  convertError: null,\r\n  convertedPinyin: null,\r\n};\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\r\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\r\nexport const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_HASHTAG_REQUEST = 'ADD_HASHTAG_REQUEST';\r\nexport const REMOVE_HASHTAG_REQUEST = 'REMOVE_HASHTAG_REQUEST';\r\n\r\nexport const CONVERT_PINYIN_REQUEST = 'CONVERT_PINYIN_REQUEST';\r\nexport const CONVERT_PINYIN_SUCCESS = 'CONVERT_PINYIN_SUCCESS';\r\nexport const CONVERT_PINYIN_FAILURE = 'CONVERT_PINYIN_FAILURE';\r\n\r\nexport const CONVERT_RESET_REQUEST = 'CONVERT_RESET_REQUEST';\r\n\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostDone = true;\r\n        draft.singlePost = action.data;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        draft.addPostDone = false;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = action.data;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.currentHashtags = [];\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        // comment 추가\r\n        break;\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case REMOVE_COMMENT_REQUEST:\r\n        draft.removeCommentLoading = true;\r\n        draft.removeCommentDone = false;\r\n        draft.removeCommentError = null;\r\n        break;\r\n      case REMOVE_COMMENT_SUCCESS:\r\n        draft.removeCommentLoading = false;\r\n        draft.removeCommentDone = true;\r\n        // comment 지우기\r\n        break;\r\n      case REMOVE_COMMENT_FAILURE:\r\n        draft.removeCommentLoading = false;\r\n        draft.removeCommentError = action.error;\r\n        break;\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers.push({ id: action.data.UserId });\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      }\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostDone = false;\r\n        draft.unlikePostError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n      }\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n      case ADD_HASHTAG_REQUEST:\r\n        draft.currentHashtags.push(action.data);\r\n        break;\r\n      case REMOVE_HASHTAG_REQUEST:\r\n        draft.currentHashtags = draft.currentHashtags.filter(\r\n          (v) => v !== action.data\r\n        );\r\n        break;\r\n      case CONVERT_PINYIN_REQUEST:\r\n        draft.convertLoading = true;\r\n        draft.convertDone = false;\r\n        draft.convertError = null;\r\n        break;\r\n      case CONVERT_PINYIN_SUCCESS:\r\n        draft.convertLoading = false;\r\n        draft.convertDone = true;\r\n        draft.convertedPinyin = action.data;\r\n        break;\r\n      case CONVERT_PINYIN_FAILURE:\r\n        draft.convertLoading = false;\r\n        draft.convertError = action.error;\r\n        break;\r\n      case CONVERT_RESET_REQUEST:\r\n        draft.convertDone = false;\r\n        draft.convertError = null;\r\n        draft.convertedPinyin = null;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}