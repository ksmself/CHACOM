{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, call, put } from '@redux-saga/core/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, CONVERT_PINYIN_FAILURE, CONVERT_PINYIN_REQUEST, CONVERT_PINYIN_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    }); // yield put({\n    //   type: ADD_POST_TO_ME,\n    //   data: result.data,\n    // });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    }); // yield put({\n    //   type: REMOVE_POST_OF_ME, // REMOVE_POST_OF_ME\n    //   data: result.data,\n    // });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction convertPinyinAPI(data) {\n  return axios.post('/post/convert/pinyin', data);\n}\n\nfunction* convertPinyin(action) {\n  try {\n    const result = yield call(convertPinyinAPI, action.data);\n    yield put({\n      type: CONVERT_PINYIN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CONVERT_PINYIN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchConvertPinyin() {\n  yield takeLatest(CONVERT_PINYIN_REQUEST, convertPinyin);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadPost), fork(watchLoadPosts), fork(watchAddPost), fork(watchRemovePost), fork(watchLikePost), fork(watchUnLikePost), fork(watchConvertPinyin)]);\n}","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/sagas/post.js"],"names":["axios","all","fork","takeLatest","call","put","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","CONVERT_PINYIN_FAILURE","CONVERT_PINYIN_REQUEST","CONVERT_PINYIN_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostAPI","data","get","loadPost","action","result","type","err","console","error","response","loadPostsAPI","loadPosts","addPostAPI","post","addPost","removePostAPI","delete","removePost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","convertPinyinAPI","convertPinyin","watchLoadPost","watchLoadPosts","watchAddPost","watchRemovePost","watchLikePost","watchUnLikePost","watchConvertPinyin","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, takeLatest, call, put } from '@redux-saga/core/effects';\r\nimport {\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  CONVERT_PINYIN_FAILURE,\r\n  CONVERT_PINYIN_REQUEST,\r\n  CONVERT_PINYIN_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LOAD_POSTS_FAILURE,\r\n  LOAD_POSTS_REQUEST,\r\n  LOAD_POSTS_SUCCESS,\r\n  LOAD_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction loadPostAPI(data) {\r\n  return axios.get(`/post/${data}`);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostsAPI(data) {\r\n  return axios.get('/posts', data);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    // yield put({\r\n    //   type: ADD_POST_TO_ME,\r\n    //   data: result.data,\r\n    // });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    // const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    // yield put({\r\n    //   type: REMOVE_POST_OF_ME, // REMOVE_POST_OF_ME\r\n    //   data: result.data,\r\n    // });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction convertPinyinAPI(data) {\r\n  return axios.post('/post/convert/pinyin', data);\r\n}\r\n\r\nfunction* convertPinyin(action) {\r\n  try {\r\n    const result = yield call(convertPinyinAPI, action.data);\r\n    yield put({\r\n      type: CONVERT_PINYIN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: CONVERT_PINYIN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnLikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchConvertPinyin() {\r\n  yield takeLatest(CONVERT_PINYIN_REQUEST, convertPinyin);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchLoadPost),\r\n    fork(watchLoadPosts),\r\n    fork(watchAddPost),\r\n    fork(watchRemovePost),\r\n    fork(watchLikePost),\r\n    fork(watchUnLikePost),\r\n    fork(watchConvertPinyin),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}