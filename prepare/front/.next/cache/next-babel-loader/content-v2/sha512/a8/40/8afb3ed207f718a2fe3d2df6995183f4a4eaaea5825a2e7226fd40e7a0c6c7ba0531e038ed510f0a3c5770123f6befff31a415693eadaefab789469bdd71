{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\write.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: none;\\n  width: 220px;\\n  font-size: 13px;\\n  color: #fff;\\n  background-color: #000;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  // display: inline-flex;\\n  align-items: center;\\n  flex-wrap: nowrap;\\n\\n  button {\\n    margin-right: 5px;\\n    margin-bottom: 5px;\\n    font-size: 12px;\\n    border: 1px solid #d3adf7;\\n    border-radius: 2px;\\n    color: #531dab;\\n    background-color: #f9f0ff;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0 10px 0 21px;\\n\\n  input {\\n    font-size: 15px;\\n    border: none;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: calc(100% - 20px);\\n  margin: 0 10px 20px;\\n  font-size: 30px;\\n  font-weight: 700;\\n  border: none;\\n\\n  &:focus {\\n    border: none;\\n    box-shadow: none;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 30px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Input } from 'antd';\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_HASHTAG_REQUEST } from '../reducers/post';\nvar TextArea = Input.TextArea;\nvar writePage = css(_templateObject());\nvar titleBox = css(_templateObject2());\nvar tagBox = css(_templateObject3());\nvar tags = css(_templateObject4());\nvar tagInfoBox = css(_templateObject5());\n\nvar Write = function Write() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      currentHashtags = _useSelector.currentHashtags;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      tag = _useInput2[0],\n      onChangeTag = _useInput2[1],\n      setTag = _useInput2[2];\n\n  var onFocusInput = useCallback(function () {\n    document.getElementById('tag-info').style.display = 'block';\n  }, []);\n  var onBlurInput = useCallback(function () {\n    document.getElementById('tag-info').style.display = 'none';\n  }, []);\n  var onKeyPressTag = useCallback(function (e) {\n    if (e.key === 'Enter' || e.key === ',') {\n      e.preventDefault(); // 빈칸으로 입력하지 않았을때만 해시태그에 추가\n\n      if (tag.trim() !== '') {\n        dispatch({\n          type: ADD_HASHTAG_REQUEST,\n          data: tag\n        });\n      }\n\n      setTag('');\n    }\n  }, [tag]);\n  return _jsxDEV(\"div\", {\n    css: writePage,\n    children: [_jsxDEV(TextArea, {\n      css: titleBox,\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      autoSize: {\n        minRows: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, _this), _jsxDEV(\"div\", {\n      css: tagBox,\n      children: [_jsxDEV(\"div\", {\n        css: tags,\n        children: currentHashtags.map(function (v) {\n          return _jsxDEV(\"button\", {\n            children: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 20\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, _this), _jsxDEV(\"input\", {\n        placeholder: \"\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        value: tag,\n        onChange: onChangeTag,\n        onKeyPress: onKeyPressTag,\n        onFocus: onFocusInput,\n        onBlur: onBlurInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this), _jsxDEV(\"div\", {\n        id: \"tag-info\",\n        css: tagInfoBox,\n        children: \"\\uC27C\\uD45C \\uD639\\uC740 \\uC5D4\\uD130\\uB97C \\uC785\\uB825\\uD558\\uC5EC \\uD0DC\\uADF8\\uB97C \\uB4F1\\uB85D\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB4F1\\uB85D\\uB41C \\uD0DC\\uADF8\\uB97C \\uD074\\uB9AD\\uD558\\uBA74 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Write, \"zZZxXMWtOIJ3vYwW9PJvjKlSNAo=\", false, function () {\n  return [useDispatch, useSelector, useInput];\n});\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/write.js"],"names":["css","Input","useCallback","useDispatch","useSelector","useInput","ADD_HASHTAG_REQUEST","TextArea","writePage","titleBox","tagBox","tags","tagInfoBox","Write","dispatch","state","post","currentHashtags","tag","onChangeTag","setTag","onFocusInput","document","getElementById","style","display","onBlurInput","onKeyPressTag","e","key","preventDefault","trim","type","data","minRows","map","v"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { Input } from 'antd';\r\nimport { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useInput from '../hooks/useInput';\r\nimport { ADD_HASHTAG_REQUEST } from '../reducers/post';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst writePage = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst titleBox = css`\r\n  width: calc(100% - 20px);\r\n  margin: 0 10px 20px;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  border: none;\r\n\r\n  &:focus {\r\n    border: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst tagBox = css`\r\n  margin: 0 10px 0 21px;\r\n\r\n  input {\r\n    font-size: 15px;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst tags = css`\r\n  // display: inline-flex;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n\r\n  button {\r\n    margin-right: 5px;\r\n    margin-bottom: 5px;\r\n    font-size: 12px;\r\n    border: 1px solid #d3adf7;\r\n    border-radius: 2px;\r\n    color: #531dab;\r\n    background-color: #f9f0ff;\r\n  }\r\n`;\r\n\r\nconst tagInfoBox = css`\r\n  display: none;\r\n  width: 220px;\r\n  font-size: 13px;\r\n  color: #fff;\r\n  background-color: #000;\r\n`;\r\n\r\nconst Write = () => {\r\n  const dispatch = useDispatch();\r\n  const { currentHashtags } = useSelector((state) => state.post);\r\n\r\n  const [tag, onChangeTag, setTag] = useInput('');\r\n\r\n  const onFocusInput = useCallback(() => {\r\n    document.getElementById('tag-info').style.display = 'block';\r\n  }, []);\r\n  const onBlurInput = useCallback(() => {\r\n    document.getElementById('tag-info').style.display = 'none';\r\n  }, []);\r\n\r\n  const onKeyPressTag = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter' || e.key === ',') {\r\n        e.preventDefault();\r\n        // 빈칸으로 입력하지 않았을때만 해시태그에 추가\r\n        if (tag.trim() !== '') {\r\n          dispatch({\r\n            type: ADD_HASHTAG_REQUEST,\r\n            data: tag,\r\n          });\r\n        }\r\n        setTag('');\r\n      }\r\n    },\r\n    [tag]\r\n  );\r\n\r\n  return (\r\n    <div css={writePage}>\r\n      <TextArea\r\n        css={titleBox}\r\n        placeholder=\"제목을 입력해주세요\"\r\n        autoSize={{ minRows: 1 }}\r\n      />\r\n      <div css={tagBox}>\r\n        <div css={tags}>\r\n          {currentHashtags.map((v) => {\r\n            return <button>{v}</button>;\r\n          })}\r\n        </div>\r\n        <input\r\n          placeholder=\"태그를 입력해주세요\"\r\n          value={tag}\r\n          onChange={onChangeTag}\r\n          onKeyPress={onKeyPressTag}\r\n          onFocus={onFocusInput}\r\n          onBlur={onBlurInput}\r\n        />\r\n        <div id=\"tag-info\" css={tagInfoBox}>\r\n          쉼표 혹은 엔터를 입력하여 태그를 등록할 수 있습니다. 등록된 태그를\r\n          클릭하면 삭제됩니다.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n"]},"metadata":{},"sourceType":"module"}