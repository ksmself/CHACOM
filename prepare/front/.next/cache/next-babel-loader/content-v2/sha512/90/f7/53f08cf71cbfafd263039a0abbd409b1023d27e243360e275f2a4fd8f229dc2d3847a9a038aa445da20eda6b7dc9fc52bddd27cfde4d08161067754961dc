{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\CommentList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 10px;\\n\\n  button {\\n    padding: 4px 6px;\\n    font-weight: 700;\\n    border: none;\\n    color: #3a18ff;\\n\\n    &:hover {\\n      color: #3a18ff;\\n      border: none;\\n      cursor: pointer;\\n    }\\n\\n    &:focus {\\n      color: #3a18ff;\\n      border: none;\\n    }\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 1px;\\n  background-color: #d9d9d9;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 8px;\\n  font-size: 17px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  color: #646a70;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-right: 3px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-right: 3px;\\n  font-weight: 700;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-bottom: 5px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px 12px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 25px;\\n  padding: 15px 5px 0;\\n  border: 1px solid #755eff;\\n  border-radius: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport Link from 'next/link';\nimport { Button } from 'antd';\nimport { PlusCircleOutlined } from '@ant-design/icons';\ndayjs.locale('ko');\nvar commentBox = css(_templateObject());\nvar commentItem = css(_templateObject2());\nvar commentInfo = css(_templateObject3());\nvar commentInfoWriter = css(_templateObject4());\nvar commentInfoBullet = css(_templateObject5());\nvar commentInfoDate = css(_templateObject6());\nvar commentContent = css(_templateObject7());\nvar divideLine = css(_templateObject8());\nvar replyBtn = css(_templateObject9());\n\nvar CommentList = function CommentList(_ref) {\n  _s();\n\n  var comments = _ref.comments;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useState2 = useState('답글 달기'),\n      replyBtnText = _useState2[0],\n      setReplyBtnText = _useState2[1];\n\n  var onClickReply = useCallback(function () {\n    if (replyBtnText === '답글 달기') setReplyBtnText(function (prev) {\n      return '숨기기';\n    });else setReplyBtnText(function (prev) {\n      return '답글 달기';\n    });\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, [replyBtnText]);\n  return _jsxDEV(\"ul\", {\n    css: commentBox,\n    children: comments.map(function (comment, index) {\n      var day;\n      var secondPassed = dayjs().diff(dayjs(comment.createdAt), 'seconds');\n      var minutedPassed = dayjs().diff(dayjs(comment.createdAt), 'minutes');\n      var hourPassed = dayjs().diff(dayjs(comment.createdAt), 'hours');\n      var dayPassed = dayjs().diff(dayjs(comment.createdAt), 'days');\n      if (secondPassed < 60) day = '방금 전';else if (minutedPassed < 60) day = minutedPassed + '분 전';else if (hourPassed < 24) day = hourPassed + '시간 전';else if (dayPassed <= 7) day = dayPassed + '일 전';else day = dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일');\n      return _jsxDEV(\"li\", {\n        css: commentItem,\n        children: [_jsxDEV(\"div\", {\n          css: commentInfo,\n          children: [_jsxDEV(\"span\", {\n            css: commentInfoWriter,\n            children: _jsxDEV(Link, {\n              href: \"/user/\".concat(comment.UserId),\n              children: _jsxDEV(\"a\", {\n                children: comment.User.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, _this), _jsxDEV(\"span\", {\n            css: commentInfoBullet,\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, _this), _jsxDEV(\"span\", {\n            css: commentInfoDate,\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, _this), _jsxDEV(\"div\", {\n          css: commentContent,\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, _this), _jsxDEV(\"div\", {\n          css: replyBtn,\n          children: _jsxDEV(Button, {\n            icon: _jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, _this),\n            onClick: onClickReply,\n            children: replyBtnText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, _this), comments.length > 1 && index < comments.length - 1 && _jsxDEV(\"div\", {\n          css: divideLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, _this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentList, \"XPH0sAsVLur6umsBtUD+EnrR/gI=\");\n\n_c = CommentList;\nexport default CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/CommentList.js"],"names":["css","useCallback","useEffect","useState","dayjs","Link","Button","PlusCircleOutlined","locale","commentBox","commentItem","commentInfo","commentInfoWriter","commentInfoBullet","commentInfoDate","commentContent","divideLine","replyBtn","CommentList","comments","commentFormOpened","setCommentFormOpened","replyBtnText","setReplyBtnText","onClickReply","prev","map","comment","index","day","secondPassed","diff","createdAt","minutedPassed","hourPassed","dayPassed","singlePost","format","UserId","User","nickname","content","length","id"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport Link from 'next/link';\r\nimport { Button } from 'antd';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst commentBox = css`\r\n  margin-bottom: 25px;\r\n  padding: 15px 5px 0;\r\n  border: 1px solid #755eff;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst commentItem = css`\r\n  padding: 10px 12px;\r\n`;\r\n\r\nconst commentInfo = css`\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst commentInfoWriter = css`\r\n  margin-right: 3px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst commentInfoBullet = css`\r\n  margin-right: 3px;\r\n`;\r\n\r\nconst commentInfoDate = css`\r\n  color: #646a70;\r\n`;\r\n\r\nconst commentContent = css`\r\n  margin-bottom: 8px;\r\n  font-size: 17px;\r\n`;\r\n\r\nconst divideLine = css`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: #d9d9d9;\r\n`;\r\n\r\nconst replyBtn = css`\r\n  margin-bottom: 10px;\r\n\r\n  button {\r\n    padding: 4px 6px;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: #3a18ff;\r\n\r\n    &:hover {\r\n      color: #3a18ff;\r\n      border: none;\r\n      cursor: pointer;\r\n    }\r\n\r\n    &:focus {\r\n      color: #3a18ff;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CommentList = ({ comments }) => {\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const [replyBtnText, setReplyBtnText] = useState('답글 달기');\r\n  const onClickReply = useCallback(() => {\r\n    if (replyBtnText === '답글 달기') setReplyBtnText((prev) => '숨기기');\r\n    else setReplyBtnText((prev) => '답글 달기');\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, [replyBtnText]);\r\n\r\n  return (\r\n    <ul css={commentBox}>\r\n      {comments.map((comment, index) => {\r\n        let day;\r\n        const secondPassed = dayjs().diff(dayjs(comment.createdAt), 'seconds');\r\n        const minutedPassed = dayjs().diff(dayjs(comment.createdAt), 'minutes');\r\n        const hourPassed = dayjs().diff(dayjs(comment.createdAt), 'hours');\r\n        const dayPassed = dayjs().diff(dayjs(comment.createdAt), 'days');\r\n\r\n        if (secondPassed < 60) day = '방금 전';\r\n        else if (minutedPassed < 60) day = minutedPassed + '분 전';\r\n        else if (hourPassed < 24) day = hourPassed + '시간 전';\r\n        else if (dayPassed <= 7) day = dayPassed + '일 전';\r\n        else day = dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일');\r\n\r\n        return (\r\n          <li css={commentItem} key={comment.id}>\r\n            <div css={commentInfo}>\r\n              <span css={commentInfoWriter}>\r\n                <Link href={`/user/${comment.UserId}`}>\r\n                  <a>{comment.User.nickname}</a>\r\n                </Link>\r\n              </span>\r\n              <span css={commentInfoBullet}>·</span>\r\n              <span css={commentInfoDate}>{day}</span>\r\n            </div>\r\n            <div css={commentContent}>{comment.content}</div>\r\n            <div css={replyBtn}>\r\n              <Button icon={<PlusCircleOutlined />} onClick={onClickReply}>\r\n                {replyBtnText}\r\n              </Button>\r\n            </div>\r\n            {comments.length > 1 && index < comments.length - 1 && (\r\n              <div css={divideLine}></div>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n"]},"metadata":{},"sourceType":"module"}