{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\write.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Input } from 'antd';\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_HASHTAG_REQUEST, REMOVE_HASHTAG_REQUEST } from '../reducers/post';\nconst {\n  TextArea\n} = Input;\nconst writePage = css`\n  display: flex;\n  flex-direction: column;\n  margin-top: 30px;\n`;\nconst titleBox = css`\n  width: calc(100% - 20px);\n  margin: 0 10px 20px;\n  font-size: 30px;\n  font-weight: 700;\n  border: none;\n\n  &:focus {\n    border: none;\n    box-shadow: none;\n  }\n`;\nconst tagBox = css`\n  margin: 0 10px 0 21px;\n`;\nconst tags = css`\n  align-items: center;\n  flex-wrap: nowrap;\n\n  button {\n    margin-right: 5px;\n    margin-bottom: 5px;\n    font-size: 14px;\n    border: 1px solid #d3adf7;\n    border-radius: 2px;\n    color: #531dab;\n    background-color: #f9f0ff;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  input {\n    font-size: 14px;\n    border: none;\n  }\n`;\nconst tagInfoBox = css`\n  display: none;\n  width: 220px;\n  padding: 5px;\n  font-size: 13px;\n  color: #fff;\n  background-color: #3a18ff;\n`;\n\nconst Write = () => {\n  const dispatch = useDispatch();\n  const {\n    currentHashtags\n  } = useSelector(state => state.post);\n  const [title, onChangeTitle] = useInput('');\n  const [tag, onChangeTag, setTag] = useInput('');\n  const onFocusInput = useCallback(() => {\n    document.getElementById('tag-info').style.display = 'block';\n  }, []);\n  const onBlurInput = useCallback(() => {\n    document.getElementById('tag-info').style.display = 'none';\n  }, []);\n  const onKeyPressTag = useCallback(e => {\n    if (e.key === 'Enter' || e.key === ',') {\n      e.preventDefault(); // 빈칸으로 입력하지 않았을때만 해시태그에 추가\n\n      if (tag.trim() !== '') {\n        // 이미 있는 해시태그가 아니라면\n        if (!currentHashtags.includes(tag)) {\n          if (tag[0] === '#') {\n            dispatch({\n              type: ADD_HASHTAG_REQUEST,\n              data: tag.slice(1)\n            });\n          } else {\n            dispatch({\n              type: ADD_HASHTAG_REQUEST,\n              data: tag\n            });\n          }\n        }\n      }\n\n      setTag('');\n    }\n  }, [tag]);\n  const onClickTag = useCallback(v => {\n    console.log(v);\n    dispatch({\n      type: REMOVE_HASHTAG_REQUEST,\n      data: v\n    });\n  }, []);\n  return _jsxDEV(\"div\", {\n    css: writePage,\n    children: [_jsxDEV(TextArea, {\n      css: titleBox,\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      value: title,\n      onChange: onChangeTitle,\n      autoSize: {\n        minRows: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: tagBox,\n      children: [_jsxDEV(\"div\", {\n        css: tags,\n        children: [currentHashtags.map((v, index) => {\n          return _jsxDEV(\"button\", {\n            onClick: () => onClickTag(v),\n            children: v\n          }, v, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this);\n        }), _jsxDEV(\"input\", {\n          placeholder: \"\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n          value: tag,\n          onChange: onChangeTag,\n          onKeyPress: onKeyPressTag,\n          onFocus: onFocusInput,\n          onBlur: onBlurInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), _jsxDEV(\"div\", {\n        id: \"tag-info\",\n        css: tagInfoBox,\n        children: \"\\uC27C\\uD45C \\uD639\\uC740 \\uC5D4\\uD130\\uB97C \\uC785\\uB825\\uD558\\uC5EC \\uD0DC\\uADF8\\uB97C \\uB4F1\\uB85D\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB4F1\\uB85D\\uB41C \\uD0DC\\uADF8\\uB97C \\uD074\\uB9AD\\uD558\\uBA74 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Write;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/write.js"],"names":["css","Input","useCallback","useDispatch","useSelector","useInput","ADD_HASHTAG_REQUEST","REMOVE_HASHTAG_REQUEST","TextArea","writePage","titleBox","tagBox","tags","tagInfoBox","Write","dispatch","currentHashtags","state","post","title","onChangeTitle","tag","onChangeTag","setTag","onFocusInput","document","getElementById","style","display","onBlurInput","onKeyPressTag","e","key","preventDefault","trim","includes","type","data","slice","onClickTag","v","console","log","minRows","map","index"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { Input } from 'antd';\r\nimport { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useInput from '../hooks/useInput';\r\nimport { ADD_HASHTAG_REQUEST, REMOVE_HASHTAG_REQUEST } from '../reducers/post';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst writePage = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst titleBox = css`\r\n  width: calc(100% - 20px);\r\n  margin: 0 10px 20px;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  border: none;\r\n\r\n  &:focus {\r\n    border: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst tagBox = css`\r\n  margin: 0 10px 0 21px;\r\n`;\r\n\r\nconst tags = css`\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n\r\n  button {\r\n    margin-right: 5px;\r\n    margin-bottom: 5px;\r\n    font-size: 14px;\r\n    border: 1px solid #d3adf7;\r\n    border-radius: 2px;\r\n    color: #531dab;\r\n    background-color: #f9f0ff;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  input {\r\n    font-size: 14px;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst tagInfoBox = css`\r\n  display: none;\r\n  width: 220px;\r\n  padding: 5px;\r\n  font-size: 13px;\r\n  color: #fff;\r\n  background-color: #3a18ff;\r\n`;\r\n\r\nconst Write = () => {\r\n  const dispatch = useDispatch();\r\n  const { currentHashtags } = useSelector((state) => state.post);\r\n\r\n  const [title, onChangeTitle] = useInput('');\r\n  const [tag, onChangeTag, setTag] = useInput('');\r\n\r\n  const onFocusInput = useCallback(() => {\r\n    document.getElementById('tag-info').style.display = 'block';\r\n  }, []);\r\n  const onBlurInput = useCallback(() => {\r\n    document.getElementById('tag-info').style.display = 'none';\r\n  }, []);\r\n\r\n  const onKeyPressTag = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter' || e.key === ',') {\r\n        e.preventDefault();\r\n        // 빈칸으로 입력하지 않았을때만 해시태그에 추가\r\n        if (tag.trim() !== '') {\r\n          // 이미 있는 해시태그가 아니라면\r\n          if (!currentHashtags.includes(tag)) {\r\n            if (tag[0] === '#') {\r\n              dispatch({\r\n                type: ADD_HASHTAG_REQUEST,\r\n                data: tag.slice(1),\r\n              });\r\n            } else {\r\n              dispatch({\r\n                type: ADD_HASHTAG_REQUEST,\r\n                data: tag,\r\n              });\r\n            }\r\n          }\r\n        }\r\n        setTag('');\r\n      }\r\n    },\r\n    [tag]\r\n  );\r\n\r\n  const onClickTag = useCallback((v) => {\r\n    console.log(v);\r\n    dispatch({\r\n      type: REMOVE_HASHTAG_REQUEST,\r\n      data: v,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div css={writePage}>\r\n      <TextArea\r\n        css={titleBox}\r\n        placeholder=\"제목을 입력해주세요\"\r\n        value={title}\r\n        onChange={onChangeTitle}\r\n        autoSize={{ minRows: 1 }}\r\n      />\r\n      <div css={tagBox}>\r\n        <div css={tags}>\r\n          {currentHashtags.map((v, index) => {\r\n            return (\r\n              <button key={v} onClick={() => onClickTag(v)}>\r\n                {v}\r\n              </button>\r\n            );\r\n          })}\r\n          <input\r\n            placeholder=\"태그를 입력해주세요\"\r\n            value={tag}\r\n            onChange={onChangeTag}\r\n            onKeyPress={onKeyPressTag}\r\n            onFocus={onFocusInput}\r\n            onBlur={onBlurInput}\r\n          />\r\n        </div>\r\n        <div id=\"tag-info\" css={tagInfoBox}>\r\n          쉼표 혹은 엔터를 입력하여 태그를 등록할 수 있습니다. 등록된 태그를\r\n          클릭하면 삭제됩니다.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n"]},"metadata":{},"sourceType":"module"}