{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\ExpressionBox.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  svg {\\n    font-size: 50px;\\n    color: #3a18ff;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-bottom: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport ExpressionInput from './ExpressionInput';\nvar expressionBox = css(_templateObject());\nvar plusBtn = css(_templateObject2());\n\nvar ExpressionBox = function ExpressionBox() {\n  _s();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(1),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var onClickPlus = useCallback(function () {\n    setCount(function (prev) {\n      return prev + 1;\n    });\n  }, []);\n  useEffect(function () {\n    console.log(count);\n  }, [count]);\n  return _jsxDEV(_Fragment, {\n    children: _jsxDEV(\"div\", {\n      css: expressionBox,\n      id: \"expression-box\",\n      children: _jsxDEV(Form, {\n        form: form,\n        children: [_toConsumableArray(Array(count)).map(function (v) {\n          return _jsxDEV(Form.Item, {\n            name: \"pinyin\",\n            label: \"\\uD55C\\uC5B4\\uBCD1\\uC74C\",\n            rules: [{\n              required: true,\n              message: '한어병음을 입력해주세요!'\n            }],\n            children: _jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, _this)\n          }, v, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, _this);\n        }), _jsxDEV(PlusCircleFilled, {\n          css: plusBtn,\n          onClick: onClickPlus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this), _jsxDEV(Form.Item, {\n          children: _jsxDEV(Button, {\n            htmlType: \"submit\",\n            children: \"\\uC644\\uB8CC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(ExpressionBox, \"llQOYkn5Jvb1fcSAGFzWJtoL6rs=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = ExpressionBox;\nexport default ExpressionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpressionBox\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/ExpressionBox.js"],"names":["css","useCallback","useEffect","useState","Form","Input","Button","PlusCircleFilled","ExpressionInput","expressionBox","plusBtn","ExpressionBox","useForm","form","count","setCount","onClickPlus","prev","console","log","Array","map","v","required","message"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,IAAMC,aAAa,GAAGT,GAAH,mBAAnB;AAOA,IAAMU,OAAO,GAAGV,GAAH,oBAAb;;AAOA,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,sBACXP,IAAI,CAACQ,OAAL,EADW;AAAA;AAAA,MACnBC,IADmB;;AAAA,kBAGAV,QAAQ,CAAC,CAAD,CAHR;AAAA,MAGnBW,KAHmB;AAAA,MAGZC,QAHY;;AAK1B,MAAMC,WAAW,GAAGf,WAAW,CAAC,YAAM;AACpCc,IAAAA,QAAQ,CAAC,UAACE,IAAD;AAAA,aAAUA,IAAI,GAAG,CAAjB;AAAA,KAAD,CAAR;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,SACE;AAAA,cACE;AAAK,MAAA,GAAG,EAAEL,aAAV;AAAyB,MAAA,EAAE,EAAC,gBAA5B;AAAA,gBAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEI,IAAZ;AAAA,mBACG,mBAAIO,KAAK,CAACN,KAAD,CAAT,EAAkBO,GAAlB,CAAsB,UAACC,CAAD,EAAO;AAC5B,iBACE,QAAC,IAAD,CAAM,IAAN;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAC,0BAHR;AAIE,YAAA,KAAK,EAAE,CACL;AACEC,cAAAA,QAAQ,EAAE,IADZ;AAEEC,cAAAA,OAAO,EAAE;AAFX,aADK,CAJT;AAAA,sBAWE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAXF,aACOF,CADP;AAAA;AAAA;AAAA;AAAA,mBADF;AAeD,SAhBA,CADH,EAkBE,QAAC,gBAAD;AAAkB,UAAA,GAAG,EAAEZ,OAAvB;AAAgC,UAAA,OAAO,EAAEM;AAAzC;AAAA;AAAA;AAAA;AAAA,iBAlBF,EAmBE,QAAC,IAAD,CAAM,IAAN;AAAA,oBACE,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA8BD,CA3CD;;GAAML,a;UACWP,IAAI,CAACQ,O;;;KADhBD,a;AA6CN,eAAeA,aAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { PlusCircleFilled } from '@ant-design/icons';\r\nimport ExpressionInput from './ExpressionInput';\r\n\r\nconst expressionBox = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst plusBtn = css`\r\n  svg {\r\n    font-size: 50px;\r\n    color: #3a18ff;\r\n  }\r\n`;\r\n\r\nconst ExpressionBox = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [count, setCount] = useState(1);\r\n\r\n  const onClickPlus = useCallback(() => {\r\n    setCount((prev) => prev + 1);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(count);\r\n  }, [count]);\r\n\r\n  return (\r\n    <>\r\n      <div css={expressionBox} id=\"expression-box\">\r\n        {/* <ExpressionInput /> */}\r\n        <Form form={form}>\r\n          {[...Array(count)].map((v) => {\r\n            return (\r\n              <Form.Item\r\n                key={v}\r\n                name=\"pinyin\"\r\n                label=\"한어병음\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: '한어병음을 입력해주세요!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            );\r\n          })}\r\n          <PlusCircleFilled css={plusBtn} onClick={onClickPlus} />\r\n          <Form.Item>\r\n            <Button htmlType=\"submit\">완료</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpressionBox;\r\n"]},"metadata":{},"sourceType":"module"}