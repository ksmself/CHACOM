{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\WriteForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .ant-modal-close{\\n    position: relative; \\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Modal, Input } from 'antd';\nimport { createGlobalStyle } from 'styled-components';\nimport useInput from '../hooks/useInput';\nvar TextArea = Input.TextArea;\nvar Global = createGlobalStyle(_templateObject());\n_c = Global;\n\nvar WriteForm = function WriteForm(_ref) {\n  _s();\n\n  var visible = _ref.visible,\n      onCreate = _ref.onCreate,\n      onCancel = _ref.onCancel;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1];\n\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this), _jsxDEV(Modal, {\n      centered: true,\n      visible: visible,\n      onOk: onCreate,\n      onCancel: onCancel,\n      children: _jsxDEV(TextArea, {\n        value: text,\n        onChange: onChangeText,\n        placeholder: \"Controlled autosize\",\n        autoSize: {\n          minRows: 5,\n          maxRows: 7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(WriteForm, \"LEtVv46XwaGVY6EbHm3gg+vzC0c=\", false, function () {\n  return [useInput];\n});\n\n_c2 = WriteForm;\nexport default WriteForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Global\");\n$RefreshReg$(_c2, \"WriteForm\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/WriteForm.js"],"names":["css","Modal","Input","createGlobalStyle","useInput","TextArea","Global","WriteForm","visible","onCreate","onCancel","text","onChangeText","minRows","maxRows"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,MAA7B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;IAEQC,Q,GAAaH,K,CAAbG,Q;AAER,IAAMC,MAAM,GAAGH,iBAAH,mBAAZ;KAAMG,M;;AAMN,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAqC;AAAA;;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACxBN,QAAQ,CAAC,EAAD,CADgB;AAAA;AAAA,MAC9CO,IAD8C;AAAA,MACxCC,YADwC;;AAErD,SACE;AAAA,eACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,QAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,OAAO,EAAEJ,OAAzB;AAAkC,MAAA,IAAI,EAAEC,QAAxC;AAAkD,MAAA,QAAQ,EAAEC,QAA5D;AAAA,gBACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEC,IADT;AAEE,QAAA,QAAQ,EAAEC,YAFZ;AAGE,QAAA,WAAW,EAAC,qBAHd;AAIE,QAAA,QAAQ,EAAE;AAAEC,UAAAA,OAAO,EAAE,CAAX;AAAcC,UAAAA,OAAO,EAAE;AAAvB;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAaD,CAfD;;GAAMP,S;UACyBH,Q;;;MADzBG,S;AAiBN,eAAeA,SAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { Modal, Input } from 'antd';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst Global = createGlobalStyle`\r\n  .ant-modal-close{\r\n    position: relative; \r\n  }\r\n`;\r\n\r\nconst WriteForm = ({ visible, onCreate, onCancel }) => {\r\n  const [text, onChangeText] = useInput('');\r\n  return (\r\n    <>\r\n      <Global />\r\n      <Modal centered visible={visible} onOk={onCreate} onCancel={onCancel}>\r\n        <TextArea\r\n          value={text}\r\n          onChange={onChangeText}\r\n          placeholder=\"Controlled autosize\"\r\n          autoSize={{ minRows: 5, maxRows: 7 }}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WriteForm;\r\n"]},"metadata":{},"sourceType":"module"}