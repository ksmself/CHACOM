{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\write.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Input } from 'antd';\nimport { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nconst {\n  TextArea\n} = Input;\nconst writePage = css`\n  display: flex;\n  flex-direction: column;\n  margin-top: 30px;\n`;\nconst titleBox = css`\n  width: calc(100% - 20px);\n  margin: 0 10px 20px;\n  font-size: 30px;\n  font-weight: 700;\n  border: none;\n\n  &:focus {\n    border: none;\n    box-shadow: none;\n  }\n`;\nconst tagBox = css`\n  margin: 0 10px 0 21px;\n\n  input {\n    font-size: 15px;\n    border: none;\n  }\n`;\nconst tags = css`\n  display: inline-block;\n`;\nconst tagInfoBox = css`\n  display: none;\n  width: 220px;\n  font-size: 13px;\n  color: #fff;\n  background-color: #000;\n`;\n\nconst Write = () => {\n  const [tag, onChangeTag, setTag] = useInput('');\n  const onFocusInput = useCallback(() => {\n    document.getElementById('tag-info').style.display = 'block';\n  }, []);\n  const onBlurInput = useCallback(() => {\n    document.getElementById('tag-info').style.display = 'none';\n  }, []);\n  const onKeyPressTag = useCallback(e => {\n    console.log(e.key === 'Enter' || e.key === ',');\n  }, [tag]);\n  return _jsxDEV(\"div\", {\n    css: writePage,\n    children: [_jsxDEV(TextArea, {\n      css: titleBox,\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      autoSize: {\n        minRows: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: tagBox,\n      children: [_jsxDEV(\"div\", {\n        css: tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), _jsxDEV(\"input\", {\n        placeholder: \"\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        value: tag,\n        onChange: onChangeTag,\n        onKeyPress: onKeyPressTag,\n        onFocus: onFocusInput,\n        onBlur: onBlurInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), _jsxDEV(\"div\", {\n        id: \"tag-info\",\n        css: tagInfoBox,\n        children: \"\\uC27C\\uD45C \\uD639\\uC740 \\uC5D4\\uD130\\uB97C \\uC785\\uB825\\uD558\\uC5EC \\uD0DC\\uADF8\\uB97C \\uB4F1\\uB85D\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB4F1\\uB85D\\uB41C \\uD0DC\\uADF8\\uB97C \\uD074\\uB9AD\\uD558\\uBA74 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Write;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/write.js"],"names":["css","Input","useCallback","useInput","TextArea","writePage","titleBox","tagBox","tags","tagInfoBox","Write","tag","onChangeTag","setTag","onFocusInput","document","getElementById","style","display","onBlurInput","onKeyPressTag","e","console","log","key","minRows"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeH,KAArB;AAEA,MAAMI,SAAS,GAAGL,GAAI;AACtB;AACA;AACA;AACA,CAJA;AAMA,MAAMM,QAAQ,GAAGN,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMO,MAAM,GAAGP,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMQ,IAAI,GAAGR,GAAI;AACjB;AACA,CAFA;AAIA,MAAMS,UAAU,GAAGT,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMU,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,GAAD,EAAMC,WAAN,EAAmBC,MAAnB,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;AAEA,QAAMW,YAAY,GAAGZ,WAAW,CAAC,MAAM;AACrCa,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,OAApD;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAMC,WAAW,GAAGjB,WAAW,CAAC,MAAM;AACpCa,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,OAA1C,GAAoD,MAApD;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,QAAME,aAAa,GAAGlB,WAAW,CAC9BmB,CAAD,IAAO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,GAAF,KAAU,OAAV,IAAqBH,CAAC,CAACG,GAAF,KAAU,GAA3C;AACD,GAH8B,EAI/B,CAACb,GAAD,CAJ+B,CAAjC;AAOA,SACE;AAAK,IAAA,GAAG,EAAEN,SAAV;AAAA,eACE,QAAC,QAAD;AACE,MAAA,GAAG,EAAEC,QADP;AAEE,MAAA,WAAW,EAAC,yDAFd;AAGE,MAAA,QAAQ,EAAE;AAAEmB,QAAAA,OAAO,EAAE;AAAX;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,EAME;AAAK,MAAA,GAAG,EAAElB,MAAV;AAAA,iBACE;AAAK,QAAA,GAAG,EAAEC;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,QAAA,WAAW,EAAC,yDADd;AAEE,QAAA,KAAK,EAAEG,GAFT;AAGE,QAAA,QAAQ,EAAEC,WAHZ;AAIE,QAAA,UAAU,EAAEQ,aAJd;AAKE,QAAA,OAAO,EAAEN,YALX;AAME,QAAA,MAAM,EAAEK;AANV;AAAA;AAAA;AAAA;AAAA,cAFF,EAUE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAmB,QAAA,GAAG,EAAEV,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzCD;;AA2CA,eAAeC,KAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { Input } from 'antd';\r\nimport { useCallback } from 'react';\r\n\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst writePage = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst titleBox = css`\r\n  width: calc(100% - 20px);\r\n  margin: 0 10px 20px;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  border: none;\r\n\r\n  &:focus {\r\n    border: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst tagBox = css`\r\n  margin: 0 10px 0 21px;\r\n\r\n  input {\r\n    font-size: 15px;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst tags = css`\r\n  display: inline-block;\r\n`;\r\n\r\nconst tagInfoBox = css`\r\n  display: none;\r\n  width: 220px;\r\n  font-size: 13px;\r\n  color: #fff;\r\n  background-color: #000;\r\n`;\r\n\r\nconst Write = () => {\r\n  const [tag, onChangeTag, setTag] = useInput('');\r\n\r\n  const onFocusInput = useCallback(() => {\r\n    document.getElementById('tag-info').style.display = 'block';\r\n  }, []);\r\n  const onBlurInput = useCallback(() => {\r\n    document.getElementById('tag-info').style.display = 'none';\r\n  }, []);\r\n\r\n  const onKeyPressTag = useCallback(\r\n    (e) => {\r\n      console.log(e.key === 'Enter' || e.key === ',');\r\n    },\r\n    [tag]\r\n  );\r\n\r\n  return (\r\n    <div css={writePage}>\r\n      <TextArea\r\n        css={titleBox}\r\n        placeholder=\"제목을 입력해주세요\"\r\n        autoSize={{ minRows: 1 }}\r\n      />\r\n      <div css={tagBox}>\r\n        <div css={tags}></div>\r\n        <input\r\n          placeholder=\"태그를 입력해주세요\"\r\n          value={tag}\r\n          onChange={onChangeTag}\r\n          onKeyPress={onKeyPressTag}\r\n          onFocus={onFocusInput}\r\n          onBlur={onBlurInput}\r\n        />\r\n        <div id=\"tag-info\" css={tagInfoBox}>\r\n          쉼표 혹은 엔터를 입력하여 태그를 등록할 수 있습니다. 등록된 태그를\r\n          클릭하면 삭제됩니다.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n"]},"metadata":{},"sourceType":"module"}