{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\LikeBtn.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n  width: 80px;\\n  padding: 4px 12px;\\n  border: 3px solid #cfcfcf;\\n  border-radius: 20px;\\n\\n  @media (min-width: 768px) {\\n    width: 100px;\\n    border-radius: 25px;\\n  }\\n\\n  @media (min-width: 1024px) {\\n    width: 120px;\\n    border-radius: 30px;\\n  }\\n\\n  span {\\n    font-size: 18px;\\n\\n    @media (min-width: 768px) {\\n      font-size: 24px;\\n    }\\n\\n    @media (min-width: 1024px) {\\n      font-size: 30px;\\n    }\\n\\n    &:first-of-type:hover {\\n      cursor: pointer;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .ant-modal-confirm-body .ant-modal-confirm-title{\\n    font-weight: 700;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal } from 'antd';\nimport { HeartTwoTone, HeartOutlined } from '@ant-design/icons';\nimport { createGlobalStyle } from 'styled-components';\nimport { LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nvar Global = createGlobalStyle(_templateObject());\n_c = Global;\nvar likeBox = css(_templateObject2());\n\nvar LikeBtn = function LikeBtn(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(post.Likers.find(function (v) {\n    return v.id === id;\n  })),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var onLike = useCallback(function () {\n    if (!id) {\n      return Modal.error({\n        title: '로그인이 필요합니다.'\n      });\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onUnLike = useCallback(function () {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  useEffect(function () {\n    console.log(liked);\n  }, []);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this), _jsxDEV(\"div\", {\n      css: likeBox,\n      children: [liked ? _jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#ff748c\",\n        onClick: onUnLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, _this) : _jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, _this), _jsxDEV(\"span\", {\n        children: post.Likers ? post.Likers.length : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(LikeBtn, \"+dDaJpTlFsKcKAnXZDXlbzFHkI0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = LikeBtn;\nexport default LikeBtn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Global\");\n$RefreshReg$(_c2, \"LikeBtn\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/LikeBtn.js"],"names":["css","useCallback","useEffect","useState","useDispatch","useSelector","Modal","HeartTwoTone","HeartOutlined","createGlobalStyle","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","Global","likeBox","LikeBtn","post","dispatch","id","state","user","me","Likers","find","v","liked","setLiked","onLike","error","title","type","data","onUnLike","console","log","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,mBAA5C;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,kBAAvD;AAEA,IAAMC,MAAM,GAAGH,iBAAH,mBAAZ;KAAMG,M;AAMN,IAAMC,OAAO,GAAGb,GAAH,oBAAb;;AAoCA,IAAMc,OAAO,GAAG,SAAVA,OAAU,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC5B,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAMa,EAAE,GAAGZ,WAAW,CAAC,UAACa,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AAF4B,kBAGFd,QAAQ,CAACY,IAAI,CAACM,MAAL,CAAYC,IAAZ,CAAiB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACN,EAAF,KAASA,EAAhB;AAAA,GAAjB,CAAD,CAHN;AAAA,MAGrBO,KAHqB;AAAA,MAGdC,QAHc;;AAK5B,MAAMC,MAAM,GAAGzB,WAAW,CAAC,YAAM;AAC/B,QAAI,CAACgB,EAAL,EAAS;AACP,aAAOX,KAAK,CAACqB,KAAN,CAAY;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ,CAAP;AACD;;AACD,WAAOZ,QAAQ,CAAC;AACda,MAAAA,IAAI,EAAEnB,iBADQ;AAEdoB,MAAAA,IAAI,EAAEf,IAAI,CAACE;AAFG,KAAD,CAAf;AAID,GARyB,EAQvB,EARuB,CAA1B;AAUA,MAAMc,QAAQ,GAAG9B,WAAW,CAAC,YAAM;AACjCe,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAElB,mBADC;AAEPmB,MAAAA,IAAI,EAAEf,IAAI,CAACE;AAFJ,KAAD,CAAR;AAID,GAL2B,EAKzB,EALyB,CAA5B;AAOAf,EAAAA,SAAS,CAAC,YAAM;AACd8B,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA,eACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,MAAA,GAAG,EAAEX,OAAV;AAAA,iBACGW,KAAK,GACJ,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,SAA3B;AAAqC,QAAA,OAAO,EAAEO;AAA9C;AAAA;AAAA;AAAA;AAAA,eADI,GAGJ,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,eAJJ,EAME;AAAA,kBAAOX,IAAI,CAACM,MAAL,GAAcN,IAAI,CAACM,MAAL,CAAYa,MAA1B,GAAmC;AAA1C;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAaD,CAvCD;;GAAMpB,O;UACaV,W,EACNC,W;;;MAFPS,O;AAyCN,eAAeA,OAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from 'antd';\r\nimport { HeartTwoTone, HeartOutlined } from '@ant-design/icons';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\r\n\r\nconst Global = createGlobalStyle`\r\n  .ant-modal-confirm-body .ant-modal-confirm-title{\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst likeBox = css`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 80px;\r\n  padding: 4px 12px;\r\n  border: 3px solid #cfcfcf;\r\n  border-radius: 20px;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 100px;\r\n    border-radius: 25px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 120px;\r\n    border-radius: 30px;\r\n  }\r\n\r\n  span {\r\n    font-size: 18px;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 24px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 30px;\r\n    }\r\n\r\n    &:first-of-type:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LikeBtn = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const [liked, setLiked] = useState(post.Likers.find((v) => v.id === id));\r\n\r\n  const onLike = useCallback(() => {\r\n    if (!id) {\r\n      return Modal.error({ title: '로그인이 필요합니다.' });\r\n    }\r\n    return dispatch({\r\n      type: LIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  const onUnLike = useCallback(() => {\r\n    dispatch({\r\n      type: UNLIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(liked);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Global />\r\n      <div css={likeBox}>\r\n        {liked ? (\r\n          <HeartTwoTone twoToneColor=\"#ff748c\" onClick={onUnLike} />\r\n        ) : (\r\n          <HeartOutlined onClick={onLike} />\r\n        )}\r\n        <span>{post.Likers ? post.Likers.length : 0}</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LikeBtn;\r\n"]},"metadata":{},"sourceType":"module"}