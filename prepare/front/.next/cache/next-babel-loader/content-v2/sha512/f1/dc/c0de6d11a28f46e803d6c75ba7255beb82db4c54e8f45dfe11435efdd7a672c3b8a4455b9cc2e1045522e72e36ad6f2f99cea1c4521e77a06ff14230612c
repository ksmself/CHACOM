{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\signup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  .ant-modal-confirm-body-wrapper\\n    > .ant-modal-confirm-body\\n    > .ant-modal-confirm-title {\\n    font-weight: 700;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  padding-top: 25px;\\n\\n  .ant-form-item-control-input-content {\\n    display: flex;\\n    justify-content: center;\\n\\n    button {\\n      @media (min-width: 768px) {\\n        width: 130px;\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n\\n  .ant-input {\\n    width: 190px;\\n    margin-right: 10px;\\n\\n    @media (min-width: 768px) {\\n      width: 310px;\\n    }\\n\\n    @media (min-width: 1024px) {\\n      width: 410px;\\n    }\\n  }\\n\\n  button {\\n    padding: 4px 10px;\\n    font-weight: 700;\\n    border-color: #3a18ff;\\n\\n    @media (min-width: 768px) {\\n      height: 38px;\\n    }\\n  }\\n\\n  button:hover {\\n    color: #3a18ff;\\n    border-color: #3a18ff;\\n  }\\n\\n  button:focus {\\n    color: #3a18ff;\\n    border-color: #3a18ff;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 280px;\\n  margin: 40px auto 0;\\n\\n  @media (min-width: 768px) {\\n    width: 400px;\\n    margin-top: 70px;\\n  }\\n\\n  @media (min-width: 1024px) {\\n    width: 450px;\\n    margin-top: 60px;\\n  }\\n\\n  .ant-form-item {\\n    display: block;\\n\\n    @media (min-width: 768px) {\\n      margin-bottom: 50px;\\n    }\\n\\n    .ant-input {\\n      @media (min-width: 768px) {\\n        font-size: 16px;\\n      }\\n    }\\n  }\\n\\n  .ant-form-item-label {\\n    font-weight: 700;\\n\\n    label {\\n      @media (min-width: 768px) {\\n        margin-bottom: 10px;\\n        font-size: 18px;\\n      }\\n\\n      @media (min-width: 1024px) {\\n        margin-bottom: 16px;\\n        font-size: 22px;\\n      }\\n    }\\n\\n    label::after {\\n      content: '';\\n    }\\n  }\\n\\n  // \\uBE44\\uBC00\\uBC88\\uD638 & \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778 input \\uB192\\uC774\\n  .ant-input-affix-wrapper {\\n    height: 38px;\\n  }\\n\\n  .ant-form-item-has-error {\\n    margin-bottom: 10px;\\n\\n    @media (min-width: 768px) {\\n      margin-bottom: 28px;\\n    }\\n  }\\n\\n  .ant-btn-primary {\\n    width: 100px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 30px;\\n\\n  @media (min-width: 768px) {\\n    margin-top: 60px;\\n  }\\n\\n  @media (min-width: 1024px) {\\n    margin-top: 80px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useCallback, useEffect, useRef } from 'react';\nimport { Form, Input, Button, Modal, message } from 'antd';\nimport { createGlobalStyle } from 'styled-components';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TitleLogo from '../components/TitleLogo';\nimport { roundBtn } from '../components/styles';\nimport useInput from '../hooks/useInput';\nimport { CHECK_DUPLICATE_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\nvar headerStyle = css(_templateObject());\nvar formStyle = css(_templateObject2());\nvar idForm = css(_templateObject3());\nvar submitDiv = css(_templateObject4());\nvar Global = createGlobalStyle(_templateObject5()); // localhost:3000/signup\n\n_c = Global;\n\nvar SignUp = function SignUp() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      signUpDone = _useSelector.signUpDone,\n      isDuplicated = _useSelector.isDuplicated;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var idRef = useRef();\n  var router = useRouter();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      passwordCheck = _useInput6[0],\n      onChangePasswordCheck = _useInput6[1]; // const [password, setPassword] = useState('');\n  // const onChangePassword = useCallback(\n  //   (e) => {\n  //     setPassword(e.target.value.trim());\n  //     form.setFieldsValue({\n  //       password: e.target.value.trim(),\n  //     });\n  //     console.log(password);\n  //   },\n  //   [password]\n  // );\n  // const [passwordCheck, setPasswordCheck] = useState('');\n  // const onChangePasswordCheck = useCallback(\n  //   (e) => {\n  //     setPasswordCheck(e.target.value.trim());\n  //     form.setFieldsValue({\n  //       confirm: e.target.value.trim(),\n  //     });\n  //     console.log(passwordCheck);\n  //   },\n  //   [passwordCheck]\n  // );\n\n\n  var checkDuplicate = useCallback(function () {\n    dispatch({\n      type: CHECK_DUPLICATE_REQUEST\n    });\n    if (isDuplicated !== null && isDuplicated) duplicatedId();\n    if (isDuplicated !== null && !isDuplicated) nonDuplicatedId(); // null이라고 생각해서 계속,...\n  }, [isDuplicated]);\n\n  var duplicatedId = function duplicatedId() {\n    // setId((state) => '');\n    form.setFieldsValue({\n      id: ''\n    });\n    console.log(id);\n    Modal.error({\n      title: '이미 사용중인 아이디입니다.',\n      onOk: function onOk() {\n        idRef.current.focus();\n      }\n    });\n  };\n\n  var nonDuplicatedId = function nonDuplicatedId() {\n    var target = document.getElementById('submit-btn');\n    target.disabled = false;\n    Modal.success({\n      title: '사용 가능한 아이디입니다.'\n    });\n  };\n\n  var onFinish = useCallback(function () {\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        id: id,\n        password: password,\n        passwordCheck: passwordCheck\n      }\n    });\n  }, [id, password, passwordCheck]);\n  useEffect(function () {\n    if (signUpDone) {\n      var user = id;\n      message.success({\n        content: \"\".concat(user, \"\\uB2D8 \\uD68C\\uC6D0\\uAC00\\uC785\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),\n        className: 'custom-class',\n        style: {\n          marginTop: '40vh',\n          fontWeight: 700\n        },\n        duration: 2\n      });\n      router.replace('/');\n    }\n  }, [signUpDone]);\n  return _jsxDEV(\"div\", {\n    css: headerStyle,\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, _this), _jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, _this), _jsxDEV(Form, {\n      form: form,\n      css: formStyle,\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      children: [_jsxDEV(\"div\", {\n        children: _jsxDEV(Form.Item, {\n          name: \"id\",\n          label: \"\\uC544\\uC774\\uB514\",\n          rules: [{\n            min: 6,\n            message: '아이디는 6자 이상이어야 합니다.'\n          }, {\n            max: 11,\n            message: '11자 이내로 입력해주세요!'\n          }, {\n            required: true,\n            message: '아이디를 입력해주세요!'\n          }],\n          children: _jsxDEV(\"div\", {\n            css: idForm,\n            children: [_jsxDEV(Input, {\n              className: \"id-input\",\n              type: \"id\",\n              value: id,\n              onChange: onChangeId,\n              placeholder: \"6 ~ 11\\uC790 \\uBB38\\uC790, \\uC22B\\uC790, \\uAE30\\uD638\",\n              ref: idRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, _this), _jsxDEV(Button, {\n              onClick: checkDuplicate,\n              children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, _this), _jsxDEV(Form.Item, {\n        name: \"password\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        rules: [{\n          required: true,\n          message: '비밀번호를 입력해주세요!'\n        }, {\n          min: 8,\n          message: '8자 이상의 문자, 숫자, 기호로 입력해주세요'\n        }],\n        hasFeedback: true,\n        children: _jsxDEV(Input.Password, {\n          value: password,\n          onChange: onChangePassword,\n          placeholder: \"8\\uC790 \\uC774\\uC0C1\\uC758 \\uBB38\\uC790, \\uC22B\\uC790, \\uAE30\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, _this), _jsxDEV(Form.Item, {\n        name: \"confirm\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: '비밀번호를 확인해주세요!'\n        }, function (_ref) {\n          var getFieldValue = _ref.getFieldValue;\n          return {\n            validator: function validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('입력하신 비밀번호와 일치하지 않습니다!'));\n            }\n          };\n        }],\n        children: _jsxDEV(Input.Password, {\n          value: passwordCheck,\n          onChange: onChangePasswordCheck,\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uD55C \\uBC88 \\uB354 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, _this), _jsxDEV(Form.Item, {\n        css: submitDiv,\n        children: _jsxDEV(Button, {\n          type: \"primary\",\n          id: \"submit-btn\",\n          shape: \"round\",\n          htmlType: \"submit\",\n          css: roundBtn,\n          disabled: true,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SignUp, \"oXEKesQwsb3IIKrvnoGeyhzAehs=\", false, function () {\n  return [useDispatch, useSelector, Form.useForm, useRouter, useInput, useInput, useInput];\n});\n\n_c2 = SignUp;\nexport default SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Global\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/signup.js"],"names":["css","useState","useCallback","useEffect","useRef","Form","Input","Button","Modal","message","createGlobalStyle","useRouter","useDispatch","useSelector","TitleLogo","roundBtn","useInput","CHECK_DUPLICATE_REQUEST","SIGN_UP_REQUEST","headerStyle","formStyle","idForm","submitDiv","Global","SignUp","dispatch","state","user","signUpDone","isDuplicated","useForm","form","idRef","router","id","onChangeId","password","onChangePassword","passwordCheck","onChangePasswordCheck","checkDuplicate","type","duplicatedId","nonDuplicatedId","setFieldsValue","console","log","error","title","onOk","current","focus","target","document","getElementById","disabled","success","onFinish","data","content","className","style","marginTop","fontWeight","duration","replace","min","max","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button, Modal, message } from 'antd';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useRouter } from 'next/router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport TitleLogo from '../components/TitleLogo';\r\nimport { roundBtn } from '../components/styles';\r\nimport useInput from '../hooks/useInput';\r\nimport { CHECK_DUPLICATE_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\r\n\r\nconst headerStyle = css`\r\n  margin-top: 30px;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-top: 60px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-top: 80px;\r\n  }\r\n`;\r\n\r\nconst formStyle = css`\r\n  width: 280px;\r\n  margin: 40px auto 0;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 400px;\r\n    margin-top: 70px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 450px;\r\n    margin-top: 60px;\r\n  }\r\n\r\n  .ant-form-item {\r\n    display: block;\r\n\r\n    @media (min-width: 768px) {\r\n      margin-bottom: 50px;\r\n    }\r\n\r\n    .ant-input {\r\n      @media (min-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-form-item-label {\r\n    font-weight: 700;\r\n\r\n    label {\r\n      @media (min-width: 768px) {\r\n        margin-bottom: 10px;\r\n        font-size: 18px;\r\n      }\r\n\r\n      @media (min-width: 1024px) {\r\n        margin-bottom: 16px;\r\n        font-size: 22px;\r\n      }\r\n    }\r\n\r\n    label::after {\r\n      content: '';\r\n    }\r\n  }\r\n\r\n  // 비밀번호 & 비밀번호 확인 input 높이\r\n  .ant-input-affix-wrapper {\r\n    height: 38px;\r\n  }\r\n\r\n  .ant-form-item-has-error {\r\n    margin-bottom: 10px;\r\n\r\n    @media (min-width: 768px) {\r\n      margin-bottom: 28px;\r\n    }\r\n  }\r\n\r\n  .ant-btn-primary {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst idForm = css`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .ant-input {\r\n    width: 190px;\r\n    margin-right: 10px;\r\n\r\n    @media (min-width: 768px) {\r\n      width: 310px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      width: 410px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    padding: 4px 10px;\r\n    font-weight: 700;\r\n    border-color: #3a18ff;\r\n\r\n    @media (min-width: 768px) {\r\n      height: 38px;\r\n    }\r\n  }\r\n\r\n  button:hover {\r\n    color: #3a18ff;\r\n    border-color: #3a18ff;\r\n  }\r\n\r\n  button:focus {\r\n    color: #3a18ff;\r\n    border-color: #3a18ff;\r\n  }\r\n`;\r\n\r\nconst submitDiv = css`\r\n  padding-top: 25px;\r\n\r\n  .ant-form-item-control-input-content {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    button {\r\n      @media (min-width: 768px) {\r\n        width: 130px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Global = createGlobalStyle`\r\n  .ant-modal-confirm-body-wrapper\r\n    > .ant-modal-confirm-body\r\n    > .ant-modal-confirm-title {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\n// localhost:3000/signup\r\nconst SignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const { signUpDone, isDuplicated } = useSelector((state) => state.user);\r\n\r\n  const [form] = Form.useForm();\r\n  const idRef = useRef();\r\n  const router = useRouter();\r\n\r\n  const [id, onChangeId] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [passwordCheck, onChangePasswordCheck] = useInput('');\r\n  // const [password, setPassword] = useState('');\r\n  // const onChangePassword = useCallback(\r\n  //   (e) => {\r\n  //     setPassword(e.target.value.trim());\r\n  //     form.setFieldsValue({\r\n  //       password: e.target.value.trim(),\r\n  //     });\r\n\r\n  //     console.log(password);\r\n  //   },\r\n  //   [password]\r\n  // );\r\n  // const [passwordCheck, setPasswordCheck] = useState('');\r\n  // const onChangePasswordCheck = useCallback(\r\n  //   (e) => {\r\n  //     setPasswordCheck(e.target.value.trim());\r\n  //     form.setFieldsValue({\r\n  //       confirm: e.target.value.trim(),\r\n  //     });\r\n\r\n  //     console.log(passwordCheck);\r\n  //   },\r\n  //   [passwordCheck]\r\n  // );\r\n\r\n  const checkDuplicate = useCallback(() => {\r\n    dispatch({\r\n      type: CHECK_DUPLICATE_REQUEST,\r\n    });\r\n    if (isDuplicated !== null && isDuplicated) duplicatedId();\r\n    if (isDuplicated !== null && !isDuplicated) nonDuplicatedId(); // null이라고 생각해서 계속,...\r\n  }, [isDuplicated]);\r\n\r\n  const duplicatedId = () => {\r\n    // setId((state) => '');\r\n    form.setFieldsValue({\r\n      id: '',\r\n    });\r\n    console.log(id);\r\n    Modal.error({\r\n      title: '이미 사용중인 아이디입니다.',\r\n      onOk: () => {\r\n        idRef.current.focus();\r\n      },\r\n    });\r\n  };\r\n\r\n  const nonDuplicatedId = () => {\r\n    const target = document.getElementById('submit-btn');\r\n    target.disabled = false;\r\n    Modal.success({\r\n      title: '사용 가능한 아이디입니다.',\r\n    });\r\n  };\r\n\r\n  const onFinish = useCallback(() => {\r\n    dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: { id, password, passwordCheck },\r\n    });\r\n  }, [id, password, passwordCheck]);\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      const user = id;\r\n      message.success({\r\n        content: `${user}님 회원가입이 완료되었습니다.`,\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '40vh',\r\n          fontWeight: 700,\r\n        },\r\n        duration: 2,\r\n      });\r\n      router.replace('/');\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  return (\r\n    <div css={headerStyle}>\r\n      <Global />\r\n      <TitleLogo />\r\n      <Form form={form} css={formStyle} onFinish={onFinish} scrollToFirstError>\r\n        <div>\r\n          <Form.Item\r\n            name=\"id\"\r\n            label=\"아이디\"\r\n            rules={[\r\n              {\r\n                min: 6,\r\n                message: '아이디는 6자 이상이어야 합니다.',\r\n              },\r\n              {\r\n                max: 11,\r\n                message: '11자 이내로 입력해주세요!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: '아이디를 입력해주세요!',\r\n              },\r\n            ]}\r\n          >\r\n            <div css={idForm}>\r\n              <Input\r\n                className=\"id-input\"\r\n                type=\"id\"\r\n                value={id}\r\n                onChange={onChangeId}\r\n                placeholder=\"6 ~ 11자 문자, 숫자, 기호\"\r\n                ref={idRef}\r\n              />\r\n              <Button onClick={checkDuplicate}>중복확인</Button>\r\n            </div>\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"비밀번호\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 입력해주세요!',\r\n            },\r\n            {\r\n              min: 8,\r\n              message: '8자 이상의 문자, 숫자, 기호로 입력해주세요',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            placeholder=\"8자 이상의 문자, 숫자, 기호\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"비밀번호 확인\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 확인해주세요!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error('입력하신 비밀번호와 일치하지 않습니다!')\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            value={passwordCheck}\r\n            onChange={onChangePasswordCheck}\r\n            placeholder=\"비밀번호를 한 번 더 입력해주세요\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item css={submitDiv}>\r\n          <Button\r\n            type=\"primary\"\r\n            id=\"submit-btn\"\r\n            shape=\"round\"\r\n            htmlType=\"submit\"\r\n            css={roundBtn}\r\n            disabled\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}