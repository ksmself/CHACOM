{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\n\n/** @jsxImportSource @emotion/react */\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Tag } from 'antd';\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nimport Header from '../../components/Header/index';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { post, postTitle, buttonGroup, postInfoBox, postInfoWriter, postInfoBullet, postInfoDate, hashtagBox, expressionBox } from './styles';\nimport UpdateBtn from '../../components/UpdateBtn';\nimport DeleteBtn from '../../components/DeleteBtn';\nimport LikeBtn from '../../components/LikeBtn';\ndayjs.locale('ko');\n\nconst Post = () => {\n  const dispatch = useDispatch(); // const { singlePost } = useSelector((state) => state.post);\n\n  const {\n    me\n  } = useSelector(state => state.user);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const singlePost = {\n    id: 1,\n    title: '(-가 -하다) 왕초보편',\n    createdAt: '2021-05-20 08:18:40',\n    User: {\n      id: 3,\n      nickname: 'admin1'\n    },\n    Expressions: [{\n      pinyin: 'Nǐ qù ma?',\n      meaning: '당신은 갑니까?'\n    }, {\n      pinyin: 'Nǐ lái ma?',\n      meaning: '당신은 옵니까?'\n    }, {\n      pinyin: 'Nǐ kàn ma?',\n      meaning: '당신은 봅니까?'\n    }, {\n      pinyin: 'Nǐ chī ròu ma?',\n      meaning: '당신은 고기를 먹습니까? '\n    }, {\n      pinyin: 'Nǐ dǒng ma?',\n      meaning: '당신은 이해가 됩니까?'\n    }],\n    Hashtags: [{\n      id: 1,\n      name: '왕초보'\n    }, {\n      id: 2,\n      name: '테스트'\n    }, {\n      id: 3,\n      name: '반시밀당반시상'\n    } // { id: 4, name: '드라마' },\n    // { id: 5, name: '실생활표현' },\n    // { id: 6, name: '일상회화' },\n    // { id: 7, name: '어서사오작' },\n    // { id: 8, name: '전문중적진천천' },\n    // { id: 9, name: '나의아름다웠던그대에게' },\n    ],\n    Comments: {},\n    Likers: {}\n  };\n  const writtenByMe = (me === null || me === void 0 ? void 0 : me.nickname) === singlePost.User.nickname; // useEffect(() => {\n  //   dispatch({\n  //     type: LOAD_POST_REQUEST,\n  //     data: id,\n  //   });\n  // }, []);\n\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"header\", {\n      children: _jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: post,\n      children: [_jsxDEV(\"div\", {\n        css: postTitle,\n        children: singlePost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), writtenByMe && _jsxDEV(\"div\", {\n        css: buttonGroup,\n        children: [_jsxDEV(UpdateBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), _jsxDEV(DeleteBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), _jsxDEV(\"div\", {\n        css: postInfoBox,\n        children: [_jsxDEV(\"div\", {\n          children: [_jsxDEV(\"span\", {\n            css: postInfoWriter,\n            children: _jsxDEV(Link, {\n              href: `/user/${singlePost.User.id}`,\n              children: _jsxDEV(\"a\", {\n                children: singlePost.User.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), _jsxDEV(\"span\", {\n            css: postInfoBullet,\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), _jsxDEV(\"span\", {\n            css: postInfoDate,\n            children: dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), _jsxDEV(LikeBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), _jsxDEV(\"div\", {\n        css: hashtagBox,\n        children: singlePost.Hashtags.map(tag => {\n          return _jsxDEV(Tag, {\n            color: \"purple\",\n            children: _jsxDEV(Link, {\n              href: `/hashtag/${tag.name}`,\n              children: _jsxDEV(\"a\", {\n                children: tag.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, tag.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), _jsxDEV(\"div\", {\n        css: expressionBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/post/[id].js"],"names":["useRouter","useEffect","useDispatch","useSelector","Tag","Link","dayjs","Header","LOAD_POST_REQUEST","post","postTitle","buttonGroup","postInfoBox","postInfoWriter","postInfoBullet","postInfoDate","hashtagBox","expressionBox","UpdateBtn","DeleteBtn","LikeBtn","locale","Post","dispatch","me","state","user","router","id","query","singlePost","title","createdAt","User","nickname","Expressions","pinyin","meaning","Hashtags","name","Comments","Likers","writtenByMe","format","map","tag"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { useRouter } from 'next/router';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Tag } from 'antd';\r\nimport Link from 'next/link';\r\nimport dayjs from 'dayjs';\r\n\r\nimport Header from '../../components/Header/index';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport {\r\n  post,\r\n  postTitle,\r\n  buttonGroup,\r\n  postInfoBox,\r\n  postInfoWriter,\r\n  postInfoBullet,\r\n  postInfoDate,\r\n  hashtagBox,\r\n  expressionBox,\r\n} from './styles';\r\nimport UpdateBtn from '../../components/UpdateBtn';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport LikeBtn from '../../components/LikeBtn';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst Post = () => {\r\n  const dispatch = useDispatch();\r\n  // const { singlePost } = useSelector((state) => state.post);\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  const singlePost = {\r\n    id: 1,\r\n    title: '(-가 -하다) 왕초보편',\r\n    createdAt: '2021-05-20 08:18:40',\r\n    User: {\r\n      id: 3,\r\n      nickname: 'admin1',\r\n    },\r\n    Expressions: [\r\n      { pinyin: 'Nǐ qù ma?', meaning: '당신은 갑니까?' },\r\n      { pinyin: 'Nǐ lái ma?', meaning: '당신은 옵니까?' },\r\n      { pinyin: 'Nǐ kàn ma?', meaning: '당신은 봅니까?' },\r\n      { pinyin: 'Nǐ chī ròu ma?', meaning: '당신은 고기를 먹습니까? ' },\r\n      { pinyin: 'Nǐ dǒng ma?', meaning: '당신은 이해가 됩니까?' },\r\n    ],\r\n    Hashtags: [\r\n      { id: 1, name: '왕초보' },\r\n      { id: 2, name: '테스트' },\r\n      { id: 3, name: '반시밀당반시상' },\r\n      // { id: 4, name: '드라마' },\r\n      // { id: 5, name: '실생활표현' },\r\n      // { id: 6, name: '일상회화' },\r\n      // { id: 7, name: '어서사오작' },\r\n      // { id: 8, name: '전문중적진천천' },\r\n      // { id: 9, name: '나의아름다웠던그대에게' },\r\n    ],\r\n    Comments: {},\r\n    Likers: {},\r\n  };\r\n\r\n  const writtenByMe = me?.nickname === singlePost.User.nickname;\r\n\r\n  // useEffect(() => {\r\n  //   dispatch({\r\n  //     type: LOAD_POST_REQUEST,\r\n  //     data: id,\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <div css={post}>\r\n        <div css={postTitle}>{singlePost.title}</div>\r\n        {writtenByMe && (\r\n          <div css={buttonGroup}>\r\n            <UpdateBtn post={singlePost} />\r\n            <DeleteBtn post={singlePost} />\r\n          </div>\r\n        )}\r\n        <div css={postInfoBox}>\r\n          <div>\r\n            <span css={postInfoWriter}>\r\n              <Link href={`/user/${singlePost.User.id}`}>\r\n                <a>{singlePost.User.nickname}</a>\r\n              </Link>\r\n            </span>\r\n            <span css={postInfoBullet}>·</span>\r\n            <span css={postInfoDate}>\r\n              {dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')}\r\n            </span>\r\n          </div>\r\n          <LikeBtn post={singlePost} />\r\n        </div>\r\n        <div css={hashtagBox}>\r\n          {singlePost.Hashtags.map((tag) => {\r\n            return (\r\n              <Tag key={tag.id} color=\"purple\">\r\n                <Link href={`/hashtag/${tag.name}`}>\r\n                  <a>{tag.name}</a>\r\n                </Link>\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n        <div css={expressionBox}></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}