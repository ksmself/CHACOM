{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { useRouter } from 'next/router';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Tag } from 'antd';\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nimport { LeftCircleFilled, RightCircleFilled } from '@ant-design/icons';\nimport Header from '../../components/Header/index';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { post, postTitle, buttonGroup, postInfoBox, postInfoWriter, postInfoBullet, postInfoDate, hashtagBox, contentBox, leftArrow, rightArrow, expressionNum, pinyin, meaning } from './styles';\nimport UpdateBtn from '../../components/UpdateBtn';\nimport DeleteBtn from '../../components/DeleteBtn';\nimport LikeBtn from '../../components/LikeBtn';\ndayjs.locale('ko');\n\nvar Post = function Post() {\n  _s();\n\n  var dispatch = useDispatch(); // const { singlePost } = useSelector((state) => state.post);\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var router = useRouter();\n  var id = router.query.id;\n  var singlePost = {\n    id: 1,\n    title: '(-가 -하다) 왕초보편',\n    createdAt: '2021-05-20 08:18:40',\n    User: {\n      id: 3,\n      nickname: 'admin1'\n    },\n    Expressions: [{\n      pinyin: 'Nǐ qù ma?',\n      meaning: '당신은 갑니까?'\n    }, {\n      pinyin: 'Nǐ lái ma?',\n      meaning: '당신은 옵니까?'\n    }, {\n      pinyin: 'Nǐ kàn ma?',\n      meaning: '당신은 봅니까?'\n    }, {\n      pinyin: 'Nǐ chī ròu ma?',\n      meaning: '당신은 고기를 먹습니까?'\n    }, {\n      pinyin: 'Nǐ dǒng ma?',\n      meaning: '당신은 이해가 됩니까?'\n    }],\n    Hashtags: [{\n      id: 1,\n      name: '왕초보'\n    }, {\n      id: 2,\n      name: '테스트'\n    }, {\n      id: 3,\n      name: '반시밀당반시상'\n    } // { id: 4, name: '드라마' },\n    // { id: 5, name: '실생활표현' },\n    // { id: 6, name: '일상회화' },\n    // { id: 7, name: '어서사오작' },\n    // { id: 8, name: '전문중적진천천' },\n    // { id: 9, name: '나의아름다웠던그대에게' },\n    ],\n    Comments: {},\n    Likers: {}\n  };\n  var writtenByMe = (me === null || me === void 0 ? void 0 : me.nickname) === singlePost.User.nickname;\n\n  var _useState = useState(0),\n      curIndex = _useState[0],\n      setCurIndex = _useState[1];\n\n  var goToPrev = useCallback(function () {\n    if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);else setCurIndex(function (prev) {\n      return prev - 1;\n    });\n  }, [curIndex]);\n  var goToNext = useCallback(function () {\n    if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);else setCurIndex(function (prev) {\n      return prev + 1;\n    });\n  }, [curIndex]); // useEffect(() => {\n  //   dispatch({\n  //     type: LOAD_POST_REQUEST,\n  //     data: id,\n  //   });\n  // }, []);\n\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"header\", {\n      children: _jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, _this), _jsxDEV(\"div\", {\n      css: post,\n      children: [_jsxDEV(\"div\", {\n        css: postTitle,\n        children: singlePost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this), writtenByMe && _jsxDEV(\"div\", {\n        css: buttonGroup,\n        children: [_jsxDEV(UpdateBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, _this), _jsxDEV(DeleteBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, _this), _jsxDEV(\"div\", {\n        css: postInfoBox,\n        children: [_jsxDEV(\"div\", {\n          children: [_jsxDEV(\"span\", {\n            css: postInfoWriter,\n            children: _jsxDEV(Link, {\n              href: \"/user/\".concat(singlePost.User.id),\n              children: _jsxDEV(\"a\", {\n                children: singlePost.User.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, _this), _jsxDEV(\"span\", {\n            css: postInfoBullet,\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, _this), _jsxDEV(\"span\", {\n            css: postInfoDate,\n            children: dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, _this), _jsxDEV(LikeBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this), _jsxDEV(\"div\", {\n        css: hashtagBox,\n        children: singlePost.Hashtags.map(function (tag) {\n          return _jsxDEV(Tag, {\n            color: \"purple\",\n            children: _jsxDEV(Link, {\n              href: \"/hashtag/\".concat(tag.name),\n              children: _jsxDEV(\"a\", {\n                children: tag.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, _this)\n          }, tag.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, _this), _jsxDEV(\"div\", {\n        css: contentBox,\n        children: [_jsxDEV(LeftCircleFilled, {\n          css: leftArrow,\n          onClick: goToPrev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this), _jsxDEV(\"div\", {\n          css: expressionNum,\n          children: _jsxDEV(\"div\", {\n            children: [curIndex + 1, \" / \", singlePost.Expressions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, _this), _jsxDEV(\"div\", {\n          css: pinyin,\n          children: singlePost.Expressions[curIndex].pinyin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, _this), _jsxDEV(\"div\", {\n          css: meaning,\n          children: singlePost.Expressions[curIndex].meaning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, _this), _jsxDEV(RightCircleFilled, {\n          css: rightArrow,\n          onClick: goToNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Post, \"dUlG5/uBNKjRqbU0fg9ZH7IAHm0=\", false, function () {\n  return [useDispatch, useSelector, useRouter];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/post/[id].js"],"names":["useRouter","useCallback","useEffect","useState","useDispatch","useSelector","Tag","Link","dayjs","LeftCircleFilled","RightCircleFilled","Header","LOAD_POST_REQUEST","post","postTitle","buttonGroup","postInfoBox","postInfoWriter","postInfoBullet","postInfoDate","hashtagBox","contentBox","leftArrow","rightArrow","expressionNum","pinyin","meaning","UpdateBtn","DeleteBtn","LikeBtn","locale","Post","dispatch","state","user","me","router","id","query","singlePost","title","createdAt","User","nickname","Expressions","Hashtags","name","Comments","Likers","writtenByMe","curIndex","setCurIndex","goToPrev","length","prev","goToNext","format","map","tag"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { useRouter } from 'next/router';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Tag } from 'antd';\r\nimport Link from 'next/link';\r\nimport dayjs from 'dayjs';\r\nimport { LeftCircleFilled, RightCircleFilled } from '@ant-design/icons';\r\n\r\nimport Header from '../../components/Header/index';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport {\r\n  post,\r\n  postTitle,\r\n  buttonGroup,\r\n  postInfoBox,\r\n  postInfoWriter,\r\n  postInfoBullet,\r\n  postInfoDate,\r\n  hashtagBox,\r\n  contentBox,\r\n  leftArrow,\r\n  rightArrow,\r\n  expressionNum,\r\n  pinyin,\r\n  meaning,\r\n} from './styles';\r\nimport UpdateBtn from '../../components/UpdateBtn';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport LikeBtn from '../../components/LikeBtn';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst Post = () => {\r\n  const dispatch = useDispatch();\r\n  // const { singlePost } = useSelector((state) => state.post);\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  const singlePost = {\r\n    id: 1,\r\n    title: '(-가 -하다) 왕초보편',\r\n    createdAt: '2021-05-20 08:18:40',\r\n    User: {\r\n      id: 3,\r\n      nickname: 'admin1',\r\n    },\r\n    Expressions: [\r\n      { pinyin: 'Nǐ qù ma?', meaning: '당신은 갑니까?' },\r\n      { pinyin: 'Nǐ lái ma?', meaning: '당신은 옵니까?' },\r\n      { pinyin: 'Nǐ kàn ma?', meaning: '당신은 봅니까?' },\r\n      { pinyin: 'Nǐ chī ròu ma?', meaning: '당신은 고기를 먹습니까?' },\r\n      { pinyin: 'Nǐ dǒng ma?', meaning: '당신은 이해가 됩니까?' },\r\n    ],\r\n    Hashtags: [\r\n      { id: 1, name: '왕초보' },\r\n      { id: 2, name: '테스트' },\r\n      { id: 3, name: '반시밀당반시상' },\r\n      // { id: 4, name: '드라마' },\r\n      // { id: 5, name: '실생활표현' },\r\n      // { id: 6, name: '일상회화' },\r\n      // { id: 7, name: '어서사오작' },\r\n      // { id: 8, name: '전문중적진천천' },\r\n      // { id: 9, name: '나의아름다웠던그대에게' },\r\n    ],\r\n    Comments: {},\r\n    Likers: {},\r\n  };\r\n\r\n  const writtenByMe = me?.nickname === singlePost.User.nickname;\r\n\r\n  const [curIndex, setCurIndex] = useState(0);\r\n\r\n  const goToPrev = useCallback(() => {\r\n    if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);\r\n    else setCurIndex((prev) => prev - 1);\r\n  }, [curIndex]);\r\n\r\n  const goToNext = useCallback(() => {\r\n    if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);\r\n    else setCurIndex((prev) => prev + 1);\r\n  }, [curIndex]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch({\r\n  //     type: LOAD_POST_REQUEST,\r\n  //     data: id,\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <div css={post}>\r\n        <div css={postTitle}>{singlePost.title}</div>\r\n        {writtenByMe && (\r\n          <div css={buttonGroup}>\r\n            <UpdateBtn post={singlePost} />\r\n            <DeleteBtn post={singlePost} />\r\n          </div>\r\n        )}\r\n        <div css={postInfoBox}>\r\n          <div>\r\n            <span css={postInfoWriter}>\r\n              <Link href={`/user/${singlePost.User.id}`}>\r\n                <a>{singlePost.User.nickname}</a>\r\n              </Link>\r\n            </span>\r\n            <span css={postInfoBullet}>·</span>\r\n            <span css={postInfoDate}>\r\n              {dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')}\r\n            </span>\r\n          </div>\r\n          <LikeBtn post={singlePost} />\r\n        </div>\r\n        <div css={hashtagBox}>\r\n          {singlePost.Hashtags.map((tag) => {\r\n            return (\r\n              <Tag key={tag.id} color=\"purple\">\r\n                <Link href={`/hashtag/${tag.name}`}>\r\n                  <a>{tag.name}</a>\r\n                </Link>\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n        <div css={contentBox}>\r\n          <LeftCircleFilled css={leftArrow} onClick={goToPrev} />\r\n          <div css={expressionNum}>\r\n            <div>\r\n              {curIndex + 1} / {singlePost.Expressions.length}\r\n            </div>\r\n          </div>\r\n          <div css={pinyin}>{singlePost.Expressions[curIndex].pinyin}</div>\r\n          <div css={meaning}>{singlePost.Expressions[curIndex].meaning}</div>\r\n          <RightCircleFilled css={rightArrow} onClick={goToNext} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}