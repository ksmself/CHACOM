{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  mainPosts: [],\n  singlePost: null,\n  currentHashtags: [],\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  convertLoading: false,\n  convertDone: false,\n  convertError: null,\n  convertedPinyin: null\n};\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_HASHTAG_REQUEST = 'ADD_HASHTAG_REQUEST';\nexport var REMOVE_HASHTAG_REQUEST = 'REMOVE_HASHTAG_REQUEST';\nexport var CONVERT_PINYIN_REQUEST = 'CONVERT_PINYIN_REQUEST';\nexport var CONVERT_PINYIN_SUCCESS = 'CONVERT_PINYIN_SUCCESS';\nexport var CONVERT_PINYIN_FAILURE = 'CONVERT_PINYIN_FAILURE';\nexport var CONVERT_RESET_REQUEST = 'CONVERT_RESET_REQUEST';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        draft.addPostDone = false;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.currentHashtags = [];\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers = post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case ADD_HASHTAG_REQUEST:\n        draft.currentHashtags.push(action.data);\n        break;\n\n      case REMOVE_HASHTAG_REQUEST:\n        draft.currentHashtags = draft.currentHashtags.filter(function (v) {\n          return v !== action.data;\n        });\n        break;\n\n      case CONVERT_PINYIN_REQUEST:\n        draft.convertLoading = true;\n        draft.convertDone = false;\n        draft.convertError = null;\n        break;\n\n      case CONVERT_PINYIN_SUCCESS:\n        draft.convertLoading = false;\n        draft.convertDone = true;\n        draft.convertedPinyin = action.data;\n        break;\n\n      case CONVERT_PINYIN_FAILURE:\n        draft.convertLoading = false;\n        draft.convertError = action.error;\n        break;\n\n      case CONVERT_RESET_REQUEST:\n        draft.convertDone = false;\n        draft.convertError = null;\n        draft.convertedPinyin = null;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/reducers/post.js"],"names":["produce","initialState","mainPosts","singlePost","currentHashtags","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","convertLoading","convertDone","convertError","convertedPinyin","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_HASHTAG_REQUEST","REMOVE_HASHTAG_REQUEST","CONVERT_PINYIN_REQUEST","CONVERT_PINYIN_SUCCESS","CONVERT_PINYIN_FAILURE","CONVERT_RESET_REQUEST","reducer","state","action","draft","type","data","error","unshift","filter","v","id","PostId","post","find","Likers","push","UserId"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  singlePost: null,\r\n  currentHashtags: [],\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  convertLoading: false,\r\n  convertDone: false,\r\n  convertError: null,\r\n  convertedPinyin: null,\r\n};\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_HASHTAG_REQUEST = 'ADD_HASHTAG_REQUEST';\r\nexport const REMOVE_HASHTAG_REQUEST = 'REMOVE_HASHTAG_REQUEST';\r\n\r\nexport const CONVERT_PINYIN_REQUEST = 'CONVERT_PINYIN_REQUEST';\r\nexport const CONVERT_PINYIN_SUCCESS = 'CONVERT_PINYIN_SUCCESS';\r\nexport const CONVERT_PINYIN_FAILURE = 'CONVERT_PINYIN_FAILURE';\r\n\r\nexport const CONVERT_RESET_REQUEST = 'CONVERT_RESET_REQUEST';\r\n\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostDone = true;\r\n        draft.singlePost = action.data;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        draft.addPostDone = false;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = action.data;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.currentHashtags = [];\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.push({ id: action.data.UserId });\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      }\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostDone = false;\r\n        draft.unlikePostError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n      }\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n      case ADD_HASHTAG_REQUEST:\r\n        draft.currentHashtags.push(action.data);\r\n        break;\r\n      case REMOVE_HASHTAG_REQUEST:\r\n        draft.currentHashtags = draft.currentHashtags.filter(\r\n          (v) => v !== action.data\r\n        );\r\n        break;\r\n      case CONVERT_PINYIN_REQUEST:\r\n        draft.convertLoading = true;\r\n        draft.convertDone = false;\r\n        draft.convertError = null;\r\n        break;\r\n      case CONVERT_PINYIN_SUCCESS:\r\n        draft.convertLoading = false;\r\n        draft.convertDone = true;\r\n        draft.convertedPinyin = action.data;\r\n        break;\r\n      case CONVERT_PINYIN_FAILURE:\r\n        draft.convertLoading = false;\r\n        draft.convertError = action.error;\r\n        break;\r\n      case CONVERT_RESET_REQUEST:\r\n        draft.convertDone = false;\r\n        draft.convertError = null;\r\n        draft.convertedPinyin = null;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}