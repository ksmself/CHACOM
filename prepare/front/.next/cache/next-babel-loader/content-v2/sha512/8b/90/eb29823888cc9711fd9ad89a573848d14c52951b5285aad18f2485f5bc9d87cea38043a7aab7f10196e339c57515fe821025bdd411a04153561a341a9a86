{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\n\n/** @jsxImportSource @emotion/react */\nimport { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Tag } from 'antd';\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport Header from '../../components/Header/index';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { post, postTitle, buttonGroup, postInfoBox, postInfoWriter, postInfoBullet, postInfoDate, hashtagBox, contentBox, leftArrow, rightArrow, expressionNum, pinyin, meaning } from './styles';\nimport UpdateBtn from '../../components/UpdateBtn';\nimport DeleteBtn from '../../components/DeleteBtn';\nimport LikeBtn from '../../components/LikeBtn';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\ndayjs.locale('ko');\n\nconst Post = () => {\n  var _me;\n\n  const dispatch = useDispatch();\n  const {\n    singlePost,\n    likePostError\n  } = useSelector(state => state.post); // const { me } = useSelector((state) => state.user);\n\n  const writtenByMe = ((_me = me) === null || _me === void 0 ? void 0 : _me.nickname) === (singlePost === null || singlePost === void 0 ? void 0 : singlePost.User.nickname);\n  const {\n    0: curIndex,\n    1: setCurIndex\n  } = useState(0);\n  const goToPrev = useCallback(() => {\n    if (singlePost) {\n      if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);else setCurIndex(prev => prev - 1);\n    }\n  }, [singlePost, curIndex]);\n  const goToNext = useCallback(() => {\n    if (singlePost) {\n      if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);else setCurIndex(prev => prev + 1);\n    }\n  }, [singlePost, curIndex]);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"header\", {\n      children: _jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), singlePost && _jsxDEV(\"div\", {\n      css: post,\n      children: [_jsxDEV(\"div\", {\n        css: postTitle,\n        children: singlePost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), writtenByMe && _jsxDEV(\"div\", {\n        css: buttonGroup,\n        children: [_jsxDEV(UpdateBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), _jsxDEV(DeleteBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), _jsxDEV(\"div\", {\n        css: postInfoBox,\n        children: [_jsxDEV(\"div\", {\n          children: [_jsxDEV(\"span\", {\n            css: postInfoWriter,\n            children: _jsxDEV(Link, {\n              href: `/user/${singlePost === null || singlePost === void 0 ? void 0 : singlePost.User.id}`,\n              children: _jsxDEV(\"a\", {\n                children: singlePost.User.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), _jsxDEV(\"span\", {\n            css: postInfoBullet,\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), _jsxDEV(\"span\", {\n            css: postInfoDate,\n            children: dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), _jsxDEV(LikeBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), _jsxDEV(\"div\", {\n        css: hashtagBox,\n        children: singlePost.Hashtags.map(tag => {\n          return _jsxDEV(Tag, {\n            color: \"purple\",\n            children: _jsxDEV(Link, {\n              href: `/hashtag/${tag.name}`,\n              children: _jsxDEV(\"a\", {\n                children: tag.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)\n          }, tag.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), _jsxDEV(\"div\", {\n        css: contentBox,\n        children: [_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-left\",\n          css: leftArrow,\n          onClick: goToPrev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), _jsxDEV(\"div\", {\n          css: expressionNum,\n          children: _jsxDEV(\"div\", {\n            children: [curIndex + 1, \" / \", singlePost.Expressions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), _jsxDEV(\"div\", {\n          css: pinyin,\n          children: singlePost.Expressions[curIndex].pinyin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), _jsxDEV(\"div\", {\n          css: meaning,\n          children: singlePost.Expressions[curIndex].meaning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), _jsxDEV(\"i\", {\n          className: \"fas fa-chevron-right\",\n          css: rightArrow,\n          onClick: goToNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/post/[id].js"],"names":["useCallback","useState","useDispatch","useSelector","Tag","Link","dayjs","END","axios","Header","LOAD_POST_REQUEST","post","postTitle","buttonGroup","postInfoBox","postInfoWriter","postInfoBullet","postInfoDate","hashtagBox","contentBox","leftArrow","rightArrow","expressionNum","pinyin","meaning","UpdateBtn","DeleteBtn","LikeBtn","wrapper","LOAD_MY_INFO_REQUEST","locale","Post","dispatch","singlePost","likePostError","state","writtenByMe","me","nickname","User","curIndex","setCurIndex","goToPrev","Expressions","length","prev","goToNext","title","id","createdAt","format","Hashtags","map","tag","name","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","data","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Tag } from 'antd';\r\nimport Link from 'next/link';\r\nimport dayjs from 'dayjs';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nimport Header from '../../components/Header/index';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport {\r\n  post,\r\n  postTitle,\r\n  buttonGroup,\r\n  postInfoBox,\r\n  postInfoWriter,\r\n  postInfoBullet,\r\n  postInfoDate,\r\n  hashtagBox,\r\n  contentBox,\r\n  leftArrow,\r\n  rightArrow,\r\n  expressionNum,\r\n  pinyin,\r\n  meaning,\r\n} from './styles';\r\nimport UpdateBtn from '../../components/UpdateBtn';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport LikeBtn from '../../components/LikeBtn';\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst Post = () => {\r\n  const dispatch = useDispatch();\r\n  const { singlePost, likePostError } = useSelector((state) => state.post);\r\n  // const { me } = useSelector((state) => state.user);\r\n\r\n  const writtenByMe = me?.nickname === singlePost?.User.nickname;\r\n\r\n  const [curIndex, setCurIndex] = useState(0);\r\n\r\n  const goToPrev = useCallback(() => {\r\n    if (singlePost) {\r\n      if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);\r\n      else setCurIndex((prev) => prev - 1);\r\n    }\r\n  }, [singlePost, curIndex]);\r\n\r\n  const goToNext = useCallback(() => {\r\n    if (singlePost) {\r\n      if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);\r\n      else setCurIndex((prev) => prev + 1);\r\n    }\r\n  }, [singlePost, curIndex]);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      {singlePost && (\r\n        <div css={post}>\r\n          <div css={postTitle}>{singlePost.title}</div>\r\n          {writtenByMe && (\r\n            <div css={buttonGroup}>\r\n              <UpdateBtn post={singlePost} />\r\n              <DeleteBtn post={singlePost} />\r\n            </div>\r\n          )}\r\n          <div css={postInfoBox}>\r\n            <div>\r\n              <span css={postInfoWriter}>\r\n                <Link href={`/user/${singlePost?.User.id}`}>\r\n                  <a>{singlePost.User.nickname}</a>\r\n                </Link>\r\n              </span>\r\n              <span css={postInfoBullet}>·</span>\r\n              <span css={postInfoDate}>\r\n                {dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')}\r\n              </span>\r\n            </div>\r\n            <LikeBtn post={singlePost} />\r\n          </div>\r\n          <div css={hashtagBox}>\r\n            {singlePost.Hashtags.map((tag) => {\r\n              return (\r\n                <Tag key={tag.id} color=\"purple\">\r\n                  <Link href={`/hashtag/${tag.name}`}>\r\n                    <a>{tag.name}</a>\r\n                  </Link>\r\n                </Tag>\r\n              );\r\n            })}\r\n          </div>\r\n          <div css={contentBox}>\r\n            <i\r\n              className=\"fas fa-chevron-left\"\r\n              css={leftArrow}\r\n              onClick={goToPrev}\r\n            ></i>\r\n            <div css={expressionNum}>\r\n              <div>\r\n                {curIndex + 1} / {singlePost.Expressions.length}\r\n              </div>\r\n            </div>\r\n            <div css={pinyin}>{singlePost.Expressions[curIndex].pinyin}</div>\r\n            <div css={meaning}>{singlePost.Expressions[curIndex].meaning}</div>\r\n            <i\r\n              className=\"fas fa-chevron-right\"\r\n              css={rightArrow}\r\n              onClick={goToNext}\r\n            ></i>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n      data: context.params.id,\r\n    });\r\n    context.store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}