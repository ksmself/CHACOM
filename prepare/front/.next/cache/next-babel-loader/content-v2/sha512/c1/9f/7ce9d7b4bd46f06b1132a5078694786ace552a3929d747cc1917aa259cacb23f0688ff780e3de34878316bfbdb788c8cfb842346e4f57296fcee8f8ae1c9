{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\ExpressionBox.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  svg {\\n    font-size: 50px;\\n    color: #3a18ff;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 90px;\\n  margin-bottom: 10px;\\n  background-color: #3a18ff;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport { css } from '@emotion/react';\nimport { useCallback } from 'react';\nvar expressionBox = css(_templateObject());\nvar form = css(_templateObject2());\nvar plusBtn = css(_templateObject3());\n\nvar ExpressionBox = function ExpressionBox() {\n  _s();\n\n  var expressionForm = function expressionForm() {\n    return _jsxDEV(\"div\", {\n      css: form,\n      children: \"\\uD45C\\uD604\\uD3FC\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, _this);\n  };\n\n  var onClickPlus = useCallback(function () {}, []);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"div\", {\n      css: expressionBox,\n      id: \"expression-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), _jsxDEV(PlusCircleFilled, {\n      css: plusBtn,\n      onClick: onClickPlus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ExpressionBox, \"BrsXEgGLY/jVXfOJEqUU16oVd4g=\");\n\n_c = ExpressionBox;\nexport default ExpressionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpressionBox\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/ExpressionBox.js"],"names":["PlusCircleFilled","css","useCallback","expressionBox","form","plusBtn","ExpressionBox","expressionForm","onClickPlus"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,IAAMC,aAAa,GAAGF,GAAH,mBAAnB;AAMA,IAAMG,IAAI,GAAGH,GAAH,oBAAV;AAOA,IAAMI,OAAO,GAAGJ,GAAH,oBAAb;;AAOA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAC1B,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WAAO;AAAK,MAAA,GAAG,EAAEH,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAFD;;AAIA,MAAMI,WAAW,GAAGN,WAAW,CAAC,YAAM,CAAE,CAAT,EAAW,EAAX,CAA/B;AAEA,SACE;AAAA,eACE;AAAK,MAAA,GAAG,EAAEC,aAAV;AAAyB,MAAA,EAAE,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,QAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEE,OAAvB;AAAgC,MAAA,OAAO,EAAEG;AAAzC;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAMD,CAbD;;GAAMF,a;;KAAAA,a;AAeN,eAAeA,aAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { PlusCircleFilled } from '@ant-design/icons';\r\nimport { css } from '@emotion/react';\r\nimport { useCallback } from 'react';\r\n\r\nconst expressionBox = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst form = css`\r\n  width: 100%;\r\n  height: 90px;\r\n  margin-bottom: 10px;\r\n  background-color: #3a18ff;\r\n`;\r\n\r\nconst plusBtn = css`\r\n  svg {\r\n    font-size: 50px;\r\n    color: #3a18ff;\r\n  }\r\n`;\r\n\r\nconst ExpressionBox = () => {\r\n  const expressionForm = () => {\r\n    return <div css={form}>표현폼입니다.</div>;\r\n  };\r\n\r\n  const onClickPlus = useCallback(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <div css={expressionBox} id=\"expression-box\"></div>\r\n      <PlusCircleFilled css={plusBtn} onClick={onClickPlus} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpressionBox;\r\n"]},"metadata":{},"sourceType":"module"}