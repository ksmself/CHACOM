{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\CommentList.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport Link from 'next/link';\nimport { Button } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport CommentForm from './CommentForm';\ndayjs.locale('ko');\nconst commentBox = css`\n  margin-bottom: 25px;\n  padding: 15px 5px 0;\n  border: 1px solid #755eff;\n  border-radius: 10px;\n`;\nconst commentItem = css`\n  padding: 10px 12px;\n`;\nconst commentInfo = css`\n  display: flex;\n  margin-bottom: 5px;\n`;\nconst commentInfoWriter = css`\n  margin-right: 3px;\n  font-weight: 700;\n`;\nconst commentInfoBullet = css`\n  margin-right: 3px;\n`;\nconst commentInfoDate = css`\n  color: #646a70;\n`;\nconst commentContent = css`\n  margin-bottom: 8px;\n  font-size: 17px;\n`;\nconst divideLine = css`\n  width: 100%;\n  height: 1px;\n  margin-top: 10px;\n  background-color: #d9d9d9;\n`;\nconst replyBtn = css`\n  // margin-bottom: 10px;\n\n  button {\n    padding: 4px 6px;\n    font-weight: 700;\n    border: none;\n    color: #3a18ff;\n\n    &:hover {\n      color: #3a18ff;\n      border: none;\n      cursor: pointer;\n    }\n\n    &:focus {\n      color: #3a18ff;\n      border: none;\n    }\n  }\n`;\n\nconst CommentList = ({\n  comments\n}) => {\n  return _jsxDEV(\"ul\", {\n    css: commentBox,\n    children: comments.map((comment, index) => {\n      const {\n        0: plusIcon,\n        1: setPlusIcon\n      } = useState(true);\n      const {\n        0: commentFormOpened,\n        1: setCommentFormOpened\n      } = useState(false);\n      const {\n        0: replyBtnText,\n        1: setReplyBtnText\n      } = useState('답글 달기');\n      const onClickReply = useCallback(() => {\n        setPlusIcon(prev => !prev);\n\n        if (replyBtnText === '답글 달기') {\n          setReplyBtnText(prev => '숨기기');\n        } else setReplyBtnText(prev => '답글 달기');\n\n        setCommentFormOpened(prev => !prev);\n      }, [replyBtnText]);\n      let day;\n      const secondPassed = dayjs().diff(dayjs(comment.createdAt), 'seconds');\n      const minutedPassed = dayjs().diff(dayjs(comment.createdAt), 'minutes');\n      const hourPassed = dayjs().diff(dayjs(comment.createdAt), 'hours');\n      const dayPassed = dayjs().diff(dayjs(comment.createdAt), 'days');\n      if (secondPassed < 60) day = '방금 전';else if (minutedPassed < 60) day = minutedPassed + '분 전';else if (hourPassed < 24) day = hourPassed + '시간 전';else if (dayPassed <= 7) day = dayPassed + '일 전';else day = dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일');\n      return _jsxDEV(\"li\", {\n        css: commentItem,\n        children: [_jsxDEV(\"div\", {\n          css: commentInfo,\n          children: [_jsxDEV(\"span\", {\n            css: commentInfoWriter,\n            children: _jsxDEV(Link, {\n              href: `/user/${comment.UserId}`,\n              children: _jsxDEV(\"a\", {\n                children: comment.User.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), _jsxDEV(\"span\", {\n            css: commentInfoBullet,\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), _jsxDEV(\"span\", {\n            css: commentInfoDate,\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), _jsxDEV(\"div\", {\n          css: commentContent,\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), _jsxDEV(\"div\", {\n          css: replyBtn,\n          children: _jsxDEV(Button, {\n            icon: plusIcon ? _jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 30\n            }, this) : _jsxDEV(MinusCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 55\n            }, this),\n            onClick: onClickReply,\n            children: replyBtnText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), commentFormOpened && _jsxDEV(CommentForm, {\n          cancelBtn: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 35\n        }, this), comments.length > 1 && index < comments.length - 1 && _jsxDEV(\"div\", {\n          css: divideLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CommentList;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/CommentList.js"],"names":["css","useCallback","useEffect","useState","dayjs","Link","Button","PlusCircleOutlined","MinusCircleOutlined","CommentForm","locale","commentBox","commentItem","commentInfo","commentInfoWriter","commentInfoBullet","commentInfoDate","commentContent","divideLine","replyBtn","CommentList","comments","map","comment","index","plusIcon","setPlusIcon","commentFormOpened","setCommentFormOpened","replyBtnText","setReplyBtnText","onClickReply","prev","day","secondPassed","diff","createdAt","minutedPassed","hourPassed","dayPassed","singlePost","format","UserId","User","nickname","content","length","id"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport Link from 'next/link';\r\nimport { Button } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n\r\nimport CommentForm from './CommentForm';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst commentBox = css`\r\n  margin-bottom: 25px;\r\n  padding: 15px 5px 0;\r\n  border: 1px solid #755eff;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst commentItem = css`\r\n  padding: 10px 12px;\r\n`;\r\n\r\nconst commentInfo = css`\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst commentInfoWriter = css`\r\n  margin-right: 3px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst commentInfoBullet = css`\r\n  margin-right: 3px;\r\n`;\r\n\r\nconst commentInfoDate = css`\r\n  color: #646a70;\r\n`;\r\n\r\nconst commentContent = css`\r\n  margin-bottom: 8px;\r\n  font-size: 17px;\r\n`;\r\n\r\nconst divideLine = css`\r\n  width: 100%;\r\n  height: 1px;\r\n  margin-top: 10px;\r\n  background-color: #d9d9d9;\r\n`;\r\n\r\nconst replyBtn = css`\r\n  // margin-bottom: 10px;\r\n\r\n  button {\r\n    padding: 4px 6px;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: #3a18ff;\r\n\r\n    &:hover {\r\n      color: #3a18ff;\r\n      border: none;\r\n      cursor: pointer;\r\n    }\r\n\r\n    &:focus {\r\n      color: #3a18ff;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CommentList = ({ comments }) => {\r\n  return (\r\n    <ul css={commentBox}>\r\n      {comments.map((comment, index) => {\r\n        const [plusIcon, setPlusIcon] = useState(true);\r\n        const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n        const [replyBtnText, setReplyBtnText] = useState('답글 달기');\r\n        const onClickReply = useCallback(() => {\r\n          setPlusIcon((prev) => !prev);\r\n          if (replyBtnText === '답글 달기') {\r\n            setReplyBtnText((prev) => '숨기기');\r\n          } else setReplyBtnText((prev) => '답글 달기');\r\n          setCommentFormOpened((prev) => !prev);\r\n        }, [replyBtnText]);\r\n\r\n        let day;\r\n        const secondPassed = dayjs().diff(dayjs(comment.createdAt), 'seconds');\r\n        const minutedPassed = dayjs().diff(dayjs(comment.createdAt), 'minutes');\r\n        const hourPassed = dayjs().diff(dayjs(comment.createdAt), 'hours');\r\n        const dayPassed = dayjs().diff(dayjs(comment.createdAt), 'days');\r\n\r\n        if (secondPassed < 60) day = '방금 전';\r\n        else if (minutedPassed < 60) day = minutedPassed + '분 전';\r\n        else if (hourPassed < 24) day = hourPassed + '시간 전';\r\n        else if (dayPassed <= 7) day = dayPassed + '일 전';\r\n        else day = dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일');\r\n\r\n        return (\r\n          <li css={commentItem} key={comment.id}>\r\n            <div css={commentInfo}>\r\n              <span css={commentInfoWriter}>\r\n                <Link href={`/user/${comment.UserId}`}>\r\n                  <a>{comment.User.nickname}</a>\r\n                </Link>\r\n              </span>\r\n              <span css={commentInfoBullet}>·</span>\r\n              <span css={commentInfoDate}>{day}</span>\r\n            </div>\r\n            <div css={commentContent}>{comment.content}</div>\r\n            <div css={replyBtn}>\r\n              <Button\r\n                icon={\r\n                  plusIcon ? <PlusCircleOutlined /> : <MinusCircleOutlined />\r\n                }\r\n                onClick={onClickReply}\r\n              >\r\n                {replyBtnText}\r\n              </Button>\r\n            </div>\r\n            {commentFormOpened && <CommentForm cancelBtn={true} />}\r\n            {comments.length > 1 && index < comments.length - 1 && (\r\n              <div css={divideLine}></div>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n"]},"metadata":{},"sourceType":"module"}