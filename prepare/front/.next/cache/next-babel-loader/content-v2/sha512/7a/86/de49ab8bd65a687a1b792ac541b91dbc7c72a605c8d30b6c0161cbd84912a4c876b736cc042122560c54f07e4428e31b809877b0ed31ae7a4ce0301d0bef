{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  users: [],\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  checkDuplicateLoading: false,\n  // 중복확인 시도중\n  checkDuplicateDone: false,\n  checkDuplicateError: null,\n  loadMyInfoLoading: false,\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  isDuplicated: null,\n  me: null\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const SIGN_UP_END = 'SIGN_UP_END';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const CHECK_DUPLICATE_REQUEST = 'CHECK_DUPLICATE_REQUEST';\nexport const CHECK_DUPLICATE_SUCCESS = 'CHECK_DUPLICATE_SUCCESS';\nexport const CHECK_DUPLICATE_FAILURE = 'CHECK_DUPLICATE_FAILURE';\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const LIKE_POST_TO_ME = 'LIKE_POST_TO_ME';\nexport const UNLIKE_POST_TO_ME = 'UNLIKE_POST_TO_ME';\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpDone = false;\n      draft.signUpError = null;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true; // draft.users.push(action)\n\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n\n    case SIGN_UP_END:\n      draft.signUpDone = false;\n      break;\n\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInDone = false;\n      draft.logInError = null;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.logInDone = true;\n      draft.me = action.data;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutDone = false;\n      draft.logOutError = null;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n\n    case CHECK_DUPLICATE_REQUEST:\n      draft.checkDuplicateLoading = true;\n      draft.checkDuplicateDone = false;\n      draft.checkDuplicateError = null;\n      break;\n\n    case CHECK_DUPLICATE_SUCCESS:\n      draft.checkDuplicateLoading = false;\n      draft.checkDuplicateDone = true;\n      draft.isDuplicated = action.data;\n      break;\n\n    case CHECK_DUPLICATE_FAILURE:\n      draft.checkDuplicateLoading = false;\n      draft.checkDuplicateError = action.error;\n      break;\n\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadMyInfoLoading = true;\n      draft.loadMyInfoDone = false;\n      draft.loadMyInfoError = null;\n      break;\n\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoDone = true;\n      draft.me = action.data;\n      break;\n\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoError = action.error;\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift(action.data);\n      break;\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data.PostId);\n      break;\n\n    case LIKE_POST_TO_ME:\n      draft.me.Liked.unshift(action.data);\n      break;\n\n    case UNLIKE_POST_TO_ME:\n      draft.me.Liked = draft.me.Liked.filter(v => v.id !== action.data.PostId);\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/reducers/user.js"],"names":["produce","initialState","signUpLoading","signUpDone","signUpError","users","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","checkDuplicateLoading","checkDuplicateDone","checkDuplicateError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","isDuplicated","me","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_END","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","CHECK_DUPLICATE_REQUEST","CHECK_DUPLICATE_SUCCESS","CHECK_DUPLICATE_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","LIKE_POST_TO_ME","UNLIKE_POST_TO_ME","reducer","state","action","draft","type","error","data","Posts","unshift","filter","v","id","PostId","Liked"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  signUpLoading: false, // 회원가입 시도중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  users: [],\r\n  logInLoading: false, // 로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  checkDuplicateLoading: false, // 중복확인 시도중\r\n  checkDuplicateDone: false,\r\n  checkDuplicateError: null,\r\n  loadMyInfoLoading: false,\r\n  loadMyInfoDone: false,\r\n  loadMyInfoError: null,\r\n  isDuplicated: null,\r\n  me: null,\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const SIGN_UP_END = 'SIGN_UP_END';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const CHECK_DUPLICATE_REQUEST = 'CHECK_DUPLICATE_REQUEST';\r\nexport const CHECK_DUPLICATE_SUCCESS = 'CHECK_DUPLICATE_SUCCESS';\r\nexport const CHECK_DUPLICATE_FAILURE = 'CHECK_DUPLICATE_FAILURE';\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const LIKE_POST_TO_ME = 'LIKE_POST_TO_ME';\r\nexport const UNLIKE_POST_TO_ME = 'UNLIKE_POST_TO_ME';\r\n\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpDone = false;\r\n        draft.signUpError = null;\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        // draft.users.push(action)\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n      case SIGN_UP_END:\r\n        draft.signUpDone = false;\r\n        break;\r\n      case LOG_IN_REQUEST:\r\n        draft.logInLoading = true;\r\n        draft.logInDone = false;\r\n        draft.logInError = null;\r\n        break;\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.logInDone = true;\r\n        draft.me = action.data;\r\n        break;\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        draft.logOutDone = false;\r\n        draft.logOutError = null;\r\n        break;\r\n      case LOG_OUT_SUCCESS:\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.me = null;\r\n        break;\r\n      case LOG_OUT_FAILURE:\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error;\r\n        break;\r\n      case CHECK_DUPLICATE_REQUEST:\r\n        draft.checkDuplicateLoading = true;\r\n        draft.checkDuplicateDone = false;\r\n        draft.checkDuplicateError = null;\r\n        break;\r\n      case CHECK_DUPLICATE_SUCCESS:\r\n        draft.checkDuplicateLoading = false;\r\n        draft.checkDuplicateDone = true;\r\n        draft.isDuplicated = action.data;\r\n        break;\r\n      case CHECK_DUPLICATE_FAILURE:\r\n        draft.checkDuplicateLoading = false;\r\n        draft.checkDuplicateError = action.error;\r\n        break;\r\n      case LOAD_MY_INFO_REQUEST:\r\n        draft.loadMyInfoLoading = true;\r\n        draft.loadMyInfoDone = false;\r\n        draft.loadMyInfoError = null;\r\n        break;\r\n      case LOAD_MY_INFO_SUCCESS:\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoDone = true;\r\n        draft.me = action.data;\r\n        break;\r\n      case LOAD_MY_INFO_FAILURE:\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoError = action.error;\r\n        break;\r\n      case ADD_POST_TO_ME:\r\n        draft.me.Posts.unshift(action.data);\r\n        break;\r\n      case REMOVE_POST_OF_ME:\r\n        draft.me.Posts = draft.me.Posts.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        break;\r\n      case LIKE_POST_TO_ME:\r\n        draft.me.Liked.unshift(action.data);\r\n        break;\r\n      case UNLIKE_POST_TO_ME:\r\n        draft.me.Liked = draft.me.Liked.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}