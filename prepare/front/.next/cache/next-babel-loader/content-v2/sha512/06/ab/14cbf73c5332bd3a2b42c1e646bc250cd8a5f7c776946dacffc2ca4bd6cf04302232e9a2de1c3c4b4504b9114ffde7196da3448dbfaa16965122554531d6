{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\ConvertPopUp.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100px;\\n  padding: 16px;\\n  border-bottom-left-radius: 33px;\\n  border-bottom-right-radius: 33px;\\n  // background-color: #60ffff;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100px;\\n  padding: 16px;\\n  resize: none;\\n  font-size: 21px;\\n  border: none;\\n  border-top-left-radius: 33px;\\n  border-top-right-radius: 33px;\\n  // background-color: #000;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: 33px;\\n  background: #ffffff;\\n  box-shadow: 6px 6px 12px #e8e8e8, -1px -1px 3px #e8e8e8,\\n    -6px -6px 12px #e8e8e8, 1px 1px 3px #e8e8e8;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    .convert-modal > .ant-modal-content > .ant-modal-body{\\n        padding-top: 48px;\\n    }\\n\\n    .convert-modal > .ant-modal-content > .ant-modal-footer{\\n        display: none; \\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button } from 'antd';\nimport { SwapOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { createGlobalStyle } from 'styled-components';\nimport { CONVERT_PINYIN_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nvar Global = createGlobalStyle(_templateObject());\n_c = Global;\nvar convertBox = css(_templateObject2());\nvar toConvert = css(_templateObject3());\nvar converted = css(_templateObject4());\n\nvar ConvertPopUp = function ConvertPopUp() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      convertPinyinLoading = _useSelector.convertPinyinLoading,\n      convertPinyinDone = _useSelector.convertPinyinDone,\n      convertedPinyin = _useSelector.convertedPinyin;\n\n  var _useState = useState(false),\n      modalVisible = _useState[0],\n      setModalVisible = _useState[1];\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      inputToConvert = _useInput2[0],\n      onChangeInputToConvert = _useInput2[1];\n\n  var onClickConvert = useCallback(function () {\n    dispatch({\n      type: CONVERT_PINYIN_REQUEST,\n      data: {\n        content: inputToConvert\n      }\n    });\n  });\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this), _jsxDEV(_Fragment, {\n      children: [_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return setModalVisible(true);\n        },\n        children: \"Convert to P\\u012Bny\\u012Bn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), _jsxDEV(Modal, {\n        className: \"convert-modal\",\n        visible: modalVisible,\n        onCancel: function onCancel() {\n          return setModalVisible(false);\n        },\n        onOk: function onOk() {\n          return setModalVisible(false);\n        },\n        children: _jsxDEV(\"div\", {\n          css: convertBox,\n          children: [_jsxDEV(\"textarea\", {\n            css: toConvert,\n            placeholder: \"Ni3 hao!3\",\n            value: inputToConvert,\n            onChange: onChangeInputToConvert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this), _jsxDEV(Button, {\n            icon: _jsxDEV(SwapOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 27\n            }, _this),\n            onClick: onClickConvert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, _this), _jsxDEV(\"div\", {\n            css: converted,\n            children: convertPinyinLoading ? // convert 되고 있는 중이라면 로딩 띄우기\n            _jsxDEV(LoadingOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, _this) : // convert가 끝났다면 convertedPinyin 보여주기\n            convertPinyinDone ? convertedPinyin : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(ConvertPopUp, \"xZGCzyNleLL0gGdjZQZpE867w0Y=\", false, function () {\n  return [useDispatch, useSelector, useInput];\n});\n\n_c2 = ConvertPopUp;\nexport default ConvertPopUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Global\");\n$RefreshReg$(_c2, \"ConvertPopUp\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/ConvertPopUp.js"],"names":["css","useCallback","useState","useDispatch","useSelector","Modal","Button","SwapOutlined","LoadingOutlined","createGlobalStyle","CONVERT_PINYIN_REQUEST","useInput","Global","convertBox","toConvert","converted","ConvertPopUp","dispatch","state","post","convertPinyinLoading","convertPinyinDone","convertedPinyin","modalVisible","setModalVisible","inputToConvert","onChangeInputToConvert","onClickConvert","type","data","content"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,mBAA9C;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,SAASC,sBAAT,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,IAAMC,MAAM,GAAGH,iBAAH,mBAAZ;KAAMG,M;AAUN,IAAMC,UAAU,GAAGb,GAAH,oBAAhB;AAOA,IAAMc,SAAS,GAAGd,GAAH,oBAAf;AAYA,IAAMe,SAAS,GAAGf,GAAH,oBAAf;;AASA,IAAMgB,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AADyB,qBAMrBC,WAAW,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CANU;AAAA,MAGvBC,oBAHuB,gBAGvBA,oBAHuB;AAAA,MAIvBC,iBAJuB,gBAIvBA,iBAJuB;AAAA,MAKvBC,eALuB,gBAKvBA,eALuB;;AAAA,kBAQepB,QAAQ,CAAC,KAAD,CARvB;AAAA,MAQlBqB,YARkB;AAAA,MAQJC,eARI;;AAAA,kBAUwBb,QAAQ,CAAC,EAAD,CAVhC;AAAA;AAAA,MAUlBc,cAVkB;AAAA,MAUFC,sBAVE;;AAYzB,MAAMC,cAAc,GAAG1B,WAAW,CAAC,YAAM;AACvCgB,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAElB,sBADC;AAEPmB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEL;AAAX;AAFC,KAAD,CAAR;AAID,GALiC,CAAlC;AAOA,SACE;AAAA,eACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA,iBACE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMD,eAAe,CAAC,IAAD,CAArB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,OAAO,EAAED,YAFX;AAGE,QAAA,QAAQ,EAAE;AAAA,iBAAMC,eAAe,CAAC,KAAD,CAArB;AAAA,SAHZ;AAIE,QAAA,IAAI,EAAE;AAAA,iBAAMA,eAAe,CAAC,KAAD,CAArB;AAAA,SAJR;AAAA,kBAME;AAAK,UAAA,GAAG,EAAEX,UAAV;AAAA,qBACE;AACE,YAAA,GAAG,EAAEC,SADP;AAEE,YAAA,WAAW,EAAC,WAFd;AAGE,YAAA,KAAK,EAAEW,cAHT;AAIE,YAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,mBADF,EAOE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,qBAAd;AAAgC,YAAA,OAAO,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQE;AAAK,YAAA,GAAG,EAAEZ,SAAV;AAAA,sBACGK,oBAAoB,GACnB;AACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA,qBAFmB,GAGjB;AACJC,YAAAA,iBAAiB,GACfC,eADe,GAEb;AAPN;AAAA;AAAA;AAAA;AAAA,mBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA,oBAFF;AAAA,kBADF;AAiCD,CApDD;;GAAMN,Y;UACab,W,EAKbC,W,EAI6CO,Q;;;MAV7CK,Y;AAsDN,eAAeA,YAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button } from 'antd';\r\nimport { SwapOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { CONVERT_PINYIN_REQUEST } from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst Global = createGlobalStyle`\r\n    .convert-modal > .ant-modal-content > .ant-modal-body{\r\n        padding-top: 48px;\r\n    }\r\n\r\n    .convert-modal > .ant-modal-content > .ant-modal-footer{\r\n        display: none; \r\n    }\r\n`;\r\n\r\nconst convertBox = css`\r\n  border-radius: 33px;\r\n  background: #ffffff;\r\n  box-shadow: 6px 6px 12px #e8e8e8, -1px -1px 3px #e8e8e8,\r\n    -6px -6px 12px #e8e8e8, 1px 1px 3px #e8e8e8;\r\n`;\r\n\r\nconst toConvert = css`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 16px;\r\n  resize: none;\r\n  font-size: 21px;\r\n  border: none;\r\n  border-top-left-radius: 33px;\r\n  border-top-right-radius: 33px;\r\n  // background-color: #000;\r\n`;\r\n\r\nconst converted = css`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 16px;\r\n  border-bottom-left-radius: 33px;\r\n  border-bottom-right-radius: 33px;\r\n  // background-color: #60ffff;\r\n`;\r\n\r\nconst ConvertPopUp = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    convertPinyinLoading,\r\n    convertPinyinDone,\r\n    convertedPinyin,\r\n  } = useSelector((state) => state.post);\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const [inputToConvert, onChangeInputToConvert] = useInput('');\r\n\r\n  const onClickConvert = useCallback(() => {\r\n    dispatch({\r\n      type: CONVERT_PINYIN_REQUEST,\r\n      data: { content: inputToConvert },\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Global />\r\n      <>\r\n        <button onClick={() => setModalVisible(true)}>Convert to Pīnyīn</button>\r\n        <Modal\r\n          className=\"convert-modal\"\r\n          visible={modalVisible}\r\n          onCancel={() => setModalVisible(false)}\r\n          onOk={() => setModalVisible(false)}\r\n        >\r\n          <div css={convertBox}>\r\n            <textarea\r\n              css={toConvert}\r\n              placeholder=\"Ni3 hao!3\"\r\n              value={inputToConvert}\r\n              onChange={onChangeInputToConvert}\r\n            ></textarea>\r\n            <Button icon={<SwapOutlined />} onClick={onClickConvert} />\r\n            <div css={converted}>\r\n              {convertPinyinLoading ? (\r\n                // convert 되고 있는 중이라면 로딩 띄우기\r\n                <LoadingOutlined />\r\n              ) : // convert가 끝났다면 convertedPinyin 보여주기\r\n              convertPinyinDone ? (\r\n                convertedPinyin\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConvertPopUp;\r\n"]},"metadata":{},"sourceType":"module"}