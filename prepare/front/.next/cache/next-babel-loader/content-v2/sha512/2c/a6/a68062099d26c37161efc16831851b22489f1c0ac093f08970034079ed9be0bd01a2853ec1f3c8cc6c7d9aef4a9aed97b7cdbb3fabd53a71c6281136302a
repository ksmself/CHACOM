{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\signup.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport TitleLogo from '../components/TitleLogo';\nimport { roundBtn } from '../components/styles';\nconst headerStyle = css`\n  margin-top: 30px;\n`;\nconst formStyle = css`\n  width: 280px;\n  margin: 40px auto 0;\n\n  .ant-form-item {\n    display: block;\n  }\n\n  .ant-form-item-label {\n    font-weight: 700;\n  }\n\n  .ant-form-item-has-error {\n    margin-bottom: 10px;\n  }\n\n  .ant-btn-primary {\n    width: 100px;\n  }\n`;\nconst emailForm = css`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n\n  .ant-form-item-control-input-content > input {\n    width: 190px;\n  }\n\n  button {\n    position: absolute;\n    right: 0;\n    top: 40px;\n    padding: 4px 10px;\n    font-weight: 700;\n    border-color: #3a18ff;\n  }\n\n  button:focus {\n    color: #3a18ff;\n    border-color: #3a18ff;\n  }\n`;\nconst submitDiv = css`\n  margin-top: 30px;\n\n  .ant-form-item-control-input-content {\n    display: flex;\n    justify-content: center;\n  }\n`; // localhost:3000/signup\n\nconst SignUp = () => {\n  const [form] = Form.useForm();\n  const {\n    0: duplicateUser,\n    1: setDuplicateUser\n  } = useState(false);\n  const checkDuplicateUser = useCallback(() => {\n    // 만약, 중복된 user라면\n    setDuplicateUser(true);\n  }, []);\n\n  const onFinish = values => {\n    // values는 {email: \"ksmself@wizlive.com\", password: \"sfsfsfs\", confirm: \"sfsfsfs\"}\n    console.log('Received values of form: ', values);\n  };\n\n  return _jsxDEV(\"div\", {\n    css: headerStyle,\n    children: [_jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), _jsxDEV(Form, {\n      form: form,\n      css: formStyle,\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      children: [_jsxDEV(\"div\", {\n        css: emailForm,\n        children: [_jsxDEV(Form.Item, {\n          name: \"email\",\n          label: \"\\uC544\\uC774\\uB514(\\uC774\\uBA54\\uC77C)\",\n          rules: [{\n            type: 'email',\n            message: '올바른 이메일 주소를 입력해주세요!'\n          }, {\n            required: true,\n            message: '아이디(이메일)을 입력해주세요!'\n          }],\n          children: _jsxDEV(Input, {\n            placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), _jsxDEV(Form.Item, {\n          children: _jsxDEV(Button, {\n            onClick: checkDuplicateUser,\n            children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        name: \"password\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        rules: [{\n          required: true,\n          message: '비밀번호를 입력해주세요!'\n        }],\n        hasFeedback: true,\n        children: _jsxDEV(Input.Password, {\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        name: \"confirm\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: '비밀번호를 확인해주세요!'\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('입력하신 비밀번호와 일치하지 않습니다!'));\n          }\n\n        })],\n        children: _jsxDEV(Input.Password, {\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uD55C \\uBC88 \\uB354 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        css: submitDiv,\n        children: _jsxDEV(Button, {\n          type: \"primary\",\n          shape: \"round\",\n          htmlType: \"submit\",\n          css: roundBtn,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/signup.js"],"names":["css","useState","Form","Input","Button","TitleLogo","roundBtn","headerStyle","formStyle","emailForm","submitDiv","SignUp","form","useForm","duplicateUser","setDuplicateUser","checkDuplicateUser","useCallback","onFinish","values","console","log","type","message","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useState } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport TitleLogo from '../components/TitleLogo';\r\nimport { roundBtn } from '../components/styles';\r\n\r\nconst headerStyle = css`\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst formStyle = css`\r\n  width: 280px;\r\n  margin: 40px auto 0;\r\n\r\n  .ant-form-item {\r\n    display: block;\r\n  }\r\n\r\n  .ant-form-item-label {\r\n    font-weight: 700;\r\n  }\r\n\r\n  .ant-form-item-has-error {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .ant-btn-primary {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst emailForm = css`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: relative;\r\n\r\n  .ant-form-item-control-input-content > input {\r\n    width: 190px;\r\n  }\r\n\r\n  button {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 40px;\r\n    padding: 4px 10px;\r\n    font-weight: 700;\r\n    border-color: #3a18ff;\r\n  }\r\n\r\n  button:focus {\r\n    color: #3a18ff;\r\n    border-color: #3a18ff;\r\n  }\r\n`;\r\n\r\nconst submitDiv = css`\r\n  margin-top: 30px;\r\n\r\n  .ant-form-item-control-input-content {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\n// localhost:3000/signup\r\nconst SignUp = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [duplicateUser, setDuplicateUser] = useState(false);\r\n  const checkDuplicateUser = useCallback(() => {\r\n    // 만약, 중복된 user라면\r\n    setDuplicateUser(true);\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    // values는 {email: \"ksmself@wizlive.com\", password: \"sfsfsfs\", confirm: \"sfsfsfs\"}\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <div css={headerStyle}>\r\n      <TitleLogo />\r\n      <Form form={form} css={formStyle} onFinish={onFinish} scrollToFirstError>\r\n        <div css={emailForm}>\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"아이디(이메일)\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: '올바른 이메일 주소를 입력해주세요!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: '아이디(이메일)을 입력해주세요!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"이메일을 입력해주세요\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button onClick={checkDuplicateUser}>중복확인</Button>\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"비밀번호\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 입력해주세요!',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password placeholder=\"비밀번호를 입력해주세요\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"비밀번호 확인\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 확인해주세요!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error('입력하신 비밀번호와 일치하지 않습니다!')\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"비밀번호를 한 번 더 입력해주세요\" />\r\n        </Form.Item>\r\n        <Form.Item css={submitDiv}>\r\n          <Button type=\"primary\" shape=\"round\" htmlType=\"submit\" css={roundBtn}>\r\n            회원가입\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}