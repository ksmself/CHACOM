{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\signup.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useCallback, useEffect, useRef } from 'react';\nimport { Form, Input, Button, Modal, message } from 'antd';\nimport { createGlobalStyle } from 'styled-components';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TitleLogo from '../components/TitleLogo';\nimport { roundBtn } from '../components/styles';\nimport useInput from '../hooks/useInput';\nimport { CHECK_DUPLICATE_REQUEST, SIGN_UP_END, SIGN_UP_REQUEST } from '../reducers/user'; // localhost:3000/signup\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpDone,\n    checkDuplicateDone,\n    isDuplicated\n  } = useSelector(state => state.user);\n  const [form] = Form.useForm();\n  const idRef = useRef();\n  const router = useRouter();\n  const {\n    0: checkClicked,\n    1: setCheckClicked\n  } = useState(false);\n  const checkDuplicate = useCallback(() => {\n    dispatch({\n      type: CHECK_DUPLICATE_REQUEST,\n      data: {\n        nickname: form.getFieldValue('nickname')\n      }\n    });\n    setCheckClicked(true);\n  }, [form.getFieldValue('nickname')]);\n\n  const duplicatedId = () => {\n    form.setFieldsValue({\n      nickname: ''\n    });\n    console.log('이미 사용중인 아이디라고 모달 뜨기 직전');\n    Modal.error({\n      title: '이미 사용중인 아이디입니다.',\n      onOk: () => {\n        idRef.current.focus();\n      }\n    });\n  };\n\n  const nonDuplicatedId = () => {\n    const target = document.getElementById('submit-btn');\n    target.disabled = false;\n    console.log('사용 가능한 아이디라고 모달 뜨기 직전');\n    Modal.success({\n      title: '사용 가능한 아이디입니다.'\n    });\n  };\n\n  const onFinish = values => {\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        nickname: values.nickname,\n        password: values.password,\n        passwordCheck: values.confirm\n      }\n    });\n  };\n\n  const [id, onChangeId] = useInput('');\n  useEffect(() => {\n    const duplicateBtn = document.getElementById('duplicate-btn');\n\n    if (id.length >= 6 && id.length <= 11) {\n      duplicateBtn.disabled = false;\n    } else {\n      duplicateBtn.disabled = true;\n    }\n  }, [id]);\n  useEffect(() => {\n    if (checkDuplicateDone && checkClicked) {\n      console.log('isDuplicated인지 확인중');\n      isDuplicated ? duplicatedId() : nonDuplicatedId();\n    }\n\n    setCheckClicked(false);\n  }, [checkDuplicateDone, checkClicked, isDuplicated]);\n  useEffect(() => {\n    if (signUpDone) {\n      router.replace('/');\n      const user = form.getFieldValue('nickname');\n      message.success({\n        content: `${user}님 회원가입이 완료되었습니다.`,\n        className: 'custom-class',\n        style: {\n          marginTop: '40vh',\n          fontWeight: 700\n        },\n        duration: 2\n      });\n      dispatch({\n        type: SIGN_UP_END\n      });\n    }\n  }, [signUpDone]);\n  return _jsxDEV(\"div\", {\n    css: headerStyle,\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), _jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), _jsxDEV(Form, {\n      form: form,\n      css: formStyle,\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      children: [_jsxDEV(\"div\", {\n        children: _jsxDEV(Form.Item, {\n          name: \"nickname\",\n          label: \"\\uC544\\uC774\\uB514\",\n          rules: [{\n            min: 6,\n            message: '아이디는 6자 이상이어야 합니다.'\n          }, {\n            max: 11,\n            message: '11자 이내로 입력해주세요!'\n          }, {\n            required: true,\n            message: '아이디를 입력해주세요!'\n          }],\n          children: _jsxDEV(\"div\", {\n            css: idForm,\n            children: [_jsxDEV(Input, {\n              className: \"id-input\",\n              type: \"id\",\n              value: id,\n              onChange: onChangeId,\n              placeholder: \"6 ~ 11\\uC790 \\uBB38\\uC790, \\uC22B\\uC790, \\uAE30\\uD638\",\n              ref: idRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), _jsxDEV(Button, {\n              id: \"duplicate-btn\",\n              onClick: checkDuplicate,\n              children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        name: \"password\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        rules: [{\n          required: true,\n          message: '비밀번호를 입력해주세요!'\n        }, {\n          min: 8,\n          message: '8자 이상의 문자, 숫자, 기호로 입력해주세요'\n        }],\n        hasFeedback: true,\n        children: _jsxDEV(Input.Password, {\n          placeholder: \"8\\uC790 \\uC774\\uC0C1\\uC758 \\uBB38\\uC790, \\uC22B\\uC790, \\uAE30\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        name: \"confirm\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: '비밀번호를 확인해주세요!'\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('입력하신 비밀번호와 일치하지 않습니다!'));\n          }\n\n        })],\n        children: _jsxDEV(Input.Password, {\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uD55C \\uBC88 \\uB354 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        css: submitDiv,\n        children: _jsxDEV(Button, {\n          type: \"primary\",\n          id: \"submit-btn\",\n          shape: \"round\",\n          htmlType: \"submit\",\n          css: roundBtn,\n          disabled: true,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\nconst headerStyle = css`\n  margin-top: 30px;\n\n  @media (min-width: 768px) {\n    margin-top: 60px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-top: 80px;\n  }\n`;\nconst formStyle = css`\n  width: 280px;\n  margin: 40px auto 0;\n\n  @media (min-width: 768px) {\n    width: 400px;\n    margin-top: 70px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 450px;\n    margin-top: 60px;\n  }\n\n  .ant-form-item {\n    display: block;\n\n    @media (min-width: 768px) {\n      margin-bottom: 50px;\n    }\n\n    .ant-input {\n      @media (min-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n\n  .ant-form-item-label {\n    font-weight: 700;\n\n    label {\n      @media (min-width: 768px) {\n        margin-bottom: 10px;\n        font-size: 18px;\n      }\n\n      @media (min-width: 1024px) {\n        margin-bottom: 16px;\n        font-size: 22px;\n      }\n    }\n\n    label::after {\n      content: '';\n    }\n  }\n\n  // 비밀번호 & 비밀번호 확인 input 높이\n  .ant-input-affix-wrapper {\n    height: 38px;\n  }\n\n  .ant-form-item-has-error {\n    margin-bottom: 10px;\n\n    @media (min-width: 768px) {\n      margin-bottom: 28px;\n    }\n  }\n\n  .ant-btn-primary {\n    width: 100px;\n  }\n`;\nconst idForm = css`\n  display: flex;\n  justify-content: space-between;\n\n  .ant-input {\n    width: 190px;\n    margin-right: 10px;\n\n    @media (min-width: 768px) {\n      width: 310px;\n    }\n\n    @media (min-width: 1024px) {\n      width: 410px;\n    }\n  }\n\n  button {\n    padding: 4px 10px;\n    font-weight: 700;\n    border-color: #3a18ff;\n\n    @media (min-width: 768px) {\n      height: 38px;\n    }\n  }\n\n  button:hover {\n    color: #3a18ff;\n    border-color: #3a18ff;\n  }\n\n  button:focus {\n    color: #3a18ff;\n    border-color: #3a18ff;\n  }\n`;\nconst submitDiv = css`\n  padding-top: 25px;\n\n  .ant-form-item-control-input-content {\n    display: flex;\n    justify-content: center;\n\n    button {\n      @media (min-width: 768px) {\n        width: 130px;\n      }\n    }\n  }\n`;\nconst Global = createGlobalStyle`\n  .ant-modal-confirm-body-wrapper\n    > .ant-modal-confirm-body\n    > .ant-modal-confirm-title {\n    font-weight: 700;\n  }\n`;\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/signup.js"],"names":["css","useState","useCallback","useEffect","useRef","Form","Input","Button","Modal","message","createGlobalStyle","useRouter","useDispatch","useSelector","TitleLogo","roundBtn","useInput","CHECK_DUPLICATE_REQUEST","SIGN_UP_END","SIGN_UP_REQUEST","SignUp","dispatch","signUpDone","checkDuplicateDone","isDuplicated","state","user","form","useForm","idRef","router","checkClicked","setCheckClicked","checkDuplicate","type","data","nickname","getFieldValue","duplicatedId","setFieldsValue","console","log","error","title","onOk","current","focus","nonDuplicatedId","target","document","getElementById","disabled","success","onFinish","values","password","passwordCheck","confirm","id","onChangeId","duplicateBtn","length","replace","content","className","style","marginTop","fontWeight","duration","headerStyle","formStyle","min","max","required","idForm","validator","_","value","Promise","resolve","reject","Error","submitDiv","Global"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,EAA2CC,MAA3C,QAAyD,OAAzD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,OAArC,QAAoD,MAApD;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SACEC,uBADF,EAEEC,WAFF,EAGEC,eAHF,QAIO,kBAJP,C,CAMA;;AACA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,UAAF;AAAcC,IAAAA,kBAAd;AAAkCC,IAAAA;AAAlC,MAAmDX,WAAW,CACjEY,KAAD,IAAWA,KAAK,CAACC,IADiD,CAApE;AAIA,QAAM,CAACC,IAAD,IAAStB,IAAI,CAACuB,OAAL,EAAf;AACA,QAAMC,KAAK,GAAGzB,MAAM,EAApB;AACA,QAAM0B,MAAM,GAAGnB,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACoB,YAAD;AAAA,OAAeC;AAAf,MAAkC/B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMgC,cAAc,GAAG/B,WAAW,CAAC,MAAM;AACvCmB,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAEjB,uBADC;AAEPkB,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAET,IAAI,CAACU,aAAL,CAAmB,UAAnB;AADN;AAFC,KAAD,CAAR;AAMAL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GARiC,EAQ/B,CAACL,IAAI,CAACU,aAAL,CAAmB,UAAnB,CAAD,CAR+B,CAAlC;;AAUA,QAAMC,YAAY,GAAG,MAAM;AACzBX,IAAAA,IAAI,CAACY,cAAL,CAAoB;AAClBH,MAAAA,QAAQ,EAAE;AADQ,KAApB;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAjC,IAAAA,KAAK,CAACkC,KAAN,CAAY;AACVC,MAAAA,KAAK,EAAE,iBADG;AAEVC,MAAAA,IAAI,EAAE,MAAM;AACVf,QAAAA,KAAK,CAACgB,OAAN,CAAcC,KAAd;AACD;AAJS,KAAZ;AAMD,GAXD;;AAaA,QAAMC,eAAe,GAAG,MAAM;AAC5B,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAf;AACAF,IAAAA,MAAM,CAACG,QAAP,GAAkB,KAAlB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAjC,IAAAA,KAAK,CAAC4C,OAAN,CAAc;AACZT,MAAAA,KAAK,EAAE;AADK,KAAd;AAGD,GAPD;;AASA,QAAMU,QAAQ,GAAIC,MAAD,IAAY;AAC3BjC,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAEf,eADC;AAEPgB,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAEkB,MAAM,CAAClB,QADb;AAEJmB,QAAAA,QAAQ,EAAED,MAAM,CAACC,QAFb;AAGJC,QAAAA,aAAa,EAAEF,MAAM,CAACG;AAHlB;AAFC,KAAD,CAAR;AAQD,GATD;;AAWA,QAAM,CAACC,EAAD,EAAKC,UAAL,IAAmB3C,QAAQ,CAAC,EAAD,CAAjC;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyD,YAAY,GAAGX,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAArB;;AACA,QAAIQ,EAAE,CAACG,MAAH,IAAa,CAAb,IAAkBH,EAAE,CAACG,MAAH,IAAa,EAAnC,EAAuC;AACrCD,MAAAA,YAAY,CAACT,QAAb,GAAwB,KAAxB;AACD,KAFD,MAEO;AACLS,MAAAA,YAAY,CAACT,QAAb,GAAwB,IAAxB;AACD;AACF,GAPQ,EAON,CAACO,EAAD,CAPM,CAAT;AASAvD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,kBAAkB,IAAIQ,YAA1B,EAAwC;AACtCS,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAjB,MAAAA,YAAY,GAAGc,YAAY,EAAf,GAAoBS,eAAe,EAA/C;AACD;;AACDf,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GANQ,EAMN,CAACT,kBAAD,EAAqBQ,YAArB,EAAmCP,YAAnC,CANM,CAAT;AAQArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,UAAJ,EAAgB;AACdQ,MAAAA,MAAM,CAACgC,OAAP,CAAe,GAAf;AACA,YAAMpC,IAAI,GAAGC,IAAI,CAACU,aAAL,CAAmB,UAAnB,CAAb;AACA5B,MAAAA,OAAO,CAAC2C,OAAR,CAAgB;AACdW,QAAAA,OAAO,EAAG,GAAErC,IAAK,kBADH;AAEdsC,QAAAA,SAAS,EAAE,cAFG;AAGdC,QAAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE,MADN;AAELC,UAAAA,UAAU,EAAE;AAFP,SAHO;AAOdC,QAAAA,QAAQ,EAAE;AAPI,OAAhB;AASA/C,MAAAA,QAAQ,CAAC;AACPa,QAAAA,IAAI,EAAEhB;AADC,OAAD,CAAR;AAGD;AACF,GAjBQ,EAiBN,CAACI,UAAD,CAjBM,CAAT;AAmBA,SACE;AAAK,IAAA,GAAG,EAAE+C,WAAV;AAAA,eACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE1C,IAAZ;AAAkB,MAAA,GAAG,EAAE2C,SAAvB;AAAkC,MAAA,QAAQ,EAAEjB,QAA5C;AAAsD,MAAA,kBAAkB,MAAxE;AAAA,iBACE;AAAA,kBACE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,oBAFR;AAGE,UAAA,KAAK,EAAE,CACL;AACEkB,YAAAA,GAAG,EAAE,CADP;AAEE9D,YAAAA,OAAO,EAAE;AAFX,WADK,EAKL;AACE+D,YAAAA,GAAG,EAAE,EADP;AAEE/D,YAAAA,OAAO,EAAE;AAFX,WALK,EASL;AACEgE,YAAAA,QAAQ,EAAE,IADZ;AAEEhE,YAAAA,OAAO,EAAE;AAFX,WATK,CAHT;AAAA,oBAkBE;AAAK,YAAA,GAAG,EAAEiE,MAAV;AAAA,uBACE,QAAC,KAAD;AACE,cAAA,SAAS,EAAC,UADZ;AAEE,cAAA,IAAI,EAAC,IAFP;AAGE,cAAA,KAAK,EAAEhB,EAHT;AAIE,cAAA,QAAQ,EAAEC,UAJZ;AAKE,cAAA,WAAW,EAAC,uDALd;AAME,cAAA,GAAG,EAAE9B;AANP;AAAA;AAAA;AAAA;AAAA,oBADF,EASE,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAC,eAAX;AAA2B,cAAA,OAAO,EAAEI,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAoCE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAC,0BAFR;AAGE,QAAA,KAAK,EAAE,CACL;AACEwC,UAAAA,QAAQ,EAAE,IADZ;AAEEhE,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACE8D,UAAAA,GAAG,EAAE,CADP;AAEE9D,UAAAA,OAAO,EAAE;AAFX,SALK,CAHT;AAaE,QAAA,WAAW,MAbb;AAAA,kBAeE,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,cApCF,EAsDE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAC,uCAFR;AAGE,QAAA,YAAY,EAAE,CAAC,UAAD,CAHhB;AAIE,QAAA,WAAW,MAJb;AAKE,QAAA,KAAK,EAAE,CACL;AACEgE,UAAAA,QAAQ,EAAE,IADZ;AAEEhE,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL,CAAC;AAAE4B,UAAAA;AAAF,SAAD,MAAwB;AACtBsC,UAAAA,SAAS,CAACC,CAAD,EAAIC,KAAJ,EAAW;AAClB,gBAAI,CAACA,KAAD,IAAUxC,aAAa,CAAC,UAAD,CAAb,KAA8BwC,KAA5C,EAAmD;AACjD,qBAAOC,OAAO,CAACC,OAAR,EAAP;AACD;;AAED,mBAAOD,OAAO,CAACE,MAAR,CACL,IAAIC,KAAJ,CAAU,uBAAV,CADK,CAAP;AAGD;;AATqB,SAAxB,CALK,CALT;AAAA,kBAuBE,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAvBF;AAAA;AAAA;AAAA;AAAA,cAtDF,EA+EE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,GAAG,EAAEC,SAAhB;AAAA,kBACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,EAAE,EAAC,YAFL;AAGE,UAAA,KAAK,EAAC,OAHR;AAIE,UAAA,QAAQ,EAAC,QAJX;AAKE,UAAA,GAAG,EAAEnE,QALP;AAME,UAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA/EF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkGD,CA7LD;;AA+LA,MAAMsD,WAAW,GAAGrE,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,MAAMsE,SAAS,GAAGtE,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhEA;AAkEA,MAAM0E,MAAM,GAAG1E,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApCA;AAsCA,MAAMkF,SAAS,GAAGlF,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMmF,MAAM,GAAGzE,iBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAeU,MAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button, Modal, message } from 'antd';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useRouter } from 'next/router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport TitleLogo from '../components/TitleLogo';\r\nimport { roundBtn } from '../components/styles';\r\nimport useInput from '../hooks/useInput';\r\nimport {\r\n  CHECK_DUPLICATE_REQUEST,\r\n  SIGN_UP_END,\r\n  SIGN_UP_REQUEST,\r\n} from '../reducers/user';\r\n\r\n// localhost:3000/signup\r\nconst SignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const { signUpDone, checkDuplicateDone, isDuplicated } = useSelector(\r\n    (state) => state.user\r\n  );\r\n\r\n  const [form] = Form.useForm();\r\n  const idRef = useRef();\r\n  const router = useRouter();\r\n\r\n  const [checkClicked, setCheckClicked] = useState(false);\r\n  const checkDuplicate = useCallback(() => {\r\n    dispatch({\r\n      type: CHECK_DUPLICATE_REQUEST,\r\n      data: {\r\n        nickname: form.getFieldValue('nickname'),\r\n      },\r\n    });\r\n    setCheckClicked(true);\r\n  }, [form.getFieldValue('nickname')]);\r\n\r\n  const duplicatedId = () => {\r\n    form.setFieldsValue({\r\n      nickname: '',\r\n    });\r\n    console.log('이미 사용중인 아이디라고 모달 뜨기 직전');\r\n    Modal.error({\r\n      title: '이미 사용중인 아이디입니다.',\r\n      onOk: () => {\r\n        idRef.current.focus();\r\n      },\r\n    });\r\n  };\r\n\r\n  const nonDuplicatedId = () => {\r\n    const target = document.getElementById('submit-btn');\r\n    target.disabled = false;\r\n    console.log('사용 가능한 아이디라고 모달 뜨기 직전');\r\n    Modal.success({\r\n      title: '사용 가능한 아이디입니다.',\r\n    });\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: {\r\n        nickname: values.nickname,\r\n        password: values.password,\r\n        passwordCheck: values.confirm,\r\n      },\r\n    });\r\n  };\r\n\r\n  const [id, onChangeId] = useInput('');\r\n  useEffect(() => {\r\n    const duplicateBtn = document.getElementById('duplicate-btn');\r\n    if (id.length >= 6 && id.length <= 11) {\r\n      duplicateBtn.disabled = false;\r\n    } else {\r\n      duplicateBtn.disabled = true;\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (checkDuplicateDone && checkClicked) {\r\n      console.log('isDuplicated인지 확인중');\r\n      isDuplicated ? duplicatedId() : nonDuplicatedId();\r\n    }\r\n    setCheckClicked(false);\r\n  }, [checkDuplicateDone, checkClicked, isDuplicated]);\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      router.replace('/');\r\n      const user = form.getFieldValue('nickname');\r\n      message.success({\r\n        content: `${user}님 회원가입이 완료되었습니다.`,\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '40vh',\r\n          fontWeight: 700,\r\n        },\r\n        duration: 2,\r\n      });\r\n      dispatch({\r\n        type: SIGN_UP_END,\r\n      });\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  return (\r\n    <div css={headerStyle}>\r\n      <Global />\r\n      <TitleLogo />\r\n      <Form form={form} css={formStyle} onFinish={onFinish} scrollToFirstError>\r\n        <div>\r\n          <Form.Item\r\n            name=\"nickname\"\r\n            label=\"아이디\"\r\n            rules={[\r\n              {\r\n                min: 6,\r\n                message: '아이디는 6자 이상이어야 합니다.',\r\n              },\r\n              {\r\n                max: 11,\r\n                message: '11자 이내로 입력해주세요!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: '아이디를 입력해주세요!',\r\n              },\r\n            ]}\r\n          >\r\n            <div css={idForm}>\r\n              <Input\r\n                className=\"id-input\"\r\n                type=\"id\"\r\n                value={id}\r\n                onChange={onChangeId}\r\n                placeholder=\"6 ~ 11자 문자, 숫자, 기호\"\r\n                ref={idRef}\r\n              />\r\n              <Button id=\"duplicate-btn\" onClick={checkDuplicate}>\r\n                중복확인\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"비밀번호\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 입력해주세요!',\r\n            },\r\n            {\r\n              min: 8,\r\n              message: '8자 이상의 문자, 숫자, 기호로 입력해주세요',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password placeholder=\"8자 이상의 문자, 숫자, 기호\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"비밀번호 확인\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 확인해주세요!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error('입력하신 비밀번호와 일치하지 않습니다!')\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"비밀번호를 한 번 더 입력해주세요\" />\r\n        </Form.Item>\r\n        <Form.Item css={submitDiv}>\r\n          <Button\r\n            type=\"primary\"\r\n            id=\"submit-btn\"\r\n            shape=\"round\"\r\n            htmlType=\"submit\"\r\n            css={roundBtn}\r\n            disabled\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst headerStyle = css`\r\n  margin-top: 30px;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-top: 60px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-top: 80px;\r\n  }\r\n`;\r\n\r\nconst formStyle = css`\r\n  width: 280px;\r\n  margin: 40px auto 0;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 400px;\r\n    margin-top: 70px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 450px;\r\n    margin-top: 60px;\r\n  }\r\n\r\n  .ant-form-item {\r\n    display: block;\r\n\r\n    @media (min-width: 768px) {\r\n      margin-bottom: 50px;\r\n    }\r\n\r\n    .ant-input {\r\n      @media (min-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-form-item-label {\r\n    font-weight: 700;\r\n\r\n    label {\r\n      @media (min-width: 768px) {\r\n        margin-bottom: 10px;\r\n        font-size: 18px;\r\n      }\r\n\r\n      @media (min-width: 1024px) {\r\n        margin-bottom: 16px;\r\n        font-size: 22px;\r\n      }\r\n    }\r\n\r\n    label::after {\r\n      content: '';\r\n    }\r\n  }\r\n\r\n  // 비밀번호 & 비밀번호 확인 input 높이\r\n  .ant-input-affix-wrapper {\r\n    height: 38px;\r\n  }\r\n\r\n  .ant-form-item-has-error {\r\n    margin-bottom: 10px;\r\n\r\n    @media (min-width: 768px) {\r\n      margin-bottom: 28px;\r\n    }\r\n  }\r\n\r\n  .ant-btn-primary {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst idForm = css`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .ant-input {\r\n    width: 190px;\r\n    margin-right: 10px;\r\n\r\n    @media (min-width: 768px) {\r\n      width: 310px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      width: 410px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    padding: 4px 10px;\r\n    font-weight: 700;\r\n    border-color: #3a18ff;\r\n\r\n    @media (min-width: 768px) {\r\n      height: 38px;\r\n    }\r\n  }\r\n\r\n  button:hover {\r\n    color: #3a18ff;\r\n    border-color: #3a18ff;\r\n  }\r\n\r\n  button:focus {\r\n    color: #3a18ff;\r\n    border-color: #3a18ff;\r\n  }\r\n`;\r\n\r\nconst submitDiv = css`\r\n  padding-top: 25px;\r\n\r\n  .ant-form-item-control-input-content {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    button {\r\n      @media (min-width: 768px) {\r\n        width: 130px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Global = createGlobalStyle`\r\n  .ant-modal-confirm-body-wrapper\r\n    > .ant-modal-confirm-body\r\n    > .ant-modal-confirm-title {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}