{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\signup.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useCallback, useEffect, useRef } from 'react';\nimport { Form, Input, Button, Modal } from 'antd';\nimport TitleLogo from '../components/TitleLogo';\nimport { roundBtn } from '../components/styles';\nconst headerStyle = css`\n  margin-top: 30px;\n`;\nconst formStyle = css`\n  width: 280px;\n  margin: 40px auto 0;\n\n  .ant-form-item {\n    display: block;\n  }\n\n  .ant-form-item-label {\n    font-weight: 700;\n  }\n\n  .ant-form-item-has-error {\n    margin-bottom: 10px;\n  }\n\n  .ant-btn-primary {\n    width: 100px;\n  }\n`;\nconst emailForm = css`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n\n  .ant-form-item-control-input-content > input {\n    width: 190px;\n  }\n\n  button {\n    position: absolute;\n    right: 0;\n    top: 40px;\n    padding: 4px 10px;\n    font-weight: 700;\n    border-color: #3a18ff;\n  }\n\n  button:focus {\n    color: #3a18ff;\n    border-color: #3a18ff;\n  }\n\n  .ant-modal-confirm-body .ant-modal-confirm-title {\n    font-weight: 700 !important;\n  }\n`;\nconst submitDiv = css`\n  margin-top: 30px;\n\n  .ant-form-item-control-input-content {\n    display: flex;\n    justify-content: center;\n  }\n`; // localhost:3000/signup\n\nconst SignUp = () => {\n  const [form] = Form.useForm();\n  const emailRef = useRef();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const onChangeEmail = useCallback(e => {\n    setEmail(e.target.value);\n    console.log(email);\n  }, [email]);\n  const {\n    0: duplicateUser,\n    1: setDuplicateUser\n  } = useState(true);\n\n  const duplicatedId = () => {\n    Modal.error({\n      title: '이미 사용중인 이메일입니다.',\n\n      onOk() {\n        emailRef.current.focus();\n        setEmail('');\n      }\n\n    });\n  };\n\n  const nonDuplicatedId = () => {\n    Modal.success({\n      title: '사용 가능한 이메일입니다.'\n    });\n  };\n\n  const onFinish = values => {\n    // values는 {email: \"ksmself@wizlive.com\", password: \"sfsfsfs\", confirm: \"sfsfsfs\"}\n    console.log('Received values of form: ', values);\n  };\n\n  return _jsxDEV(\"div\", {\n    css: headerStyle,\n    children: [_jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), _jsxDEV(Form, {\n      form: form,\n      css: formStyle,\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      children: [_jsxDEV(\"div\", {\n        css: emailForm,\n        children: [_jsxDEV(Form.Item, {\n          name: \"email\",\n          label: \"\\uC544\\uC774\\uB514(\\uC774\\uBA54\\uC77C)\",\n          rules: [{\n            type: 'email',\n            message: '올바른 이메일 주소를 입력해주세요!'\n          }, {\n            required: true,\n            message: '아이디(이메일)을 입력해주세요!'\n          }],\n          children: _jsxDEV(Input, {\n            className: \"email-input\",\n            type: \"email\",\n            value: email,\n            onChange: onChangeEmail,\n            placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            ref: emailRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), _jsxDEV(Form.Item, {\n          children: _jsxDEV(Button, {\n            onClick: duplicateUser ? duplicatedId : nonDuplicatedId,\n            children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        name: \"password\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        rules: [{\n          required: true,\n          message: '비밀번호를 입력해주세요!'\n        }],\n        hasFeedback: true,\n        children: _jsxDEV(Input.Password, {\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        name: \"confirm\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: '비밀번호를 확인해주세요!'\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('입력하신 비밀번호와 일치하지 않습니다!'));\n          }\n\n        })],\n        children: _jsxDEV(Input.Password, {\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uD55C \\uBC88 \\uB354 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        css: submitDiv,\n        children: _jsxDEV(Button, {\n          type: \"primary\",\n          className: \"submit-btn\",\n          shape: \"round\",\n          htmlType: \"submit\",\n          css: roundBtn,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/signup.js"],"names":["css","useState","useCallback","useEffect","useRef","Form","Input","Button","Modal","TitleLogo","roundBtn","headerStyle","formStyle","emailForm","submitDiv","SignUp","form","useForm","emailRef","email","setEmail","onChangeEmail","e","target","value","console","log","duplicateUser","setDuplicateUser","duplicatedId","error","title","onOk","current","focus","nonDuplicatedId","success","onFinish","values","type","message","required","getFieldValue","validator","_","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button, Modal } from 'antd';\r\n\r\nimport TitleLogo from '../components/TitleLogo';\r\nimport { roundBtn } from '../components/styles';\r\n\r\nconst headerStyle = css`\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst formStyle = css`\r\n  width: 280px;\r\n  margin: 40px auto 0;\r\n\r\n  .ant-form-item {\r\n    display: block;\r\n  }\r\n\r\n  .ant-form-item-label {\r\n    font-weight: 700;\r\n  }\r\n\r\n  .ant-form-item-has-error {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .ant-btn-primary {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst emailForm = css`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: relative;\r\n\r\n  .ant-form-item-control-input-content > input {\r\n    width: 190px;\r\n  }\r\n\r\n  button {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 40px;\r\n    padding: 4px 10px;\r\n    font-weight: 700;\r\n    border-color: #3a18ff;\r\n  }\r\n\r\n  button:focus {\r\n    color: #3a18ff;\r\n    border-color: #3a18ff;\r\n  }\r\n\r\n  .ant-modal-confirm-body .ant-modal-confirm-title {\r\n    font-weight: 700 !important;\r\n  }\r\n`;\r\n\r\nconst submitDiv = css`\r\n  margin-top: 30px;\r\n\r\n  .ant-form-item-control-input-content {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\n// localhost:3000/signup\r\nconst SignUp = () => {\r\n  const [form] = Form.useForm();\r\n  const emailRef = useRef();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const onChangeEmail = useCallback(\r\n    (e) => {\r\n      setEmail(e.target.value);\r\n      console.log(email);\r\n    },\r\n    [email]\r\n  );\r\n\r\n  const [duplicateUser, setDuplicateUser] = useState(true);\r\n\r\n  const duplicatedId = () => {\r\n    Modal.error({\r\n      title: '이미 사용중인 이메일입니다.',\r\n      onOk() {\r\n        emailRef.current.focus();\r\n        setEmail('');\r\n      },\r\n    });\r\n  };\r\n\r\n  const nonDuplicatedId = () => {\r\n    Modal.success({\r\n      title: '사용 가능한 이메일입니다.',\r\n    });\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    // values는 {email: \"ksmself@wizlive.com\", password: \"sfsfsfs\", confirm: \"sfsfsfs\"}\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <div css={headerStyle}>\r\n      <TitleLogo />\r\n      <Form form={form} css={formStyle} onFinish={onFinish} scrollToFirstError>\r\n        <div css={emailForm}>\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"아이디(이메일)\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: '올바른 이메일 주소를 입력해주세요!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: '아이디(이메일)을 입력해주세요!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              className=\"email-input\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={onChangeEmail}\r\n              placeholder=\"이메일을 입력해주세요\"\r\n              ref={emailRef}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button onClick={duplicateUser ? duplicatedId : nonDuplicatedId}>\r\n              중복확인\r\n            </Button>\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"비밀번호\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 입력해주세요!',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password placeholder=\"비밀번호를 입력해주세요\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"비밀번호 확인\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '비밀번호를 확인해주세요!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error('입력하신 비밀번호와 일치하지 않습니다!')\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"비밀번호를 한 번 더 입력해주세요\" />\r\n        </Form.Item>\r\n        <Form.Item css={submitDiv}>\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"submit-btn\"\r\n            shape=\"round\"\r\n            htmlType=\"submit\"\r\n            css={roundBtn}\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}