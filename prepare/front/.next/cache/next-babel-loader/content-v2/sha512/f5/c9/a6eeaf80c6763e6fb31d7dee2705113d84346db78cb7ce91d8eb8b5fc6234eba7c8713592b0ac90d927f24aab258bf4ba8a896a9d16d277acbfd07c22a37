{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\ConvertPopUp.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, message, Tooltip } from 'antd';\nimport { SwapOutlined, LoadingOutlined, CloseOutlined, CopyOutlined } from '@ant-design/icons';\nimport { createGlobalStyle } from 'styled-components';\nimport { CONVERT_PINYIN_REQUEST, CONVERT_RESET_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nconst Global = createGlobalStyle`\n    .convert-modal > .ant-modal-content > .ant-modal-body{\n        padding-top: 48px;\n    }\n\n    .convert-modal > .ant-modal-content > .ant-modal-footer{\n        display: none; \n    }\n`;\nconst underlineBtn = css`\n  font-size: 16px;\n  text-decoration: underline;\n  border: none;\n  color: #98989c;\n  background-color: #fff;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 24px;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst convertBox = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  border: 3px solid #3a18ff;\n  border-radius: 33px;\n  background: #ffffff;\n  /* box-shadow: 6px 6px 12px #e8e8e8, -1px -1px 3px #e8e8e8,\n    -6px -6px 12px #e8e8e8, 1px 1px 3px #e8e8e8; */\n`;\nconst cancelBtn = css`\n  position: absolute;\n  top: 13px;\n  right: 13px;\n`;\nconst toConvert = css`\n  width: 100%;\n  height: 100px;\n  padding: 16px;\n  resize: none;\n  font-size: 21px;\n  border: none;\n  border-top-left-radius: 33px;\n  border-top-right-radius: 33px;\n`;\nconst converted = css`\n  width: 100%;\n  height: 100px;\n  padding: 16px;\n  position: relative;\n  font-size: 21px;\n  border-bottom-left-radius: 33px;\n  border-bottom-right-radius: 33px;\n`;\nconst copyBtn = css`\n  position: absolute;\n  bottom: 13px;\n  right: 13px;\n`;\n\nconst ConvertPopUp = () => {\n  const pinyinRef = useRef(null);\n  const dispatch = useDispatch();\n  const {\n    convertLoading,\n    convertDone,\n    convertedPinyin\n  } = useSelector(state => state.post);\n  const [input, onChangeInput, setInput] = useInput('');\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const onCancelModal = useCallback(() => {\n    setModalVisible(false);\n    setInput('');\n    dispatch({\n      type: CONVERT_RESET_REQUEST\n    });\n  }, []);\n  const onClickCancel = useCallback(() => {\n    setInput('');\n    dispatch({\n      type: CONVERT_RESET_REQUEST\n    });\n  }, []);\n  const onClickConvert = useCallback(() => {\n    if (input) {\n      dispatch({\n        type: CONVERT_PINYIN_REQUEST,\n        data: {\n          content: input\n        }\n      });\n    }\n  }, [input]);\n  const onClickCopy = useCallback(() => {\n    const pinyin = pinyinRef.current.innerText;\n    navigator.clipboard.writeText(pinyin);\n    message.success({\n      content: '클립보드에 복사되었습니다!',\n      duration: 1\n    });\n  }, []);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), _jsxDEV(_Fragment, {\n      children: [_jsxDEV(\"button\", {\n        css: underlineBtn,\n        onClick: () => setModalVisible(true),\n        children: \"Convert to P\\u012Bny\\u012Bn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), _jsxDEV(Modal, {\n        className: \"convert-modal\",\n        visible: modalVisible,\n        onCancel: onCancelModal,\n        onOk: () => setModalVisible(false),\n        children: _jsxDEV(\"div\", {\n          css: convertBox,\n          children: [input && _jsxDEV(Button, {\n            css: cancelBtn,\n            icon: _jsxDEV(CloseOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 23\n            }, this),\n            onClick: onClickCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), _jsxDEV(Tooltip, {\n            title: \"\\uC131\\uC870\\uB294 \\uB2E8\\uC5B4, \\uD2B9\\uC218\\uBB38\\uC790 \\uB05D\\uC5D0 \\uD45C\\uAE30\\uD574\\uC8FC\\uC138\\uC694\",\n            color: \"#3a18ff\",\n            children: _jsxDEV(\"textarea\", {\n              css: toConvert,\n              placeholder: \"Ni3 hao!3\",\n              value: input,\n              onChange: onChangeInput,\n              spellCheck: \"false\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            icon: _jsxDEV(SwapOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 27\n            }, this),\n            onClick: onClickConvert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), _jsxDEV(\"div\", {\n            className: \"convert-text\",\n            css: converted,\n            ref: pinyinRef,\n            children: [!convertLoading && !convertDone && null, convertLoading && !convertDone && _jsxDEV(LoadingOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 50\n            }, this), !convertLoading && convertDone && convertedPinyin, convertDone && _jsxDEV(Button, {\n              css: copyBtn,\n              icon: _jsxDEV(CopyOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this),\n              onClick: onClickCopy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\nexport default ConvertPopUp;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/ConvertPopUp.js"],"names":["css","useCallback","useState","useRef","useDispatch","useSelector","Modal","Button","message","Tooltip","SwapOutlined","LoadingOutlined","CloseOutlined","CopyOutlined","createGlobalStyle","CONVERT_PINYIN_REQUEST","CONVERT_RESET_REQUEST","useInput","Global","underlineBtn","convertBox","cancelBtn","toConvert","converted","copyBtn","ConvertPopUp","pinyinRef","dispatch","convertLoading","convertDone","convertedPinyin","state","post","input","onChangeInput","setInput","modalVisible","setModalVisible","onCancelModal","type","onClickCancel","onClickConvert","data","content","onClickCopy","pinyin","current","innerText","navigator","clipboard","writeText","success","duration"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, message, Tooltip } from 'antd';\r\nimport {\r\n  SwapOutlined,\r\n  LoadingOutlined,\r\n  CloseOutlined,\r\n  CopyOutlined,\r\n} from '@ant-design/icons';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport {\r\n  CONVERT_PINYIN_REQUEST,\r\n  CONVERT_RESET_REQUEST,\r\n} from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst Global = createGlobalStyle`\r\n    .convert-modal > .ant-modal-content > .ant-modal-body{\r\n        padding-top: 48px;\r\n    }\r\n\r\n    .convert-modal > .ant-modal-content > .ant-modal-footer{\r\n        display: none; \r\n    }\r\n`;\r\n\r\nconst underlineBtn = css`\r\n  font-size: 16px;\r\n  text-decoration: underline;\r\n  border: none;\r\n  color: #98989c;\r\n  background-color: #fff;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 24px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst convertBox = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n  border: 3px solid #3a18ff;\r\n  border-radius: 33px;\r\n  background: #ffffff;\r\n  /* box-shadow: 6px 6px 12px #e8e8e8, -1px -1px 3px #e8e8e8,\r\n    -6px -6px 12px #e8e8e8, 1px 1px 3px #e8e8e8; */\r\n`;\r\n\r\nconst cancelBtn = css`\r\n  position: absolute;\r\n  top: 13px;\r\n  right: 13px;\r\n`;\r\n\r\nconst toConvert = css`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 16px;\r\n  resize: none;\r\n  font-size: 21px;\r\n  border: none;\r\n  border-top-left-radius: 33px;\r\n  border-top-right-radius: 33px;\r\n`;\r\n\r\nconst converted = css`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 16px;\r\n  position: relative;\r\n  font-size: 21px;\r\n  border-bottom-left-radius: 33px;\r\n  border-bottom-right-radius: 33px;\r\n`;\r\n\r\nconst copyBtn = css`\r\n  position: absolute;\r\n  bottom: 13px;\r\n  right: 13px;\r\n`;\r\n\r\nconst ConvertPopUp = () => {\r\n  const pinyinRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { convertLoading, convertDone, convertedPinyin } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  const [input, onChangeInput, setInput] = useInput('');\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const onCancelModal = useCallback(() => {\r\n    setModalVisible(false);\r\n    setInput('');\r\n    dispatch({\r\n      type: CONVERT_RESET_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  const onClickCancel = useCallback(() => {\r\n    setInput('');\r\n    dispatch({\r\n      type: CONVERT_RESET_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  const onClickConvert = useCallback(() => {\r\n    if (input) {\r\n      dispatch({\r\n        type: CONVERT_PINYIN_REQUEST,\r\n        data: { content: input },\r\n      });\r\n    }\r\n  }, [input]);\r\n\r\n  const onClickCopy = useCallback(() => {\r\n    const pinyin = pinyinRef.current.innerText;\r\n    navigator.clipboard.writeText(pinyin);\r\n    message.success({\r\n      content: '클립보드에 복사되었습니다!',\r\n      duration: 1,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Global />\r\n      <>\r\n        <button css={underlineBtn} onClick={() => setModalVisible(true)}>\r\n          Convert to Pīnyīn\r\n        </button>\r\n        <Modal\r\n          className=\"convert-modal\"\r\n          visible={modalVisible}\r\n          onCancel={onCancelModal}\r\n          onOk={() => setModalVisible(false)}\r\n        >\r\n          <div css={convertBox}>\r\n            {input && (\r\n              <Button\r\n                css={cancelBtn}\r\n                icon={<CloseOutlined />}\r\n                onClick={onClickCancel}\r\n              />\r\n            )}\r\n            <Tooltip\r\n              title=\"성조는 단어, 특수문자 끝에 표기해주세요\"\r\n              color=\"#3a18ff\"\r\n            >\r\n              <textarea\r\n                css={toConvert}\r\n                placeholder=\"Ni3 hao!3\"\r\n                value={input}\r\n                onChange={onChangeInput}\r\n                spellCheck=\"false\"\r\n              ></textarea>\r\n            </Tooltip>\r\n\r\n            <Button icon={<SwapOutlined />} onClick={onClickConvert} />\r\n            <div className=\"convert-text\" css={converted} ref={pinyinRef}>\r\n              {!convertLoading && !convertDone && null}\r\n              {convertLoading && !convertDone && <LoadingOutlined />}\r\n              {!convertLoading && convertDone && convertedPinyin}\r\n              {convertDone && (\r\n                <Button\r\n                  css={copyBtn}\r\n                  icon={<CopyOutlined />}\r\n                  onClick={onClickCopy}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConvertPopUp;\r\n"]},"metadata":{},"sourceType":"module"}