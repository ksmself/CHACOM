{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { useRouter } from 'next/router';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Tag } from 'antd';\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nimport Header from '../../components/Header/index';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { post, postTitle, buttonGroup, postInfoBox, postInfoWriter, postInfoBullet, postInfoDate, hashtagBox, contentBox, leftArrow, rightArrow, expressionNum, pinyin, meaning } from './styles';\nimport UpdateBtn from '../../components/UpdateBtn';\nimport DeleteBtn from '../../components/DeleteBtn';\nimport LikeBtn from '../../components/LikeBtn';\ndayjs.locale('ko');\n\nvar Post = function Post() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var router = useRouter();\n  var id = router.query.id; // const singlePost = {\n  //   id: 1,\n  //   title: '(-가 -하다) 왕초보편',\n  //   createdAt: '2021-05-20 08:18:40',\n  //   User: {\n  //     id: 3,\n  //     nickname: 'admin1',\n  //   },\n  //   Expressions: [\n  //     { pinyin: 'Rènshi nǐ hěn gāoxìng!', meaning: '만나서 반갑습니다!' },\n  //     {\n  //       pinyin: 'Wǒ yào yí ge sǎn hào tào cān.',\n  //       meaning: '3번 세트 하나 주세요.',\n  //     },\n  //     {\n  //       pinyin: 'Kuài guǒ lái chī, yíhuìr fāngbiànmiàn dōu pào kāi le.',\n  //       meaning: '라면 불기 전에 빨리 와서 먹어.',\n  //     },\n  //     { pinyin: 'Nǐ chī ròu ma?', meaning: '당신은 고기를 먹습니까?' },\n  //     { pinyin: 'Nǐ dǒng ma?', meaning: '당신은 이해가 됩니까?' },\n  //   ],\n  //   Hashtags: [\n  //     { id: 1, name: '왕초보' },\n  //     { id: 2, name: '테스트' },\n  //     { id: 3, name: '반시밀당반시상' },\n  //   ],\n  //   Comments: {},\n  //   Likers: {},\n  // };\n\n  var writtenByMe = (me === null || me === void 0 ? void 0 : me.nickname) === (singlePost === null || singlePost === void 0 ? void 0 : singlePost.User.nickname);\n\n  var _useState = useState(0),\n      curIndex = _useState[0],\n      setCurIndex = _useState[1];\n\n  var goToPrev = useCallback(function () {\n    if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);else setCurIndex(function (prev) {\n      return prev - 1;\n    });\n  }, [curIndex]);\n  var goToNext = useCallback(function () {\n    if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);else setCurIndex(function (prev) {\n      return prev + 1;\n    });\n  }, [curIndex]);\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POST_REQUEST,\n      data: id\n    });\n  });\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"header\", {\n      children: _jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, _this), _jsxDEV(\"div\", {\n      css: post,\n      children: [_jsxDEV(\"div\", {\n        css: postTitle,\n        children: singlePost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this), writtenByMe && _jsxDEV(\"div\", {\n        css: buttonGroup,\n        children: [_jsxDEV(UpdateBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, _this), _jsxDEV(DeleteBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, _this), _jsxDEV(\"div\", {\n        css: postInfoBox,\n        children: [_jsxDEV(\"div\", {\n          children: [_jsxDEV(\"span\", {\n            css: postInfoWriter,\n            children: _jsxDEV(Link, {\n              href: \"/user/\".concat(singlePost === null || singlePost === void 0 ? void 0 : singlePost.User.id),\n              children: _jsxDEV(\"a\", {\n                children: singlePost.User.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, _this), _jsxDEV(\"span\", {\n            css: postInfoBullet,\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, _this), _jsxDEV(\"span\", {\n            css: postInfoDate,\n            children: dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this), _jsxDEV(LikeBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this), _jsxDEV(\"div\", {\n        css: hashtagBox,\n        children: singlePost.Hashtags.map(function (tag) {\n          return _jsxDEV(Tag, {\n            color: \"purple\",\n            children: _jsxDEV(Link, {\n              href: \"/hashtag/\".concat(tag.name),\n              children: _jsxDEV(\"a\", {\n                children: tag.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, _this)\n          }, tag.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, _this), _jsxDEV(\"div\", {\n        css: contentBox,\n        children: [_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-left\",\n          css: leftArrow,\n          onClick: goToPrev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this), _jsxDEV(\"div\", {\n          css: expressionNum,\n          children: _jsxDEV(\"div\", {\n            children: [curIndex + 1, \" / \", singlePost.Expressions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this), _jsxDEV(\"div\", {\n          css: pinyin,\n          children: singlePost.Expressions[curIndex].pinyin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this), _jsxDEV(\"div\", {\n          css: meaning,\n          children: singlePost.Expressions[curIndex].meaning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, _this), _jsxDEV(\"i\", {\n          className: \"fas fa-chevron-right\",\n          css: rightArrow,\n          onClick: goToNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Post, \"PVXHVBS7Rr6Uf5GB8iVXmdIg0lQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useRouter];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/post/[id].js"],"names":["useRouter","useCallback","useEffect","useState","useDispatch","useSelector","Tag","Link","dayjs","Header","LOAD_POST_REQUEST","post","postTitle","buttonGroup","postInfoBox","postInfoWriter","postInfoBullet","postInfoDate","hashtagBox","contentBox","leftArrow","rightArrow","expressionNum","pinyin","meaning","UpdateBtn","DeleteBtn","LikeBtn","locale","Post","dispatch","state","singlePost","user","me","router","id","query","writtenByMe","nickname","User","curIndex","setCurIndex","goToPrev","Expressions","length","prev","goToNext","type","data","title","createdAt","format","Hashtags","map","tag","name"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { useRouter } from 'next/router';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Tag } from 'antd';\r\nimport Link from 'next/link';\r\nimport dayjs from 'dayjs';\r\n\r\nimport Header from '../../components/Header/index';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport {\r\n  post,\r\n  postTitle,\r\n  buttonGroup,\r\n  postInfoBox,\r\n  postInfoWriter,\r\n  postInfoBullet,\r\n  postInfoDate,\r\n  hashtagBox,\r\n  contentBox,\r\n  leftArrow,\r\n  rightArrow,\r\n  expressionNum,\r\n  pinyin,\r\n  meaning,\r\n} from './styles';\r\nimport UpdateBtn from '../../components/UpdateBtn';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport LikeBtn from '../../components/LikeBtn';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst Post = () => {\r\n  const dispatch = useDispatch();\r\n  const { singlePost } = useSelector((state) => state.post);\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  // const singlePost = {\r\n  //   id: 1,\r\n  //   title: '(-가 -하다) 왕초보편',\r\n  //   createdAt: '2021-05-20 08:18:40',\r\n  //   User: {\r\n  //     id: 3,\r\n  //     nickname: 'admin1',\r\n  //   },\r\n  //   Expressions: [\r\n  //     { pinyin: 'Rènshi nǐ hěn gāoxìng!', meaning: '만나서 반갑습니다!' },\r\n  //     {\r\n  //       pinyin: 'Wǒ yào yí ge sǎn hào tào cān.',\r\n  //       meaning: '3번 세트 하나 주세요.',\r\n  //     },\r\n  //     {\r\n  //       pinyin: 'Kuài guǒ lái chī, yíhuìr fāngbiànmiàn dōu pào kāi le.',\r\n  //       meaning: '라면 불기 전에 빨리 와서 먹어.',\r\n  //     },\r\n  //     { pinyin: 'Nǐ chī ròu ma?', meaning: '당신은 고기를 먹습니까?' },\r\n  //     { pinyin: 'Nǐ dǒng ma?', meaning: '당신은 이해가 됩니까?' },\r\n  //   ],\r\n  //   Hashtags: [\r\n  //     { id: 1, name: '왕초보' },\r\n  //     { id: 2, name: '테스트' },\r\n  //     { id: 3, name: '반시밀당반시상' },\r\n  //   ],\r\n  //   Comments: {},\r\n  //   Likers: {},\r\n  // };\r\n\r\n  const writtenByMe = me?.nickname === singlePost?.User.nickname;\r\n\r\n  const [curIndex, setCurIndex] = useState(0);\r\n\r\n  const goToPrev = useCallback(() => {\r\n    if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);\r\n    else setCurIndex((prev) => prev - 1);\r\n  }, [curIndex]);\r\n\r\n  const goToNext = useCallback(() => {\r\n    if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);\r\n    else setCurIndex((prev) => prev + 1);\r\n  }, [curIndex]);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n      data: id,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <div css={post}>\r\n        <div css={postTitle}>{singlePost.title}</div>\r\n        {writtenByMe && (\r\n          <div css={buttonGroup}>\r\n            <UpdateBtn post={singlePost} />\r\n            <DeleteBtn post={singlePost} />\r\n          </div>\r\n        )}\r\n        <div css={postInfoBox}>\r\n          <div>\r\n            <span css={postInfoWriter}>\r\n              <Link href={`/user/${singlePost?.User.id}`}>\r\n                <a>{singlePost.User.nickname}</a>\r\n              </Link>\r\n            </span>\r\n            <span css={postInfoBullet}>·</span>\r\n            <span css={postInfoDate}>\r\n              {dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')}\r\n            </span>\r\n          </div>\r\n          <LikeBtn post={singlePost} />\r\n        </div>\r\n        <div css={hashtagBox}>\r\n          {singlePost.Hashtags.map((tag) => {\r\n            return (\r\n              <Tag key={tag.id} color=\"purple\">\r\n                <Link href={`/hashtag/${tag.name}`}>\r\n                  <a>{tag.name}</a>\r\n                </Link>\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n        <div css={contentBox}>\r\n          <i\r\n            className=\"fas fa-chevron-left\"\r\n            css={leftArrow}\r\n            onClick={goToPrev}\r\n          ></i>\r\n          <div css={expressionNum}>\r\n            <div>\r\n              {curIndex + 1} / {singlePost.Expressions.length}\r\n            </div>\r\n          </div>\r\n          <div css={pinyin}>{singlePost.Expressions[curIndex].pinyin}</div>\r\n          <div css={meaning}>{singlePost.Expressions[curIndex].meaning}</div>\r\n          <i\r\n            className=\"fas fa-chevron-right\"\r\n            css={rightArrow}\r\n            onClick={goToNext}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}