{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\ExpressionBox.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Form, Input } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport ExpressionInput from './ExpressionInput';\nconst expressionBox = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n`;\nconst plusBtn = css`\n  svg {\n    font-size: 50px;\n    color: #3a18ff;\n  }\n`;\n\nconst ExpressionBox = () => {\n  const [form] = Form.useForm();\n  const {\n    0: count,\n    1: setCount\n  } = useState(1);\n  const onClickPlus = useCallback(() => {\n    setCount(prev => prev + 1);\n  }, []);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"div\", {\n      css: expressionBox,\n      id: \"expression-box\",\n      children: _jsxDEV(Form, {\n        form: form,\n        children: [Array(count)].map(v => {\n          return _jsxDEV(Form.Item, {\n            name: \"pinyin\",\n            label: \"\\uD55C\\uC5B4\\uBCD1\\uC74C\",\n            rules: [{\n              required: true,\n              message: '한어병음을 입력해주세요!'\n            }],\n            children: _jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), _jsxDEV(PlusCircleFilled, {\n      css: plusBtn,\n      onClick: onClickPlus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default ExpressionBox;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/ExpressionBox.js"],"names":["css","useCallback","useEffect","useState","Form","Input","PlusCircleFilled","ExpressionInput","expressionBox","plusBtn","ExpressionBox","form","useForm","count","setCount","onClickPlus","prev","Array","map","v","required","message"],"mappings":";;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,aAAa,GAAGR,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMS,OAAO,GAAGT,GAAI;AACpB;AACA;AACA;AACA;AACA,CALA;;AAOA,MAAMU,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,IAAD,IAASP,IAAI,CAACQ,OAAL,EAAf;AAEA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMY,WAAW,GAAGd,WAAW,CAAC,MAAM;AACpCa,IAAAA,QAAQ,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAR;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,SACE;AAAA,eACE;AAAK,MAAA,GAAG,EAAER,aAAV;AAAyB,MAAA,EAAE,EAAC,gBAA5B;AAAA,gBAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEG,IAAZ;AAAA,kBACG,CAACM,KAAK,CAACJ,KAAD,CAAN,EAAeK,GAAf,CAAoBC,CAAD,IAAO;AACzB,iBACE,QAAC,IAAD,CAAM,IAAN;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAC,0BAFR;AAGE,YAAA,KAAK,EAAE,CACL;AACEC,cAAAA,QAAQ,EAAE,IADZ;AAEEC,cAAAA,OAAO,EAAE;AAFX,aADK,CAHT;AAAA,sBAUE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD,SAfA;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,EAsBE,QAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEZ,OAAvB;AAAgC,MAAA,OAAO,EAAEM;AAAzC;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA,kBADF;AA0BD,CAnCD;;AAqCA,eAAeL,aAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Form, Input } from 'antd';\r\nimport { PlusCircleFilled } from '@ant-design/icons';\r\nimport ExpressionInput from './ExpressionInput';\r\n\r\nconst expressionBox = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst plusBtn = css`\r\n  svg {\r\n    font-size: 50px;\r\n    color: #3a18ff;\r\n  }\r\n`;\r\n\r\nconst ExpressionBox = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [count, setCount] = useState(1);\r\n\r\n  const onClickPlus = useCallback(() => {\r\n    setCount((prev) => prev + 1);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div css={expressionBox} id=\"expression-box\">\r\n        {/* <ExpressionInput /> */}\r\n        <Form form={form}>\r\n          {[Array(count)].map((v) => {\r\n            return (\r\n              <Form.Item\r\n                name=\"pinyin\"\r\n                label=\"한어병음\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: '한어병음을 입력해주세요!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            );\r\n          })}\r\n        </Form>\r\n      </div>\r\n      <PlusCircleFilled css={plusBtn} onClick={onClickPlus} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpressionBox;\r\n"]},"metadata":{},"sourceType":"module"}