{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\ExpressionInput.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  height: 52px;\\n  margin-bottom: 5px;\\n\\n  button {\\n    position: absolute;\\n    bottom: 0;\\n    right: 0;\\n    font-size: 13px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 15px 10px;\\n  border: 3px solid #18ddff;\\n  border-radius: 4px;\\n\\n  input {\\n    width: 100%;\\n    font-size: 16px;\\n    border: none;\\n    border-bottom: 1px solid #48494b;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect } from 'react';\nimport ConvertPopUp from './ConvertPopUp';\nimport useInput from '../hooks/useInput';\nvar box = css(_templateObject());\nvar pinyinBox = css(_templateObject2());\n\nvar ExpressionInput = function ExpressionInput() {\n  _s();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      pinyin = _useInput2[0],\n      onChangePinyin = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      meaning = _useInput4[0],\n      onChangeMeaning = _useInput4[1];\n\n  return _jsxDEV(\"div\", {\n    css: box,\n    children: [_jsxDEV(\"div\", {\n      css: pinyinBox,\n      children: [_jsxDEV(\"input\", {\n        placeholder: \"\\uD55C\\uC5B4\\uBCD1\\uC74C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        value: pinyin,\n        onChange: onChangePinyin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), _jsxDEV(ConvertPopUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), _jsxDEV(\"input\", {\n      placeholder: \"\\uB73B\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      value: meaning,\n      onChange: onChangeMeaning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ExpressionInput, \"NFCWzcB9Nx6QF/HBLsJ87slR/wg=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = ExpressionInput;\nexport default ExpressionInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpressionInput\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/ExpressionInput.js"],"names":["css","useEffect","ConvertPopUp","useInput","box","pinyinBox","ExpressionInput","pinyin","onChangePinyin","meaning","onChangeMeaning"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,IAAMC,GAAG,GAAGJ,GAAH,mBAAT;AAcA,IAAMK,SAAS,GAAGL,GAAH,oBAAf;;AAaA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBACKH,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACrBI,MADqB;AAAA,MACbC,cADa;;AAAA,mBAEOL,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,MAErBM,OAFqB;AAAA,MAEZC,eAFY;;AAI5B,SACE;AAAK,IAAA,GAAG,EAAEN,GAAV;AAAA,eACE;AAAK,MAAA,GAAG,EAAEC,SAAV;AAAA,iBACE;AACE,QAAA,WAAW,EAAC,qEADd;AAEE,QAAA,KAAK,EAAEE,MAFT;AAGE,QAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,eADF,EAME,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EASE;AACE,MAAA,WAAW,EAAC,mDADd;AAEE,MAAA,KAAK,EAAEC,OAFT;AAGE,MAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CArBD;;GAAMJ,e;UAC6BH,Q,EACEA,Q;;;KAF/BG,e;AAuBN,eAAeA,eAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useEffect } from 'react';\r\n\r\nimport ConvertPopUp from './ConvertPopUp';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst box = css`\r\n  width: 100%;\r\n  padding: 15px 10px;\r\n  border: 3px solid #18ddff;\r\n  border-radius: 4px;\r\n\r\n  input {\r\n    width: 100%;\r\n    font-size: 16px;\r\n    border: none;\r\n    border-bottom: 1px solid #48494b;\r\n  }\r\n`;\r\n\r\nconst pinyinBox = css`\r\n  position: relative;\r\n  height: 52px;\r\n  margin-bottom: 5px;\r\n\r\n  button {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst ExpressionInput = () => {\r\n  const [pinyin, onChangePinyin] = useInput('');\r\n  const [meaning, onChangeMeaning] = useInput('');\r\n\r\n  return (\r\n    <div css={box}>\r\n      <div css={pinyinBox}>\r\n        <input\r\n          placeholder=\"한어병음을 입력해주세요\"\r\n          value={pinyin}\r\n          onChange={onChangePinyin}\r\n        />\r\n        <ConvertPopUp />\r\n      </div>\r\n      <input\r\n        placeholder=\"뜻을 입력해주세요\"\r\n        value={meaning}\r\n        onChange={onChangeMeaning}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpressionInput;\r\n"]},"metadata":{},"sourceType":"module"}