{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\PostContent\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport Header from '../Header';\nimport { Tag } from 'antd';\nimport Link from 'next/link';\nimport { postBox, postTitle, buttonGroup, postInfoBox, postInfoWriter, postInfoBullet, postInfoDate, hashtagBox, contentBox, leftArrow, rightArrow, expressionNum, pinyin, meaning } from './style';\nimport UpdateBtn from '../UpdateBtn';\nimport DeleteBtn from '../DeleteBtn';\nimport LikeBtn from '../LikeBtn';\n\nvar PostContent = function PostContent(_ref) {\n  _s();\n\n  var singlePost = _ref.singlePost;\n\n  // const { singlePost } = useSelector((state) => state.post);\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var writtenByMe = (me === null || me === void 0 ? void 0 : me.nickname) === (singlePost === null || singlePost === void 0 ? void 0 : singlePost.User.nickname);\n\n  var _useState = useState(0),\n      curIndex = _useState[0],\n      setCurIndex = _useState[1];\n\n  var goToPrev = useCallback(function () {\n    if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);else setCurIndex(function (prev) {\n      return prev - 1;\n    });\n  }, [curIndex]);\n  var goToNext = useCallback(function () {\n    if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);else setCurIndex(function (prev) {\n      return prev + 1;\n    });\n  }, [curIndex]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      css: postBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        css: postTitle,\n        children: singlePost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), writtenByMe && /*#__PURE__*/_jsxDEV(\"div\", {\n        css: buttonGroup,\n        children: [/*#__PURE__*/_jsxDEV(UpdateBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        css: postInfoBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            css: postInfoWriter,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/user/\".concat(singlePost === null || singlePost === void 0 ? void 0 : singlePost.User.id),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: singlePost.User.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            css: postInfoBullet,\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            css: postInfoDate,\n            children: dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(LikeBtn, {\n          post: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        css: hashtagBox,\n        children: singlePost.Hashtags.map(function (tag) {\n          return /*#__PURE__*/_jsxDEV(Tag, {\n            color: \"purple\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/hashtag/\".concat(tag.name),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: tag.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, _this)\n          }, tag.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        css: contentBox,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-left\",\n          css: leftArrow,\n          onClick: goToPrev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          css: expressionNum,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [curIndex + 1, \" / \", singlePost.Expressions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          css: pinyin,\n          children: singlePost.Expressions[curIndex].pinyin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          css: meaning,\n          children: singlePost.Expressions[curIndex].meaning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-right\",\n          css: rightArrow,\n          onClick: goToNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(PostContent, \"IY8lwg6yTIhjQp9KA4lcjNWt/bM=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostContent;\nexport default PostContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/PostContent/index.js"],"names":["useState","useCallback","useSelector","Header","Tag","Link","postBox","postTitle","buttonGroup","postInfoBox","postInfoWriter","postInfoBullet","postInfoDate","hashtagBox","contentBox","leftArrow","rightArrow","expressionNum","pinyin","meaning","UpdateBtn","DeleteBtn","LikeBtn","PostContent","singlePost","state","user","me","writtenByMe","nickname","User","curIndex","setCurIndex","goToPrev","Expressions","length","prev","goToNext","title","id","dayjs","createdAt","format","Hashtags","map","tag","name"],"mappings":"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","sourcesContent":["import { useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Header from '../Header';\r\nimport { Tag } from 'antd';\r\nimport Link from 'next/link';\r\n\r\nimport {\r\n  postBox,\r\n  postTitle,\r\n  buttonGroup,\r\n  postInfoBox,\r\n  postInfoWriter,\r\n  postInfoBullet,\r\n  postInfoDate,\r\n  hashtagBox,\r\n  contentBox,\r\n  leftArrow,\r\n  rightArrow,\r\n  expressionNum,\r\n  pinyin,\r\n  meaning,\r\n} from './style';\r\nimport UpdateBtn from '../UpdateBtn';\r\nimport DeleteBtn from '../DeleteBtn';\r\nimport LikeBtn from '../LikeBtn';\r\n\r\nconst PostContent = ({ singlePost }) => {\r\n  // const { singlePost } = useSelector((state) => state.post);\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  const writtenByMe = me?.nickname === singlePost?.User.nickname;\r\n\r\n  const [curIndex, setCurIndex] = useState(0);\r\n\r\n  const goToPrev = useCallback(() => {\r\n    if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);\r\n    else setCurIndex((prev) => prev - 1);\r\n  }, [curIndex]);\r\n\r\n  const goToNext = useCallback(() => {\r\n    if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);\r\n    else setCurIndex((prev) => prev + 1);\r\n  }, [curIndex]);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <div css={postBox}>\r\n        <div css={postTitle}>{singlePost.title}</div>\r\n        {writtenByMe && (\r\n          <div css={buttonGroup}>\r\n            <UpdateBtn post={singlePost} />\r\n            <DeleteBtn post={singlePost} />\r\n          </div>\r\n        )}\r\n        <div css={postInfoBox}>\r\n          <div>\r\n            <span css={postInfoWriter}>\r\n              <Link href={`/user/${singlePost?.User.id}`}>\r\n                <a>{singlePost.User.nickname}</a>\r\n              </Link>\r\n            </span>\r\n            <span css={postInfoBullet}>·</span>\r\n            <span css={postInfoDate}>\r\n              {dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')}\r\n            </span>\r\n          </div>\r\n          <LikeBtn post={singlePost} />\r\n        </div>\r\n        <div css={hashtagBox}>\r\n          {singlePost.Hashtags.map((tag) => {\r\n            return (\r\n              <Tag key={tag.id} color=\"purple\">\r\n                <Link href={`/hashtag/${tag.name}`}>\r\n                  <a>{tag.name}</a>\r\n                </Link>\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n        <div css={contentBox}>\r\n          <i\r\n            className=\"fas fa-chevron-left\"\r\n            css={leftArrow}\r\n            onClick={goToPrev}\r\n          ></i>\r\n          <div css={expressionNum}>\r\n            <div>\r\n              {curIndex + 1} / {singlePost.Expressions.length}\r\n            </div>\r\n          </div>\r\n          <div css={pinyin}>{singlePost.Expressions[curIndex].pinyin}</div>\r\n          <div css={meaning}>{singlePost.Expressions[curIndex].meaning}</div>\r\n          <i\r\n            className=\"fas fa-chevron-right\"\r\n            css={rightArrow}\r\n            onClick={goToNext}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostContent;\r\n"]},"metadata":{},"sourceType":"module"}