{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\n\n/** @jsxImportSource @emotion/react */\nimport { useRouter } from 'next/router';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Tag } from 'antd';\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport Header from '../../components/Header/index';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { post, postTitle, buttonGroup, postInfoBox, postInfoWriter, postInfoBullet, postInfoDate, hashtagBox, contentBox, leftArrow, rightArrow, expressionNum, pinyin, meaning } from './styles';\nimport UpdateBtn from '../../components/UpdateBtn';\nimport DeleteBtn from '../../components/DeleteBtn';\nimport LikeBtn from '../../components/LikeBtn';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport PostContent from '../../components/PostContent/index';\ndayjs.locale('ko');\n\nconst Post = () => {\n  const dispatch = useDispatch();\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const writtenByMe = (me === null || me === void 0 ? void 0 : me.nickname) === (singlePost === null || singlePost === void 0 ? void 0 : singlePost.User.nickname);\n  const {\n    0: curIndex,\n    1: setCurIndex\n  } = useState(0);\n  const goToPrev = useCallback(() => {\n    if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);else setCurIndex(prev => prev - 1);\n  }, [curIndex]);\n  const goToNext = useCallback(() => {\n    if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);else setCurIndex(prev => prev + 1);\n  }, [curIndex]);\n  return _jsxDEV(PostContent, {\n    singlePost: singlePost\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this) // <P>\n  //   <header>\n  //     <Header />\n  //   </header>\n  //   <div css={post}>\n  //     <div css={postTitle}>{singlePost.title}</div>\n  //     {writtenByMe && (\n  //       <div css={buttonGroup}>\n  //         <UpdateBtn post={singlePost} />\n  //         <DeleteBtn post={singlePost} />\n  //       </div>\n  //     )}\n  //     <div css={postInfoBox}>\n  //       <div>\n  //         <span css={postInfoWriter}>\n  //           <Link href={`/user/${singlePost?.User.id}`}>\n  //             <a>{singlePost.User.nickname}</a>\n  //           </Link>\n  //         </span>\n  //         <span css={postInfoBullet}>·</span>\n  //         <span css={postInfoDate}>\n  //           {dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')}\n  //         </span>\n  //       </div>\n  //       <LikeBtn post={singlePost} />\n  //     </div>\n  //     <div css={hashtagBox}>\n  //       {singlePost.Hashtags.map((tag) => {\n  //         return (\n  //           <Tag key={tag.id} color=\"purple\">\n  //             <Link href={`/hashtag/${tag.name}`}>\n  //               <a>{tag.name}</a>\n  //             </Link>\n  //           </Tag>\n  //         );\n  //       })}\n  //     </div>\n  //     <div css={contentBox}>\n  //       <i\n  //         className=\"fas fa-chevron-left\"\n  //         css={leftArrow}\n  //         onClick={goToPrev}\n  //       ></i>\n  //       <div css={expressionNum}>\n  //         <div>\n  //           {curIndex + 1} / {singlePost.Expressions.length}\n  //         </div>\n  //       </div>\n  //       <div css={pinyin}>{singlePost.Expressions[curIndex].pinyin}</div>\n  //       <div css={meaning}>{singlePost.Expressions[curIndex].meaning}</div>\n  //       <i\n  //         className=\"fas fa-chevron-right\"\n  //         css={rightArrow}\n  //         onClick={goToNext}\n  //       ></i>\n  //     </div>\n  //   </div>\n  // </PostContent>\n  ;\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/post/[id].js"],"names":["useRouter","useCallback","useEffect","useState","useDispatch","useSelector","Tag","Link","dayjs","END","axios","Header","LOAD_POST_REQUEST","post","postTitle","buttonGroup","postInfoBox","postInfoWriter","postInfoBullet","postInfoDate","hashtagBox","contentBox","leftArrow","rightArrow","expressionNum","pinyin","meaning","UpdateBtn","DeleteBtn","LikeBtn","wrapper","LOAD_MY_INFO_REQUEST","PostContent","locale","Post","dispatch","singlePost","state","me","user","router","id","query","writtenByMe","nickname","User","curIndex","setCurIndex","goToPrev","Expressions","length","prev","goToNext","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","data","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { useRouter } from 'next/router';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Tag } from 'antd';\r\nimport Link from 'next/link';\r\nimport dayjs from 'dayjs';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nimport Header from '../../components/Header/index';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport {\r\n  post,\r\n  postTitle,\r\n  buttonGroup,\r\n  postInfoBox,\r\n  postInfoWriter,\r\n  postInfoBullet,\r\n  postInfoDate,\r\n  hashtagBox,\r\n  contentBox,\r\n  leftArrow,\r\n  rightArrow,\r\n  expressionNum,\r\n  pinyin,\r\n  meaning,\r\n} from './styles';\r\nimport UpdateBtn from '../../components/UpdateBtn';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport LikeBtn from '../../components/LikeBtn';\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport PostContent from '../../components/PostContent/index';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst Post = () => {\r\n  const dispatch = useDispatch();\r\n  const { singlePost } = useSelector((state) => state.post);\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  const writtenByMe = me?.nickname === singlePost?.User.nickname;\r\n\r\n  const [curIndex, setCurIndex] = useState(0);\r\n\r\n  const goToPrev = useCallback(() => {\r\n    if (curIndex === 0) setCurIndex(singlePost.Expressions.length - 1);\r\n    else setCurIndex((prev) => prev - 1);\r\n  }, [curIndex]);\r\n\r\n  const goToNext = useCallback(() => {\r\n    if (curIndex === singlePost.Expressions.length - 1) setCurIndex(0);\r\n    else setCurIndex((prev) => prev + 1);\r\n  }, [curIndex]);\r\n\r\n  return (\r\n    <PostContent singlePost={singlePost} />\r\n    // <P>\r\n    //   <header>\r\n    //     <Header />\r\n    //   </header>\r\n    //   <div css={post}>\r\n    //     <div css={postTitle}>{singlePost.title}</div>\r\n    //     {writtenByMe && (\r\n    //       <div css={buttonGroup}>\r\n    //         <UpdateBtn post={singlePost} />\r\n    //         <DeleteBtn post={singlePost} />\r\n    //       </div>\r\n    //     )}\r\n    //     <div css={postInfoBox}>\r\n    //       <div>\r\n    //         <span css={postInfoWriter}>\r\n    //           <Link href={`/user/${singlePost?.User.id}`}>\r\n    //             <a>{singlePost.User.nickname}</a>\r\n    //           </Link>\r\n    //         </span>\r\n    //         <span css={postInfoBullet}>·</span>\r\n    //         <span css={postInfoDate}>\r\n    //           {dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')}\r\n    //         </span>\r\n    //       </div>\r\n    //       <LikeBtn post={singlePost} />\r\n    //     </div>\r\n    //     <div css={hashtagBox}>\r\n    //       {singlePost.Hashtags.map((tag) => {\r\n    //         return (\r\n    //           <Tag key={tag.id} color=\"purple\">\r\n    //             <Link href={`/hashtag/${tag.name}`}>\r\n    //               <a>{tag.name}</a>\r\n    //             </Link>\r\n    //           </Tag>\r\n    //         );\r\n    //       })}\r\n    //     </div>\r\n    //     <div css={contentBox}>\r\n    //       <i\r\n    //         className=\"fas fa-chevron-left\"\r\n    //         css={leftArrow}\r\n    //         onClick={goToPrev}\r\n    //       ></i>\r\n    //       <div css={expressionNum}>\r\n    //         <div>\r\n    //           {curIndex + 1} / {singlePost.Expressions.length}\r\n    //         </div>\r\n    //       </div>\r\n    //       <div css={pinyin}>{singlePost.Expressions[curIndex].pinyin}</div>\r\n    //       <div css={meaning}>{singlePost.Expressions[curIndex].meaning}</div>\r\n    //       <i\r\n    //         className=\"fas fa-chevron-right\"\r\n    //         css={rightArrow}\r\n    //         onClick={goToNext}\r\n    //       ></i>\r\n    //     </div>\r\n    //   </div>\r\n    // </PostContent>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n      data: context.params.id,\r\n    });\r\n    context.store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}