{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  currentHashtags: [],\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  convertLoading: false,\n  convertDone: false,\n  convertError: null,\n  convertedPinyin: null\n};\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_HASHTAG_REQUEST = 'ADD_HASHTAG_REQUEST';\nexport const REMOVE_HASHTAG_REQUEST = 'REMOVE_HASHTAG_REQUEST';\nexport const CONVERT_PINYIN_REQUEST = 'CONVERT_PINYIN_REQUEST';\nexport const CONVERT_PINYIN_SUCCESS = 'CONVERT_PINYIN_SUCCESS';\nexport const CONVERT_PINYIN_FAILURE = 'CONVERT_PINYIN_FAILURE';\nexport const CONVERT_RESET_REQUEST = 'CONVERT_RESET_REQUEST';\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_POST_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.singlePost = action.data;\n      break;\n\n    case LOAD_POST_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      draft.addPostDone = false;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = action.data;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.currentHashtags = [];\n      draft.mainPosts.unshift(action.data);\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case ADD_HASHTAG_REQUEST:\n      draft.currentHashtags.push(action.data);\n      break;\n\n    case REMOVE_HASHTAG_REQUEST:\n      draft.currentHashtags = draft.currentHashtags.filter(v => v !== action.data);\n      break;\n\n    case CONVERT_PINYIN_REQUEST:\n      draft.convertLoading = true;\n      draft.convertDone = false;\n      draft.convertError = null;\n      break;\n\n    case CONVERT_PINYIN_SUCCESS:\n      draft.convertLoading = false;\n      draft.convertDone = true;\n      draft.convertedPinyin = action.data;\n      break;\n\n    case CONVERT_PINYIN_FAILURE:\n      draft.convertLoading = false;\n      draft.convertError = action.error;\n      break;\n\n    case CONVERT_RESET_REQUEST:\n      draft.convertDone = false;\n      draft.convertError = null;\n      draft.convertedPinyin = null;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/reducers/post.js"],"names":["produce","initialState","mainPosts","currentHashtags","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","convertLoading","convertDone","convertError","convertedPinyin","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_HASHTAG_REQUEST","REMOVE_HASHTAG_REQUEST","CONVERT_PINYIN_REQUEST","CONVERT_PINYIN_SUCCESS","CONVERT_PINYIN_FAILURE","CONVERT_RESET_REQUEST","reducer","state","action","draft","type","singlePost","data","error","unshift","filter","v","id","PostId","push"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  currentHashtags: [],\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  convertLoading: false,\r\n  convertDone: false,\r\n  convertError: null,\r\n  convertedPinyin: null,\r\n};\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_HASHTAG_REQUEST = 'ADD_HASHTAG_REQUEST';\r\nexport const REMOVE_HASHTAG_REQUEST = 'REMOVE_HASHTAG_REQUEST';\r\n\r\nexport const CONVERT_PINYIN_REQUEST = 'CONVERT_PINYIN_REQUEST';\r\nexport const CONVERT_PINYIN_SUCCESS = 'CONVERT_PINYIN_SUCCESS';\r\nexport const CONVERT_PINYIN_FAILURE = 'CONVERT_PINYIN_FAILURE';\r\n\r\nexport const CONVERT_RESET_REQUEST = 'CONVERT_RESET_REQUEST';\r\n\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostDone = true;\r\n        draft.singlePost = action.data;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        draft.addPostDone = false;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = action.data;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.currentHashtags = [];\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_HASHTAG_REQUEST:\r\n        draft.currentHashtags.push(action.data);\r\n        break;\r\n      case REMOVE_HASHTAG_REQUEST:\r\n        draft.currentHashtags = draft.currentHashtags.filter(\r\n          (v) => v !== action.data\r\n        );\r\n        break;\r\n      case CONVERT_PINYIN_REQUEST:\r\n        draft.convertLoading = true;\r\n        draft.convertDone = false;\r\n        draft.convertError = null;\r\n        break;\r\n      case CONVERT_PINYIN_SUCCESS:\r\n        draft.convertLoading = false;\r\n        draft.convertDone = true;\r\n        draft.convertedPinyin = action.data;\r\n        break;\r\n      case CONVERT_PINYIN_FAILURE:\r\n        draft.convertLoading = false;\r\n        draft.convertError = action.error;\r\n        break;\r\n      case CONVERT_RESET_REQUEST:\r\n        draft.convertDone = false;\r\n        draft.convertError = null;\r\n        draft.convertedPinyin = null;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}