{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\ExpressionInput.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  height: 52px;\\n  margin-bottom: 5px;\\n\\n  button {\\n    position: absolute;\\n    bottom: 0;\\n    right: 0;\\n    font-size: 13px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 15px 10px;\\n  border: 3px solid #18ddff;\\n  border-radius: 4px;\\n\\n  input {\\n    width: 100%;\\n    font-size: 16px;\\n    border: none;\\n    border-bottom: 1px solid #48494b;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport ConvertPopUp from './ConvertPopUp';\nimport useInput from '../hooks/useInput';\nimport { useSelector } from 'react-redux';\nvar box = css(_templateObject());\nvar pinyinBox = css(_templateObject2());\n\nvar ExpressionInput = function ExpressionInput(_ref) {\n  _s();\n\n  var num = _ref.num;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      currentExpressions = _useSelector.currentExpressions;\n\n  var _useState = useState(''),\n      pinyin = _useState[0],\n      setPinyin = _useState[1];\n\n  var onChangePinyin = useCallback(function (e) {\n    setPinyin(e.target.value);\n  }, []);\n\n  var _useState2 = useState(''),\n      meaning = _useState2[0],\n      setMeaning = _useState2[1];\n\n  var onChangeMeaning = useCallback(function (e) {\n    setMeaning(e.target.value);\n  }, []);\n  useEffect(function () {\n    console.log(pinyin, meaning);\n  }, [pinyin, meaning]);\n  return _jsxDEV(\"div\", {\n    css: box,\n    children: [_jsxDEV(\"div\", {\n      css: pinyinBox,\n      children: [_jsxDEV(\"input\", {\n        placeholder: \"\\uD55C\\uC5B4\\uBCD1\\uC74C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        value: pinyin,\n        onChange: onChangePinyin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this), _jsxDEV(ConvertPopUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), _jsxDEV(\"input\", {\n      placeholder: \"\\uB73B\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      value: meaning,\n      onChange: onChangeMeaning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ExpressionInput, \"ApaIq0tiAatdz44yvmOTU3uAyY0=\", false, function () {\n  return [useSelector];\n});\n\n_c = ExpressionInput;\nexport default ExpressionInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpressionInput\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/ExpressionInput.js"],"names":["css","useCallback","useEffect","useState","ConvertPopUp","useInput","useSelector","box","pinyinBox","ExpressionInput","num","state","post","currentExpressions","pinyin","setPinyin","onChangePinyin","e","target","value","meaning","setMeaning","onChangeMeaning","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,IAAMC,GAAG,GAAGP,GAAH,mBAAT;AAcA,IAAMQ,SAAS,GAAGR,GAAH,oBAAf;;AAaA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,OAAa;AAAA;;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAAA,qBACJJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADP;AAAA,MAC3BC,kBAD2B,gBAC3BA,kBAD2B;;AAAA,kBAGPV,QAAQ,CAAC,EAAD,CAHD;AAAA,MAG5BW,MAH4B;AAAA,MAGpBC,SAHoB;;AAInC,MAAMC,cAAc,GAAGf,WAAW,CAAC,UAACgB,CAAD,EAAO;AACxCF,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFiC,EAE/B,EAF+B,CAAlC;;AAJmC,mBAQLhB,QAAQ,CAAC,EAAD,CARH;AAAA,MAQ5BiB,OAR4B;AAAA,MAQnBC,UARmB;;AASnC,MAAMC,eAAe,GAAGrB,WAAW,CAAC,UAACgB,CAAD,EAAO;AACzCI,IAAAA,UAAU,CAACJ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIAjB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ,EAAoBM,OAApB;AACD,GAFQ,EAEN,CAACN,MAAD,EAASM,OAAT,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,GAAG,EAAEb,GAAV;AAAA,eACE;AAAK,MAAA,GAAG,EAAEC,SAAV;AAAA,iBACE;AACE,QAAA,WAAW,EAAC,qEADd;AAEE,QAAA,KAAK,EAAEM,MAFT;AAGE,QAAA,QAAQ,EAAEE;AAHZ;AAAA;AAAA;AAAA;AAAA,eADF,EAME,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EASE;AACE,MAAA,WAAW,EAAC,mDADd;AAEE,MAAA,KAAK,EAAEI,OAFT;AAGE,MAAA,QAAQ,EAAEE;AAHZ;AAAA;AAAA;AAAA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CAlCD;;GAAMb,e;UAC2BH,W;;;KAD3BG,e;AAoCN,eAAeA,eAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\nimport ConvertPopUp from './ConvertPopUp';\r\nimport useInput from '../hooks/useInput';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst box = css`\r\n  width: 100%;\r\n  padding: 15px 10px;\r\n  border: 3px solid #18ddff;\r\n  border-radius: 4px;\r\n\r\n  input {\r\n    width: 100%;\r\n    font-size: 16px;\r\n    border: none;\r\n    border-bottom: 1px solid #48494b;\r\n  }\r\n`;\r\n\r\nconst pinyinBox = css`\r\n  position: relative;\r\n  height: 52px;\r\n  margin-bottom: 5px;\r\n\r\n  button {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst ExpressionInput = ({ num }) => {\r\n  const { currentExpressions } = useSelector((state) => state.post);\r\n\r\n  const [pinyin, setPinyin] = useState('');\r\n  const onChangePinyin = useCallback((e) => {\r\n    setPinyin(e.target.value);\r\n  }, []);\r\n\r\n  const [meaning, setMeaning] = useState('');\r\n  const onChangeMeaning = useCallback((e) => {\r\n    setMeaning(e.target.value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(pinyin, meaning);\r\n  }, [pinyin, meaning]);\r\n\r\n  return (\r\n    <div css={box}>\r\n      <div css={pinyinBox}>\r\n        <input\r\n          placeholder=\"한어병음을 입력해주세요\"\r\n          value={pinyin}\r\n          onChange={onChangePinyin}\r\n        />\r\n        <ConvertPopUp />\r\n      </div>\r\n      <input\r\n        placeholder=\"뜻을 입력해주세요\"\r\n        value={meaning}\r\n        onChange={onChangeMeaning}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpressionInput;\r\n"]},"metadata":{},"sourceType":"module"}