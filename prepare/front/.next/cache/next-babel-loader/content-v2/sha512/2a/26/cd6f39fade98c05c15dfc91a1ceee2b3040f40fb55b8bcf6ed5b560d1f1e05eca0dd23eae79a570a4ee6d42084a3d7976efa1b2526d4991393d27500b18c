{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\LikeBtn.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal } from 'antd';\nimport { HeartTwoTone, HeartOutlined } from '@ant-design/icons';\nimport { createGlobalStyle } from 'styled-components';\nimport { LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nconst Global = createGlobalStyle`\n  .ant-modal-confirm-body .ant-modal-confirm-title{\n    font-weight: 700;\n  }\n`;\nconst likeBox = css`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 80px;\n  padding: 4px 12px;\n  border: 3px solid #cfcfcf;\n  border-radius: 20px;\n\n  @media (min-width: 768px) {\n    width: 100px;\n    border-radius: 25px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 120px;\n    border-radius: 30px;\n  }\n\n  span {\n    font-size: 18px;\n\n    @media (min-width: 768px) {\n      font-size: 24px;\n    }\n\n    @media (min-width: 1024px) {\n      font-size: 30px;\n    }\n\n    &:first-of-type:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst LikeBtn = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(post.Likers.find(v => v.id === id));\n  const onLike = useCallback(() => {\n    if (!id) {\n      return Modal.error({\n        title: '로그인이 필요합니다.'\n      });\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onUnLike = useCallback(() => {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: likeBox,\n      children: [liked ? _jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#ff748c\",\n        onClick: onUnLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : _jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), _jsxDEV(\"span\", {\n        children: post.Likers ? post.Likers.length : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default LikeBtn;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/LikeBtn.js"],"names":["css","useCallback","useEffect","useState","useDispatch","useSelector","Modal","HeartTwoTone","HeartOutlined","createGlobalStyle","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","Global","likeBox","LikeBtn","post","dispatch","id","state","user","me","liked","setLiked","Likers","find","v","onLike","error","title","type","data","onUnLike","length"],"mappings":";;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,mBAA5C;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,kBAAvD;AAEA,MAAMC,MAAM,GAAGH,iBAAkB;AACjC;AACA;AACA;AACA,CAJA;AAMA,MAAMI,OAAO,GAAGb,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlCA;;AAoCA,MAAMc,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,EAAE,GAAGZ,WAAW,CAAEa,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBnB,QAAQ,CAACY,IAAI,CAACQ,MAAL,CAAYC,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACR,EAAF,KAASA,EAAjC,CAAD,CAAlC;AAEA,QAAMS,MAAM,GAAGzB,WAAW,CAAC,MAAM;AAC/B,QAAI,CAACgB,EAAL,EAAS;AACP,aAAOX,KAAK,CAACqB,KAAN,CAAY;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ,CAAP;AACD;;AACD,WAAOZ,QAAQ,CAAC;AACda,MAAAA,IAAI,EAAEnB,iBADQ;AAEdoB,MAAAA,IAAI,EAAEf,IAAI,CAACE;AAFG,KAAD,CAAf;AAID,GARyB,EAQvB,EARuB,CAA1B;AAUA,QAAMc,QAAQ,GAAG9B,WAAW,CAAC,MAAM;AACjCe,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAElB,mBADC;AAEPmB,MAAAA,IAAI,EAAEf,IAAI,CAACE;AAFJ,KAAD,CAAR;AAID,GAL2B,EAKzB,EALyB,CAA5B;AAOA,SACE;AAAA,eACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAK,MAAA,GAAG,EAAEJ,OAAV;AAAA,iBACGQ,KAAK,GACJ,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,SAA3B;AAAqC,QAAA,OAAO,EAAEU;AAA9C;AAAA;AAAA;AAAA;AAAA,cADI,GAGJ,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,cAJJ,EAME;AAAA,kBAAOX,IAAI,CAACQ,MAAL,GAAcR,IAAI,CAACQ,MAAL,CAAYS,MAA1B,GAAmC;AAA1C;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAaD,CAnCD;;AAqCA,eAAelB,OAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from 'antd';\r\nimport { HeartTwoTone, HeartOutlined } from '@ant-design/icons';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport { LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\r\n\r\nconst Global = createGlobalStyle`\r\n  .ant-modal-confirm-body .ant-modal-confirm-title{\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst likeBox = css`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 80px;\r\n  padding: 4px 12px;\r\n  border: 3px solid #cfcfcf;\r\n  border-radius: 20px;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 100px;\r\n    border-radius: 25px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 120px;\r\n    border-radius: 30px;\r\n  }\r\n\r\n  span {\r\n    font-size: 18px;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 24px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 30px;\r\n    }\r\n\r\n    &:first-of-type:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LikeBtn = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const [liked, setLiked] = useState(post.Likers.find((v) => v.id === id));\r\n\r\n  const onLike = useCallback(() => {\r\n    if (!id) {\r\n      return Modal.error({ title: '로그인이 필요합니다.' });\r\n    }\r\n    return dispatch({\r\n      type: LIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  const onUnLike = useCallback(() => {\r\n    dispatch({\r\n      type: UNLIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Global />\r\n      <div css={likeBox}>\r\n        {liked ? (\r\n          <HeartTwoTone twoToneColor=\"#ff748c\" onClick={onUnLike} />\r\n        ) : (\r\n          <HeartOutlined onClick={onLike} />\r\n        )}\r\n        <span>{post.Likers ? post.Likers.length : 0}</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LikeBtn;\r\n"]},"metadata":{},"sourceType":"module"}