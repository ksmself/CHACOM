{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, call, put } from '@redux-saga/core/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, CONVERT_PINYIN_FAILURE, CONVERT_PINYIN_REQUEST, CONVERT_PINYIN_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS } from '../reducers/post';\nimport { ADD_POST_TO_ME, LIKE_POST_TO_ME, REMOVE_POST_OF_ME, UNLIKE_POST_TO_ME } from '../reducers/user';\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    console.log(typeof action.data);\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      // REMOVE_POST_OF_ME\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    // const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: LIKE_POST_TO_ME,\n      // LIKE_POST_TO_ME\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    // const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: UNLIKE_POST_TO_ME,\n      // UNLIKE_POST_OF_ME\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction convertPinyinAPI(data) {\n  return axios.post('/post/convert/pinyin', data);\n}\n\nfunction* convertPinyin(action) {\n  try {\n    const result = yield call(convertPinyinAPI, action.data);\n    yield put({\n      type: CONVERT_PINYIN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CONVERT_PINYIN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchConvertPinyin() {\n  yield takeLatest(CONVERT_PINYIN_REQUEST, convertPinyin);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadPost), fork(watchLoadPosts), fork(watchAddPost), fork(watchRemovePost), fork(watchLikePost), fork(watchUnLikePost), fork(watchConvertPinyin)]);\n}","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/sagas/post.js"],"names":["axios","all","fork","takeLatest","call","put","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","CONVERT_PINYIN_FAILURE","CONVERT_PINYIN_REQUEST","CONVERT_PINYIN_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","ADD_POST_TO_ME","LIKE_POST_TO_ME","REMOVE_POST_OF_ME","UNLIKE_POST_TO_ME","loadPostAPI","data","get","loadPost","action","console","log","result","type","err","error","response","loadPostsAPI","loadPosts","addPostAPI","post","addPost","removePostAPI","delete","removePost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","convertPinyinAPI","convertPinyin","watchLoadPost","watchLoadPosts","watchAddPost","watchRemovePost","watchLikePost","watchUnLikePost","watchConvertPinyin","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, takeLatest, call, put } from '@redux-saga/core/effects';\r\nimport {\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  CONVERT_PINYIN_FAILURE,\r\n  CONVERT_PINYIN_REQUEST,\r\n  CONVERT_PINYIN_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LOAD_POSTS_FAILURE,\r\n  LOAD_POSTS_REQUEST,\r\n  LOAD_POSTS_SUCCESS,\r\n  LOAD_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n} from '../reducers/post';\r\nimport {\r\n  ADD_POST_TO_ME,\r\n  LIKE_POST_TO_ME,\r\n  REMOVE_POST_OF_ME,\r\n  UNLIKE_POST_TO_ME,\r\n} from '../reducers/user';\r\n\r\nfunction loadPostAPI(data) {\r\n  return axios.get(`/post/${data}`);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    console.log(typeof action.data);\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostsAPI(data) {\r\n  return axios.get('/posts', data);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    // const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME, // REMOVE_POST_OF_ME\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    // const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: LIKE_POST_TO_ME, // LIKE_POST_TO_ME\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    // const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: UNLIKE_POST_TO_ME, // UNLIKE_POST_OF_ME\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction convertPinyinAPI(data) {\r\n  return axios.post('/post/convert/pinyin', data);\r\n}\r\n\r\nfunction* convertPinyin(action) {\r\n  try {\r\n    const result = yield call(convertPinyinAPI, action.data);\r\n    yield put({\r\n      type: CONVERT_PINYIN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: CONVERT_PINYIN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnLikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchConvertPinyin() {\r\n  yield takeLatest(CONVERT_PINYIN_REQUEST, convertPinyin);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchLoadPost),\r\n    fork(watchLoadPosts),\r\n    fork(watchAddPost),\r\n    fork(watchRemovePost),\r\n    fork(watchLikePost),\r\n    fork(watchUnLikePost),\r\n    fork(watchConvertPinyin),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}