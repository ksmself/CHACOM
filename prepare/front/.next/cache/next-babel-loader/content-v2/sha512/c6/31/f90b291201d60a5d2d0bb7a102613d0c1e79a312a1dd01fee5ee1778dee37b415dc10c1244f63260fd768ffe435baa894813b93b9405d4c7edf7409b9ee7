{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\user\\\\[id]\\\\like.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport Header from '../../../components/Header';\nimport PostList from '../../../components/PostList';\nimport wrapper from '../../../store/configureStore';\nimport { contentBox, postGroup, title } from './styles';\nimport { LOAD_MY_INFO_REQUEST } from '../../../reducers/user';\n\nconst LikePost = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const posts = me === null || me === void 0 ? void 0 : me.Liked;\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"header\", {\n      children: _jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: contentBox,\n      children: [_jsxDEV(\"div\", {\n        css: title,\n        children: [_jsxDEV(\"span\", {\n          children: \"\\uC88B\\uC544\\uC694 \\uB204\\uB978 \\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), _jsxDEV(\"span\", {\n          children: posts === null || posts === void 0 ? void 0 : posts.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), _jsxDEV(\"div\", {\n        css: postGroup,\n        children: posts && posts.map(post => {\n          return _jsxDEV(PostList, {\n            post: post\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default LikePost;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/user/[id]/like.js"],"names":["useSelector","axios","END","Header","PostList","wrapper","contentBox","postGroup","title","LOAD_MY_INFO_REQUEST","LikePost","me","state","user","posts","Liked","length","map","post","id","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":";;;;AAAA;AACA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,KAAhC,QAA6C,UAA7C;AACA,SAASC,oBAAT,QAAqC,wBAArC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAMC,KAAK,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,KAAlB;AAEA,SACE;AAAA,eACE;AAAA,gBACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIE;AAAK,MAAA,GAAG,EAAET,UAAV;AAAA,iBACE;AAAK,QAAA,GAAG,EAAEE,KAAV;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA,oBAAOM,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKE;AAAK,QAAA,GAAG,EAAET,SAAV;AAAA,kBACGO,KAAK,IACJA,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AAClB,iBAAO,QAAC,QAAD;AAAwB,YAAA,IAAI,EAAEA;AAA9B,aAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD;AAFJ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAmBD,CAvBD;;AAyBA,OAAO,MAAMC,kBAAkB,GAAGf,OAAO,CAACe,kBAAR,CAChC,MAAOC,OAAP,IAAmB;AACjB,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACArB,EAAAA,KAAK,CAACwB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBrB,IAAAA,KAAK,CAACwB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEpB;AADe,GAAvB;AAGAY,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB1B,GAAvB;AACA,QAAMmB,OAAO,CAACM,KAAR,CAAcG,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAZ+B,CAA3B;AAeP,eAAerB,QAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport Header from '../../../components/Header';\r\nimport PostList from '../../../components/PostList';\r\nimport wrapper from '../../../store/configureStore';\r\nimport { contentBox, postGroup, title } from './styles';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../../reducers/user';\r\n\r\nconst LikePost = () => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const posts = me?.Liked;\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <div css={contentBox}>\r\n        <div css={title}>\r\n          <span>좋아요 누른 글</span>\r\n          <span>{posts?.length}</span>\r\n        </div>\r\n        <div css={postGroup}>\r\n          {posts &&\r\n            posts.map((post) => {\r\n              return <PostList key={post.id} post={post} />;\r\n            })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default LikePost;\r\n"]},"metadata":{},"sourceType":"module"}