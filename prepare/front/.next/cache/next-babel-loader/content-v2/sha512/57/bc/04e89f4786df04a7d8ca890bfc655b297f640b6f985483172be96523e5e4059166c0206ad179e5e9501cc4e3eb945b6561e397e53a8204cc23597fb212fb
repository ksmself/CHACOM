{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\CommentList.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport Link from 'next/link';\nimport { Button } from 'antd';\nimport { PlusCircleOutlined } from '@ant-design/icons';\ndayjs.locale('ko');\nconst commentBox = css`\n  margin-bottom: 25px;\n  padding: 15px 5px 0;\n  border: 1px solid #755eff;\n  border-radius: 10px;\n`;\nconst commentItem = css`\n  padding: 10px 12px;\n`;\nconst commentInfo = css`\n  display: flex;\n  margin-bottom: 5px;\n`;\nconst commentInfoWriter = css`\n  margin-right: 3px;\n  font-weight: 700;\n`;\nconst commentInfoBullet = css`\n  margin-right: 3px;\n`;\nconst commentInfoDate = css`\n  color: #646a70;\n`;\nconst commentContent = css`\n  margin-bottom: 8px;\n  font-size: 17px;\n`;\nconst divideLine = css`\n  width: 100%;\n  height: 1px;\n  background-color: #d9d9d9;\n`;\nconst replyBtn = css`\n  margin-bottom: 10px;\n\n  button {\n    padding: 4px 6px;\n    font-weight: 700;\n    border: none;\n    color: #3a18ff;\n\n    &:hover {\n      color: #3a18ff;\n      border: none;\n      cursor: pointer;\n    }\n\n    &:focus {\n      color: #3a18ff;\n      border: none;\n    }\n  }\n`;\n\nconst CommentList = ({\n  comments\n}) => {\n  const {\n    0: replyBtnText,\n    1: setReplyBtnText\n  } = useState('답글 달기');\n  const onClickReply = useCallback(() => {\n    if (replyBtnText === '답글 달기') setReplyBtnText(prev => '숨기기');else setReplyBtnText(prev => '답글 달기');\n  }, [replyBtnText]);\n  return _jsxDEV(\"ul\", {\n    css: commentBox,\n    children: comments.map((comment, index) => {\n      let day;\n      const secondPassed = dayjs().diff(dayjs(comment.createdAt), 'seconds');\n      const minutedPassed = dayjs().diff(dayjs(comment.createdAt), 'minutes');\n      const hourPassed = dayjs().diff(dayjs(comment.createdAt), 'hours');\n      const dayPassed = dayjs().diff(dayjs(comment.createdAt), 'days');\n      if (secondPassed < 60) day = '방금 전';else if (minutedPassed < 60) day = minutedPassed + '분 전';else if (hourPassed < 24) day = hourPassed + '시간 전';else if (dayPassed <= 7) day = dayPassed + '일 전';else day = dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일');\n      return _jsxDEV(\"li\", {\n        css: commentItem,\n        children: [_jsxDEV(\"div\", {\n          css: commentInfo,\n          children: [_jsxDEV(\"span\", {\n            css: commentInfoWriter,\n            children: _jsxDEV(Link, {\n              href: `/user/${comment.UserId}`,\n              children: _jsxDEV(\"a\", {\n                children: comment.User.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), _jsxDEV(\"span\", {\n            css: commentInfoBullet,\n            children: \"\\xB7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), _jsxDEV(\"span\", {\n            css: commentInfoDate,\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), _jsxDEV(\"div\", {\n          css: commentContent,\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), _jsxDEV(\"div\", {\n          css: replyBtn,\n          children: _jsxDEV(Button, {\n            icon: _jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this),\n            onClick: onClickReply,\n            children: replyBtnText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), comments.length > 1 && index < comments.length - 1 && _jsxDEV(\"div\", {\n          css: divideLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CommentList;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/CommentList.js"],"names":["css","useCallback","useEffect","useState","dayjs","Link","Button","PlusCircleOutlined","locale","commentBox","commentItem","commentInfo","commentInfoWriter","commentInfoBullet","commentInfoDate","commentContent","divideLine","replyBtn","CommentList","comments","replyBtnText","setReplyBtnText","onClickReply","prev","map","comment","index","day","secondPassed","diff","createdAt","minutedPassed","hourPassed","dayPassed","singlePost","format","UserId","User","nickname","content","length","id"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport Link from 'next/link';\r\nimport { Button } from 'antd';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst commentBox = css`\r\n  margin-bottom: 25px;\r\n  padding: 15px 5px 0;\r\n  border: 1px solid #755eff;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst commentItem = css`\r\n  padding: 10px 12px;\r\n`;\r\n\r\nconst commentInfo = css`\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst commentInfoWriter = css`\r\n  margin-right: 3px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst commentInfoBullet = css`\r\n  margin-right: 3px;\r\n`;\r\n\r\nconst commentInfoDate = css`\r\n  color: #646a70;\r\n`;\r\n\r\nconst commentContent = css`\r\n  margin-bottom: 8px;\r\n  font-size: 17px;\r\n`;\r\n\r\nconst divideLine = css`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: #d9d9d9;\r\n`;\r\n\r\nconst replyBtn = css`\r\n  margin-bottom: 10px;\r\n\r\n  button {\r\n    padding: 4px 6px;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: #3a18ff;\r\n\r\n    &:hover {\r\n      color: #3a18ff;\r\n      border: none;\r\n      cursor: pointer;\r\n    }\r\n\r\n    &:focus {\r\n      color: #3a18ff;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CommentList = ({ comments }) => {\r\n  const [replyBtnText, setReplyBtnText] = useState('답글 달기');\r\n  const onClickReply = useCallback(() => {\r\n    if (replyBtnText === '답글 달기') setReplyBtnText((prev) => '숨기기');\r\n    else setReplyBtnText((prev) => '답글 달기');\r\n  }, [replyBtnText]);\r\n\r\n  return (\r\n    <ul css={commentBox}>\r\n      {comments.map((comment, index) => {\r\n        let day;\r\n        const secondPassed = dayjs().diff(dayjs(comment.createdAt), 'seconds');\r\n        const minutedPassed = dayjs().diff(dayjs(comment.createdAt), 'minutes');\r\n        const hourPassed = dayjs().diff(dayjs(comment.createdAt), 'hours');\r\n        const dayPassed = dayjs().diff(dayjs(comment.createdAt), 'days');\r\n\r\n        if (secondPassed < 60) day = '방금 전';\r\n        else if (minutedPassed < 60) day = minutedPassed + '분 전';\r\n        else if (hourPassed < 24) day = hourPassed + '시간 전';\r\n        else if (dayPassed <= 7) day = dayPassed + '일 전';\r\n        else day = dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일');\r\n\r\n        return (\r\n          <li css={commentItem} key={comment.id}>\r\n            <div css={commentInfo}>\r\n              <span css={commentInfoWriter}>\r\n                <Link href={`/user/${comment.UserId}`}>\r\n                  <a>{comment.User.nickname}</a>\r\n                </Link>\r\n              </span>\r\n              <span css={commentInfoBullet}>·</span>\r\n              <span css={commentInfoDate}>{day}</span>\r\n            </div>\r\n            <div css={commentContent}>{comment.content}</div>\r\n            <div css={replyBtn}>\r\n              <Button icon={<PlusCircleOutlined />} onClick={onClickReply}>\r\n                {replyBtnText}\r\n              </Button>\r\n            </div>\r\n            {comments.length > 1 && index < comments.length - 1 && (\r\n              <div css={divideLine}></div>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n"]},"metadata":{},"sourceType":"module"}