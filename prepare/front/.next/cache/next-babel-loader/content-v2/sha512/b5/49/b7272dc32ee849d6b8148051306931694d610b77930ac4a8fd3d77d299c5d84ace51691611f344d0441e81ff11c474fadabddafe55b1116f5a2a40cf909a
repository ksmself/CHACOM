{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport dayjs from 'dayjs';\nimport Header from '../../components/Header/index';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\ndayjs.locale('ko');\nconst post = css`\n  display: flex;\n  flex-direction: column;\n  padding: 0 30px;\n\n  @media (min-width: 768px) {\n    padding: 0 70px;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 0 200px;\n  }\n`;\nconst postTitle = css`\n  margin-bottom: 30px;\n  font-size: 36px;\n  font-weight: 700;\n  word-break: keep-all;\n\n  @media (min-width: 768px) {\n    font-size: 42px;\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 48px;\n  }\n`;\nconst infoBox = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst postInfo = css`\n  span {\n    font-size: 15px;\n    margin-right: 3px;\n  }\n`;\n\nconst Post = () => {\n  const dispatch = useDispatch(); // const { singlePost } = useSelector((state) => state.post);\n\n  const {\n    me\n  } = useSelector(state => state.user);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const singlePost = {\n    id: 1,\n    title: '(-가 -하다) 왕초보편',\n    createdAt: '2021-05-20 08:18:40',\n    User: {\n      nickname: 'admin1'\n    },\n    Expressions: {},\n    Hashtags: {},\n    Comments: {},\n    Likers: {}\n  }; // useEffect(() => {\n  //   dispatch({\n  //     type: LOAD_POST_REQUEST,\n  //     data: id,\n  //   });\n  // }, []);\n\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"header\", {\n      children: _jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: post,\n      children: [_jsxDEV(\"div\", {\n        css: postTitle,\n        children: singlePost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), (me === null || me === void 0 ? void 0 : me.nickname) === singlePost.User.nickname, _jsxDEV(\"div\", {\n        css: infoBox,\n        children: _jsxDEV(\"div\", {\n          css: postInfo,\n          children: [_jsxDEV(\"span\", {\n            children: singlePost.User.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), _jsxDEV(\"span\", {\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), _jsxDEV(\"span\", {\n            children: dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/post/[id].js"],"names":["css","useRouter","useEffect","useDispatch","useSelector","dayjs","Header","LOAD_POST_REQUEST","locale","post","postTitle","infoBox","postInfo","Post","dispatch","me","state","user","router","id","query","singlePost","title","createdAt","User","nickname","Expressions","Hashtags","Comments","Likers","format"],"mappings":";;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEAF,KAAK,CAACG,MAAN,CAAa,IAAb;AAEA,MAAMC,IAAI,GAAGT,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMU,SAAS,GAAGV,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMW,OAAO,GAAGX,GAAI;AACpB;AACA;AACA;AACA,CAJA;AAMA,MAAMY,QAAQ,GAAGZ,GAAI;AACrB;AACA;AACA;AACA;AACA,CALA;;AAOA,MAAMa,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CADiB,CAEjB;;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AAEA,QAAMC,MAAM,GAAGjB,SAAS,EAAxB;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,QAAMC,UAAU,GAAG;AACjBF,IAAAA,EAAE,EAAE,CADa;AAEjBG,IAAAA,KAAK,EAAE,eAFU;AAGjBC,IAAAA,SAAS,EAAE,qBAHM;AAIjBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KAJW;AAOjBC,IAAAA,WAAW,EAAE,EAPI;AAQjBC,IAAAA,QAAQ,EAAE,EARO;AASjBC,IAAAA,QAAQ,EAAE,EATO;AAUjBC,IAAAA,MAAM,EAAE;AAVS,GAAnB,CARiB,CAqBjB;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAA,eACE;AAAA,gBACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIE;AAAK,MAAA,GAAG,EAAEpB,IAAV;AAAA,iBACE;AAAK,QAAA,GAAG,EAAEC,SAAV;AAAA,kBAAsBW,UAAU,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,CAAAP,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEU,QAAJ,MAAiBJ,UAAU,CAACG,IAAX,CAAgBC,QAFpC,EAGE;AAAK,QAAA,GAAG,EAAEd,OAAV;AAAA,kBACE;AAAK,UAAA,GAAG,EAAEC,QAAV;AAAA,qBACE;AAAA,sBAAOS,UAAU,CAACG,IAAX,CAAgBC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA,sBACGpB,KAAK,CAACgB,UAAU,CAACE,SAAZ,CAAL,CAA4BO,MAA5B,CAAmC,eAAnC;AADH;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAoBD,CAhDD;;AAkDA,eAAejB,IAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useRouter } from 'next/router';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport dayjs from 'dayjs';\r\n\r\nimport Header from '../../components/Header/index';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\n\r\ndayjs.locale('ko');\r\n\r\nconst post = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 30px;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 0 70px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 0 200px;\r\n  }\r\n`;\r\n\r\nconst postTitle = css`\r\n  margin-bottom: 30px;\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  word-break: keep-all;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 42px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 48px;\r\n  }\r\n`;\r\n\r\nconst infoBox = css`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst postInfo = css`\r\n  span {\r\n    font-size: 15px;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nconst Post = () => {\r\n  const dispatch = useDispatch();\r\n  // const { singlePost } = useSelector((state) => state.post);\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  const singlePost = {\r\n    id: 1,\r\n    title: '(-가 -하다) 왕초보편',\r\n    createdAt: '2021-05-20 08:18:40',\r\n    User: {\r\n      nickname: 'admin1',\r\n    },\r\n    Expressions: {},\r\n    Hashtags: {},\r\n    Comments: {},\r\n    Likers: {},\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   dispatch({\r\n  //     type: LOAD_POST_REQUEST,\r\n  //     data: id,\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <div css={post}>\r\n        <div css={postTitle}>{singlePost.title}</div>\r\n        {me?.nickname === singlePost.User.nickname}\r\n        <div css={infoBox}>\r\n          <div css={postInfo}>\r\n            <span>{singlePost.User.nickname}</span>\r\n            <span>•</span>\r\n            <span>\r\n              {dayjs(singlePost.createdAt).format('YYYY년 MM월 DD일')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}