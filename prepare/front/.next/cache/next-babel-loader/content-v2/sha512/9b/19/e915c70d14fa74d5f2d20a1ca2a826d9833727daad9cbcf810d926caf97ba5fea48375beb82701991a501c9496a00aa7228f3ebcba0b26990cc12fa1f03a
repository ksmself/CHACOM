{"ast":null,"code":"import { all, call, fork, put, takeLatest } from '@redux-saga/core/effects';\nimport axios from 'axios';\nimport { CHECK_DUPLICATE_FAILURE, CHECK_DUPLICATE_REQUEST, CHECK_DUPLICATE_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction checkDuplicateAPI(data) {\n  return axios.post('/user/duplicate', data);\n}\n\nfunction* checkDuplicate(action) {\n  try {\n    const result = yield call(checkDuplicateAPI, action.data);\n    yield put({\n      type: CHECK_DUPLICATE_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHECK_DUPLICATE_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchCheckDuplicate() {\n  yield takeLatest(CHECK_DUPLICATE_REQUEST, checkDuplicate);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignUp), fork(watchLogIn), fork(watchLogOut), fork(watchCheckDuplicate), fork(watchLoadMyInfo)]);\n}","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/sagas/user.js"],"names":["all","call","fork","put","takeLatest","axios","CHECK_DUPLICATE_FAILURE","CHECK_DUPLICATE_REQUEST","CHECK_DUPLICATE_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","checkDuplicateAPI","data","post","checkDuplicate","action","result","type","err","error","response","signUpAPI","signUp","logInAPI","logIn","logOutAPI","logOut","loadMyInfoAPI","loadMyInfo","watchSignUp","watchLogIn","watchLogOut","watchCheckDuplicate","watchLoadMyInfo","userSaga"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeLatest } from '@redux-saga/core/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  CHECK_DUPLICATE_FAILURE,\r\n  CHECK_DUPLICATE_REQUEST,\r\n  CHECK_DUPLICATE_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction checkDuplicateAPI(data) {\r\n  return axios.post('/user/duplicate', data);\r\n}\r\n\r\nfunction* checkDuplicate(action) {\r\n  try {\r\n    const result = yield call(checkDuplicateAPI, action.data);\r\n    yield put({\r\n      type: CHECK_DUPLICATE_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHECK_DUPLICATE_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    yield call(signUpAPI, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n  return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadMyInfoAPI(data) {\r\n  return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchCheckDuplicate() {\r\n  yield takeLatest(CHECK_DUPLICATE_REQUEST, checkDuplicate);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchSignUp),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchCheckDuplicate),\r\n    fork(watchLoadMyInfo),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}