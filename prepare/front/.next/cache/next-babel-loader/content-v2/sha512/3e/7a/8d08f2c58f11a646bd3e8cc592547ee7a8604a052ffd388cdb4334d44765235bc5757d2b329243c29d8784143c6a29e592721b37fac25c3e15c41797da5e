{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\ConvertPopUp.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 13px;\\n  right: 13px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100px;\\n  padding: 16px;\\n  position: relative;\\n  font-size: 21px;\\n  border-bottom-left-radius: 33px;\\n  border-bottom-right-radius: 33px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100px;\\n  padding: 16px;\\n  resize: none;\\n  font-size: 21px;\\n  border: none;\\n  border-top-left-radius: 33px;\\n  border-top-right-radius: 33px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 13px;\\n  right: 13px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  position: relative;\\n  border-radius: 33px;\\n  background: #ffffff;\\n  box-shadow: 6px 6px 12px #e8e8e8, -1px -1px 3px #e8e8e8,\\n    -6px -6px 12px #e8e8e8, 1px 1px 3px #e8e8e8;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    .convert-modal > .ant-modal-content > .ant-modal-body{\\n        padding-top: 48px;\\n    }\\n\\n    .convert-modal > .ant-modal-content > .ant-modal-footer{\\n        display: none; \\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, message } from 'antd';\nimport { SwapOutlined, LoadingOutlined, CloseOutlined, CopyOutlined } from '@ant-design/icons';\nimport { createGlobalStyle } from 'styled-components';\nimport { CONVERT_PINYIN_REQUEST, CONVERT_RESET_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nvar Global = createGlobalStyle(_templateObject());\n_c = Global;\nvar convertBox = css(_templateObject2());\nvar cancelBtn = css(_templateObject3());\nvar toConvert = css(_templateObject4());\nvar converted = css(_templateObject5());\nvar copyBtn = css(_templateObject6());\n\nvar ConvertPopUp = function ConvertPopUp() {\n  _s();\n\n  var pinyinRef = useRef(null);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      convertLoading = _useSelector.convertLoading,\n      convertDone = _useSelector.convertDone,\n      convertedPinyin = _useSelector.convertedPinyin;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      input = _useInput2[0],\n      onChangeInput = _useInput2[1],\n      setInput = _useInput2[2];\n\n  var _useState = useState(false),\n      modalVisible = _useState[0],\n      setModalVisible = _useState[1];\n\n  var onCancelModal = useCallback(function () {\n    setModalVisible(false);\n    setInput('');\n    dispatch({\n      type: CONVERT_RESET_REQUEST\n    });\n  });\n  var onClickCancel = useCallback(function () {\n    setInput('');\n    dispatch({\n      type: CONVERT_RESET_REQUEST\n    });\n  });\n  var onClickConvert = useCallback(function () {\n    dispatch({\n      type: CONVERT_PINYIN_REQUEST,\n      data: {\n        content: input\n      }\n    });\n  });\n  var onClickCopy = useCallback(function () {\n    // const pinyin = pinyinRef.current.innerText;\n    // const textField = document.createElement('textarea');\n    // textField.innerText = pinyin;\n    // document.body.appendChild(textField);\n    // textField.select();\n    // document.execCommand('copy');\n    // textField.remove();\n    navigator.clipboard.readText().then(function (clipText) {\n      return console.log(clipText);\n    });\n    message.success({\n      content: '클립보드에 복사되었습니다!',\n      duration: 1\n    });\n  }, []);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, _this), _jsxDEV(_Fragment, {\n      children: [_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return setModalVisible(true);\n        },\n        children: \"Convert to P\\u012Bny\\u012Bn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, _this), _jsxDEV(Modal, {\n        className: \"convert-modal\",\n        visible: modalVisible,\n        onCancel: onCancelModal,\n        onOk: function onOk() {\n          return setModalVisible(false);\n        },\n        children: _jsxDEV(\"div\", {\n          css: convertBox,\n          children: [input && _jsxDEV(Button, {\n            css: cancelBtn,\n            icon: _jsxDEV(CloseOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 23\n            }, _this),\n            onClick: onClickCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, _this), _jsxDEV(\"textarea\", {\n            css: toConvert,\n            placeholder: \"Ni3 hao!3\",\n            value: input,\n            onChange: onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, _this), _jsxDEV(Button, {\n            icon: _jsxDEV(SwapOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 27\n            }, _this),\n            onClick: onClickConvert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, _this), _jsxDEV(\"div\", {\n            className: \"convert-text\",\n            css: converted,\n            ref: pinyinRef,\n            children: [!convertLoading && !convertDone && null, convertLoading && !convertDone && _jsxDEV(LoadingOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 50\n            }, _this), !convertLoading && convertDone && convertedPinyin, convertDone && _jsxDEV(Button, {\n              css: copyBtn,\n              icon: _jsxDEV(CopyOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, _this),\n              onClick: onClickCopy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(ConvertPopUp, \"dJVhca1FE9HYHoQFCbdacpYMN8I=\", false, function () {\n  return [useDispatch, useSelector, useInput];\n});\n\n_c2 = ConvertPopUp;\nexport default ConvertPopUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Global\");\n$RefreshReg$(_c2, \"ConvertPopUp\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/ConvertPopUp.js"],"names":["css","useCallback","useState","useRef","useDispatch","useSelector","Modal","Button","message","SwapOutlined","LoadingOutlined","CloseOutlined","CopyOutlined","createGlobalStyle","CONVERT_PINYIN_REQUEST","CONVERT_RESET_REQUEST","useInput","Global","convertBox","cancelBtn","toConvert","converted","copyBtn","ConvertPopUp","pinyinRef","dispatch","state","post","convertLoading","convertDone","convertedPinyin","input","onChangeInput","setInput","modalVisible","setModalVisible","onCancelModal","type","onClickCancel","onClickConvert","data","content","onClickCopy","navigator","clipboard","readText","then","clipText","console","log","success","duration"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, message } from 'antd';\r\nimport {\r\n  SwapOutlined,\r\n  LoadingOutlined,\r\n  CloseOutlined,\r\n  CopyOutlined,\r\n} from '@ant-design/icons';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport {\r\n  CONVERT_PINYIN_REQUEST,\r\n  CONVERT_RESET_REQUEST,\r\n} from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst Global = createGlobalStyle`\r\n    .convert-modal > .ant-modal-content > .ant-modal-body{\r\n        padding-top: 48px;\r\n    }\r\n\r\n    .convert-modal > .ant-modal-content > .ant-modal-footer{\r\n        display: none; \r\n    }\r\n`;\r\n\r\nconst convertBox = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n  border-radius: 33px;\r\n  background: #ffffff;\r\n  box-shadow: 6px 6px 12px #e8e8e8, -1px -1px 3px #e8e8e8,\r\n    -6px -6px 12px #e8e8e8, 1px 1px 3px #e8e8e8;\r\n`;\r\n\r\nconst cancelBtn = css`\r\n  position: absolute;\r\n  top: 13px;\r\n  right: 13px;\r\n`;\r\n\r\nconst toConvert = css`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 16px;\r\n  resize: none;\r\n  font-size: 21px;\r\n  border: none;\r\n  border-top-left-radius: 33px;\r\n  border-top-right-radius: 33px;\r\n`;\r\n\r\nconst converted = css`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 16px;\r\n  position: relative;\r\n  font-size: 21px;\r\n  border-bottom-left-radius: 33px;\r\n  border-bottom-right-radius: 33px;\r\n`;\r\n\r\nconst copyBtn = css`\r\n  position: absolute;\r\n  bottom: 13px;\r\n  right: 13px;\r\n`;\r\n\r\nconst ConvertPopUp = () => {\r\n  const pinyinRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { convertLoading, convertDone, convertedPinyin } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  const [input, onChangeInput, setInput] = useInput('');\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const onCancelModal = useCallback(() => {\r\n    setModalVisible(false);\r\n    setInput('');\r\n    dispatch({\r\n      type: CONVERT_RESET_REQUEST,\r\n    });\r\n  });\r\n\r\n  const onClickCancel = useCallback(() => {\r\n    setInput('');\r\n    dispatch({\r\n      type: CONVERT_RESET_REQUEST,\r\n    });\r\n  });\r\n\r\n  const onClickConvert = useCallback(() => {\r\n    dispatch({\r\n      type: CONVERT_PINYIN_REQUEST,\r\n      data: { content: input },\r\n    });\r\n  });\r\n\r\n  const onClickCopy = useCallback(() => {\r\n    // const pinyin = pinyinRef.current.innerText;\r\n    // const textField = document.createElement('textarea');\r\n    // textField.innerText = pinyin;\r\n    // document.body.appendChild(textField);\r\n    // textField.select();\r\n    // document.execCommand('copy');\r\n    // textField.remove();\r\n    navigator.clipboard.readText().then((clipText) => console.log(clipText));\r\n    message.success({\r\n      content: '클립보드에 복사되었습니다!',\r\n      duration: 1,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Global />\r\n      <>\r\n        <button onClick={() => setModalVisible(true)}>Convert to Pīnyīn</button>\r\n        <Modal\r\n          className=\"convert-modal\"\r\n          visible={modalVisible}\r\n          onCancel={onCancelModal}\r\n          onOk={() => setModalVisible(false)}\r\n        >\r\n          <div css={convertBox}>\r\n            {input && (\r\n              <Button\r\n                css={cancelBtn}\r\n                icon={<CloseOutlined />}\r\n                onClick={onClickCancel}\r\n              />\r\n            )}\r\n            <textarea\r\n              css={toConvert}\r\n              placeholder=\"Ni3 hao!3\"\r\n              value={input}\r\n              onChange={onChangeInput}\r\n            ></textarea>\r\n            <Button icon={<SwapOutlined />} onClick={onClickConvert} />\r\n            <div className=\"convert-text\" css={converted} ref={pinyinRef}>\r\n              {!convertLoading && !convertDone && null}\r\n              {convertLoading && !convertDone && <LoadingOutlined />}\r\n              {!convertLoading && convertDone && convertedPinyin}\r\n              {convertDone && (\r\n                <Button\r\n                  css={copyBtn}\r\n                  icon={<CopyOutlined />}\r\n                  onClick={onClickCopy}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConvertPopUp;\r\n"]},"metadata":{},"sourceType":"module"}