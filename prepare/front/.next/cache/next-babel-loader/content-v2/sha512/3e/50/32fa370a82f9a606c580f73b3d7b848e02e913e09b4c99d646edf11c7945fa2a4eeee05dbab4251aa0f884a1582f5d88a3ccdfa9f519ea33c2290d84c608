{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\pages\\\\write.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, Input, Modal } from 'antd';\nimport { ArrowLeftOutlined, PictureOutlined } from '@ant-design/icons';\nimport { useRouter } from 'next/router';\nimport { createGlobalStyle } from 'styled-components';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { roundBtn } from '../components/styles';\nimport { ADD_POST_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nconst convert = require('pinyin-convert');\n\nconst {\n  TextArea\n} = Input;\nconst headerHeight = ['63px', '71px', '87px'];\nconst headerBox = css`\n  position: relative;\n  height: ${headerHeight[0]};\n  z-index: 1;\n\n  @media (min-width: 768px) {\n    height: ${headerHeight[1]};\n  }\n\n  @media (min-width: 1024px) {\n    height: ${headerHeight[2]};\n  }\n`;\nconst headerContent = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  padding: 15px 20px;\n  border-bottom: 1px solid rgba(58, 24, 255, 0.7);\n  background-color: #fff;\n\n  @media (min-width: 1024px) {\n    padding: 18px 40px;\n  }\n`;\nconst arrowIcon = css`\n  font-size: 22px;\n  color: #3a18ff;\n\n  @media (min-width: 1024px) {\n    font-size: 32px;\n  }\n`;\nconst mainBox = css`\n  position: relative;\n`;\nconst textBox = css`\n  padding: 12px 14px;\n  font-size: 20px;\n  caret-color: #18ddff;\n  border: none;\n\n  @media (min-width: 768px) {\n    padding: 16px 18px;\n    font-size: 24px;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 24px;\n  }\n\n  &::placeholder {\n    color: #6a7481;\n  }\n`;\nconst line = css`\n  display: flex;\n  width: calc(100% - 20px);\n  height: 1px;\n  margin-left: 20px;\n  background-color: rgb(235, 238, 240);\n\n  @media (min-width: 768px) {\n    width: calc(100% - 30px);\n    margin-left: 30px;\n  }\n`;\nconst buttonBox = css`\n  display: flex;\n  align-items: center;\n  height: ${headerHeight[0]};\n  padding-left: 20px;\n\n  @media (min-width: 768px) {\n    height: ${headerHeight[1]};\n    padding-left: 30px;\n  }\n\n  @media (min-width: 1024px) {\n    height: ${headerHeight[2]};\n  }\n`;\nconst pictureIcon = css`\n  margin-right: 20px;\n  font-size: 38px;\n  cursor: pointer;\n  color: #3a18ff;\n\n  @media (min-width: 768px) {\n    font-size: 44px;\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 50px;\n  }\n\n  &:hover {\n    color: #18ddff;\n  }\n`;\nconst pinyinBtn = css`\n  width: 92px;\n  margin-right: 20px;\n  color: #fff;\n  border-color: #3a18ff;\n  background-color: #3a18ff;\n\n  @media (min-width: 768px) {\n    height: 36px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 104px;\n    height: 40px;\n  }\n\n  &:hover {\n    color: #000;\n    border-color: #18ddff;\n    background-color: #18ddff;\n\n    span::before {\n      content: 'Pīnyīn';\n    }\n  }\n\n  &:focus {\n    color: #fff;\n    border-color: #3a18ff;\n    background-color: #3a18ff;\n  }\n\n  span {\n    &:before {\n      content: '한어병음';\n      font-size: 15px;\n      font-weight: 700;\n\n      @media (min-width: 1024px) {\n        font-size: 18px;\n      }\n    }\n  }\n`;\nconst hanziBtn = css`\n  width: 77px;\n  color: #fff;\n  border-color: #3a18ff;\n  background-color: #3a18ff;\n\n  @media (min-width: 768px) {\n    height: 36px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 86px;\n    height: 40px;\n  }\n\n  &:hover {\n    color: #000;\n    border-color: #18ddff;\n    background-color: #18ddff;\n\n    span::before {\n      content: '汉字';\n    }\n  }\n\n  &:focus {\n    color: #fff;\n    border-color: #3a18ff;\n    background-color: #3a18ff;\n  }\n\n  span {\n    &:before {\n      content: '간체자';\n      font-size: 15px;\n      font-weight: 700;\n\n      @media (min-width: 1024px) {\n        font-size: 18px;\n      }\n    }\n  }\n`;\nconst Global = createGlobalStyle`\n  .ant-input{\n    color: #000;\n  }\n\n  .ant-input:focus{\n    -webkit-box-shadow: none;\n  }\n`;\n\nconst Write = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const inputRef = useRef();\n  const imageRef = useRef();\n  const onClickImagesUpload = useCallback(() => {\n    imageRef.current.click();\n  }, [imageRef.current]);\n  const {\n    0: pinyinModalVisible,\n    1: setPinyinModalVisible\n  } = useState(false);\n  const [pinyinTitle, onChangePinyinTitle] = useInput('');\n  const [pinyinContent, onChangePinyinContent] = useInput('');\n  const onOkPinyin = useCallback(() => {\n    console.log(pinyinTitle);\n    convert(pinyinContent).then(console.log);\n    setPinyinModalVisible(false);\n  }, [pinyinTitle, pinyinContent]);\n  const [content, onChangeContent] = useInput('');\n  const onClickWriteBtn = useCallback(() => {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: content\n    });\n  }, [content]);\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [inputRef.current]);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), _jsxDEV(\"header\", {\n      css: headerBox,\n      children: _jsxDEV(\"div\", {\n        css: headerContent,\n        children: [_jsxDEV(ArrowLeftOutlined, {\n          onClick: () => {\n            router.replace('/');\n          },\n          css: arrowIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          shape: \"round\",\n          css: roundBtn,\n          onClick: onClickWriteBtn,\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), _jsxDEV(\"main\", {\n      css: mainBox,\n      children: [_jsxDEV(TextArea, {\n        value: content,\n        onChange: onChangeContent,\n        placeholder: \"I'm learning...\",\n        css: textBox,\n        autoSize: {\n          minRows: 4\n        },\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), _jsxDEV(\"div\", {\n        css: line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), _jsxDEV(\"div\", {\n        css: buttonBox,\n        children: [_jsxDEV(\"div\", {\n          children: [_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"image\",\n            multiple: true,\n            hidden: true,\n            useRef: imageRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), _jsxDEV(PictureOutlined, {\n            css: pictureIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          css: pinyinBtn,\n          onClick: () => setPinyinModalVisible(true),\n          children: _jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), _jsxDEV(Modal, {\n          title: \"\\uD55C\\uC5B4\\uBCD1\\uC74C(P\\u012Bny\\u012Bn)\\uC73C\\uB85C \\uBCC0\\uD658\\uD558\\uAE30\",\n          visible: pinyinModalVisible,\n          okText: \"\\uBCC0\\uD658\",\n          onOk: onOkPinyin,\n          cancelText: \"\\uCDE8\\uC18C\",\n          onCancel: () => setPinyinModalVisible(false),\n          children: [_jsxDEV(Input, {\n            value: pinyinTitle,\n            onChange: onChangePinyinTitle,\n            placeholder: \"\\uB77C\\uC6B4\\uD76C\\uB294 \\uC815\\uB9D0 \\uC798\\uC0DD\\uACBC\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), _jsxDEV(TextArea, {\n            value: pinyinContent,\n            onChange: onChangePinyinContent,\n            placeholder: \"Luo2 Yun2 Xi1 hen3 shuai4\",\n            autoSize: {\n              minRows: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          css: hanziBtn,\n          children: _jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Write;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/pages/write.js"],"names":["css","Button","Input","Modal","ArrowLeftOutlined","PictureOutlined","useRouter","createGlobalStyle","useCallback","useEffect","useRef","useState","useDispatch","roundBtn","ADD_POST_REQUEST","useInput","convert","require","TextArea","headerHeight","headerBox","headerContent","arrowIcon","mainBox","textBox","line","buttonBox","pictureIcon","pinyinBtn","hanziBtn","Global","Write","dispatch","router","inputRef","imageRef","onClickImagesUpload","current","click","pinyinModalVisible","setPinyinModalVisible","pinyinTitle","onChangePinyinTitle","pinyinContent","onChangePinyinContent","onOkPinyin","console","log","then","content","onChangeContent","onClickWriteBtn","type","data","focus","replace","minRows"],"mappings":";;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,MAArC;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,mBAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAehB,KAArB;AAEA,MAAMiB,YAAY,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAArB;AAEA,MAAMC,SAAS,GAAGpB,GAAI;AACtB;AACA,YAAYmB,YAAY,CAAC,CAAD,CAAI;AAC5B;AACA;AACA;AACA,cAAcA,YAAY,CAAC,CAAD,CAAI;AAC9B;AACA;AACA;AACA,cAAcA,YAAY,CAAC,CAAD,CAAI;AAC9B;AACA,CAZA;AAcA,MAAME,aAAa,GAAGrB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,MAAMsB,SAAS,GAAGtB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMuB,OAAO,GAAGvB,GAAI;AACpB;AACA,CAFA;AAIA,MAAMwB,OAAO,GAAGxB,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;AAoBA,MAAMyB,IAAI,GAAGzB,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAM0B,SAAS,GAAG1B,GAAI;AACtB;AACA;AACA,YAAYmB,YAAY,CAAC,CAAD,CAAI;AAC5B;AACA;AACA;AACA,cAAcA,YAAY,CAAC,CAAD,CAAI;AAC9B;AACA;AACA;AACA;AACA,cAAcA,YAAY,CAAC,CAAD,CAAI;AAC9B;AACA,CAdA;AAgBA,MAAMQ,WAAW,GAAG3B,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,MAAM4B,SAAS,GAAG5B,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3CA;AA6CA,MAAM6B,QAAQ,GAAG7B,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1CA;AA4CA,MAAM8B,MAAM,GAAGvB,iBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMwB,KAAK,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMqB,MAAM,GAAG3B,SAAS,EAAxB;AAEA,QAAM4B,QAAQ,GAAGxB,MAAM,EAAvB;AACA,QAAMyB,QAAQ,GAAGzB,MAAM,EAAvB;AAEA,QAAM0B,mBAAmB,GAAG5B,WAAW,CAAC,MAAM;AAC5C2B,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACD,GAFsC,EAEpC,CAACH,QAAQ,CAACE,OAAV,CAFoC,CAAvC;AAIA,QAAM;AAAA,OAACE,kBAAD;AAAA,OAAqBC;AAArB,MAA8C7B,QAAQ,CAAC,KAAD,CAA5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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { Button, Input, Modal } from 'antd';\r\nimport { ArrowLeftOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { useRouter } from 'next/router';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { roundBtn } from '../components/styles';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst convert = require('pinyin-convert');\r\nconst { TextArea } = Input;\r\n\r\nconst headerHeight = ['63px', '71px', '87px'];\r\n\r\nconst headerBox = css`\r\n  position: relative;\r\n  height: ${headerHeight[0]};\r\n  z-index: 1;\r\n\r\n  @media (min-width: 768px) {\r\n    height: ${headerHeight[1]};\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: ${headerHeight[2]};\r\n  }\r\n`;\r\n\r\nconst headerContent = css`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid rgba(58, 24, 255, 0.7);\r\n  background-color: #fff;\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 18px 40px;\r\n  }\r\n`;\r\n\r\nconst arrowIcon = css`\r\n  font-size: 22px;\r\n  color: #3a18ff;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 32px;\r\n  }\r\n`;\r\n\r\nconst mainBox = css`\r\n  position: relative;\r\n`;\r\n\r\nconst textBox = css`\r\n  padding: 12px 14px;\r\n  font-size: 20px;\r\n  caret-color: #18ddff;\r\n  border: none;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 16px 18px;\r\n    font-size: 24px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 24px;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #6a7481;\r\n  }\r\n`;\r\n\r\nconst line = css`\r\n  display: flex;\r\n  width: calc(100% - 20px);\r\n  height: 1px;\r\n  margin-left: 20px;\r\n  background-color: rgb(235, 238, 240);\r\n\r\n  @media (min-width: 768px) {\r\n    width: calc(100% - 30px);\r\n    margin-left: 30px;\r\n  }\r\n`;\r\n\r\nconst buttonBox = css`\r\n  display: flex;\r\n  align-items: center;\r\n  height: ${headerHeight[0]};\r\n  padding-left: 20px;\r\n\r\n  @media (min-width: 768px) {\r\n    height: ${headerHeight[1]};\r\n    padding-left: 30px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: ${headerHeight[2]};\r\n  }\r\n`;\r\n\r\nconst pictureIcon = css`\r\n  margin-right: 20px;\r\n  font-size: 38px;\r\n  cursor: pointer;\r\n  color: #3a18ff;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 44px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 50px;\r\n  }\r\n\r\n  &:hover {\r\n    color: #18ddff;\r\n  }\r\n`;\r\n\r\nconst pinyinBtn = css`\r\n  width: 92px;\r\n  margin-right: 20px;\r\n  color: #fff;\r\n  border-color: #3a18ff;\r\n  background-color: #3a18ff;\r\n\r\n  @media (min-width: 768px) {\r\n    height: 36px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 104px;\r\n    height: 40px;\r\n  }\r\n\r\n  &:hover {\r\n    color: #000;\r\n    border-color: #18ddff;\r\n    background-color: #18ddff;\r\n\r\n    span::before {\r\n      content: 'Pīnyīn';\r\n    }\r\n  }\r\n\r\n  &:focus {\r\n    color: #fff;\r\n    border-color: #3a18ff;\r\n    background-color: #3a18ff;\r\n  }\r\n\r\n  span {\r\n    &:before {\r\n      content: '한어병음';\r\n      font-size: 15px;\r\n      font-weight: 700;\r\n\r\n      @media (min-width: 1024px) {\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst hanziBtn = css`\r\n  width: 77px;\r\n  color: #fff;\r\n  border-color: #3a18ff;\r\n  background-color: #3a18ff;\r\n\r\n  @media (min-width: 768px) {\r\n    height: 36px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 86px;\r\n    height: 40px;\r\n  }\r\n\r\n  &:hover {\r\n    color: #000;\r\n    border-color: #18ddff;\r\n    background-color: #18ddff;\r\n\r\n    span::before {\r\n      content: '汉字';\r\n    }\r\n  }\r\n\r\n  &:focus {\r\n    color: #fff;\r\n    border-color: #3a18ff;\r\n    background-color: #3a18ff;\r\n  }\r\n\r\n  span {\r\n    &:before {\r\n      content: '간체자';\r\n      font-size: 15px;\r\n      font-weight: 700;\r\n\r\n      @media (min-width: 1024px) {\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Global = createGlobalStyle`\r\n  .ant-input{\r\n    color: #000;\r\n  }\r\n\r\n  .ant-input:focus{\r\n    -webkit-box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst Write = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n\r\n  const inputRef = useRef();\r\n  const imageRef = useRef();\r\n\r\n  const onClickImagesUpload = useCallback(() => {\r\n    imageRef.current.click();\r\n  }, [imageRef.current]);\r\n\r\n  const [pinyinModalVisible, setPinyinModalVisible] = useState(false);\r\n  const [pinyinTitle, onChangePinyinTitle] = useInput('');\r\n  const [pinyinContent, onChangePinyinContent] = useInput('');\r\n  const onOkPinyin = useCallback(() => {\r\n    console.log(pinyinTitle);\r\n    convert(pinyinContent).then(console.log);\r\n    setPinyinModalVisible(false);\r\n  }, [pinyinTitle, pinyinContent]);\r\n\r\n  const [content, onChangeContent] = useInput('');\r\n  const onClickWriteBtn = useCallback(() => {\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: content,\r\n    });\r\n  }, [content]);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, [inputRef.current]);\r\n\r\n  return (\r\n    <>\r\n      <Global />\r\n      <header css={headerBox}>\r\n        <div css={headerContent}>\r\n          <ArrowLeftOutlined\r\n            onClick={() => {\r\n              router.replace('/');\r\n            }}\r\n            css={arrowIcon}\r\n          />\r\n          <Button shape=\"round\" css={roundBtn} onClick={onClickWriteBtn}>\r\n            글쓰기\r\n          </Button>\r\n        </div>\r\n      </header>\r\n      <main css={mainBox}>\r\n        <TextArea\r\n          value={content}\r\n          onChange={onChangeContent}\r\n          placeholder=\"I'm learning...\"\r\n          css={textBox}\r\n          autoSize={{ minRows: 4 }}\r\n          ref={inputRef}\r\n        />\r\n        <div css={line}></div>\r\n        <div css={buttonBox}>\r\n          <div>\r\n            <input type=\"file\" name=\"image\" multiple hidden useRef={imageRef} />\r\n            <PictureOutlined css={pictureIcon} />\r\n          </div>\r\n          <Button css={pinyinBtn} onClick={() => setPinyinModalVisible(true)}>\r\n            <span></span>\r\n          </Button>\r\n          <Modal\r\n            title=\"한어병음(Pīnyīn)으로 변환하기\"\r\n            visible={pinyinModalVisible}\r\n            okText=\"변환\"\r\n            onOk={onOkPinyin}\r\n            cancelText=\"취소\"\r\n            onCancel={() => setPinyinModalVisible(false)}\r\n          >\r\n            <Input\r\n              value={pinyinTitle}\r\n              onChange={onChangePinyinTitle}\r\n              placeholder=\"라운희는 정말 잘생겼다\"\r\n            />\r\n            <TextArea\r\n              value={pinyinContent}\r\n              onChange={onChangePinyinContent}\r\n              placeholder=\"Luo2 Yun2 Xi1 hen3 shuai4\"\r\n              autoSize={{ minRows: 2 }}\r\n            />\r\n          </Modal>\r\n          <Button css={hanziBtn}>\r\n            <span></span>\r\n          </Button>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n"]},"metadata":{},"sourceType":"module"}