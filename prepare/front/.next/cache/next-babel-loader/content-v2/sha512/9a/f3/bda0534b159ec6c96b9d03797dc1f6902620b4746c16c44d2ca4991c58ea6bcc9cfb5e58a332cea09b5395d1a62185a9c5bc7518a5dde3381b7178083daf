{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\LoginForm.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Form, Modal, Input, message } from 'antd';\nimport { useEffect } from 'react';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nconst modalStyle = css`\n  .ant-modal-title {\n    font-weight: 700;\n  }\n\n  .ant-modal-footer {\n    button > span {\n      font-weight: 700;\n    }\n\n    .ant-btn:hover {\n      color: #18ddff;\n      border-color: #18ddff;\n    }\n\n    .ant-btn-primary {\n      color: #fff;\n      border-color: #3a18ff;\n      background-color: #3a18ff;\n    }\n\n    .ant-btn-primary:hover {\n      color: #000;\n      border-color: #18ddff;\n      background-color: #18ddff;\n    }\n  }\n`;\nconst formStyle = css`\n  margin-bottom: 20px;\n\n  input {\n    padding-left: 10px !important;\n  }\n`;\nconst signup = css`\n  text-align: center;\n  margin-bottom: 0;\n  color: #747474;\n\n  a {\n    display: inline-block;\n    padding-left: 5px;\n    text-decoration: underline;\n    color: #000;\n  }\n`;\n\nconst LoginForm = ({\n  visible,\n  onCreate,\n  onCancel\n}) => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const {\n    logInError,\n    logInDone\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (logInError) {\n      message.error({\n        content: logInError,\n        className: 'custom-class',\n        style: {\n          marginTop: '20vh'\n        }\n      });\n    }\n  }, [logInError]);\n  return _jsxDEV(Modal, {\n    visible: visible,\n    title: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\",\n    okText: \"\\uB85C\\uADF8\\uC778\",\n    cancelText: \"\\uCDE8\\uC18C\",\n    css: modalStyle,\n    onCancel: () => {\n      onCancel();\n      form.resetFields();\n    },\n    onOk: () => {\n      form.validateFields().then(values => {\n        dispatch({\n          type: LOG_IN_REQUEST,\n          data: {\n            nickname: values.id,\n            password: values.password\n          }\n        });\n        form.resetFields();\n\n        if (logInDone) {\n          onCreate(values);\n        }\n      }).catch(info => {\n        console.log('Validate Failed:', info);\n      });\n    },\n    children: _jsxDEV(Form, {\n      form: form,\n      name: \"form_in_modal\",\n      children: [_jsxDEV(Form.Item, {\n        name: \"id\",\n        rules: [{\n          required: true,\n          message: '아이디를 입력해주세요!'\n        }],\n        css: formStyle,\n        children: _jsxDEV(Input, {\n          prefix: _jsxDEV(UserOutlined, {\n            className: \"site-form-item-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this),\n          placeholder: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: '패스워드를 입력해주세요!'\n        }],\n        css: formStyle,\n        children: _jsxDEV(Input, {\n          prefix: _jsxDEV(LockOutlined, {\n            className: \"site-form-item-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this),\n          type: \"password\",\n          placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), _jsxDEV(Form.Item, {\n        css: signup,\n        children: [\"\\uC544\\uC9C1 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2DC\\uB77C\\uBA74,\", ' ', _jsxDEV(Link, {\n          href: \"/signup\",\n          children: _jsxDEV(\"a\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uB7EC\\uAC00\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/LoginForm.js"],"names":["css","Form","Modal","Input","message","useEffect","UserOutlined","LockOutlined","Link","useDispatch","useSelector","LOG_IN_REQUEST","modalStyle","formStyle","signup","LoginForm","visible","onCreate","onCancel","form","useForm","dispatch","logInError","logInDone","state","user","error","content","className","style","marginTop","resetFields","validateFields","then","values","type","data","nickname","id","password","catch","info","console","log","required"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { Form, Modal, Input, message } from 'antd';\r\nimport { useEffect } from 'react';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport Link from 'next/link';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\n\r\nconst modalStyle = css`\r\n  .ant-modal-title {\r\n    font-weight: 700;\r\n  }\r\n\r\n  .ant-modal-footer {\r\n    button > span {\r\n      font-weight: 700;\r\n    }\r\n\r\n    .ant-btn:hover {\r\n      color: #18ddff;\r\n      border-color: #18ddff;\r\n    }\r\n\r\n    .ant-btn-primary {\r\n      color: #fff;\r\n      border-color: #3a18ff;\r\n      background-color: #3a18ff;\r\n    }\r\n\r\n    .ant-btn-primary:hover {\r\n      color: #000;\r\n      border-color: #18ddff;\r\n      background-color: #18ddff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst formStyle = css`\r\n  margin-bottom: 20px;\r\n\r\n  input {\r\n    padding-left: 10px !important;\r\n  }\r\n`;\r\n\r\nconst signup = css`\r\n  text-align: center;\r\n  margin-bottom: 0;\r\n  color: #747474;\r\n\r\n  a {\r\n    display: inline-block;\r\n    padding-left: 5px;\r\n    text-decoration: underline;\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nconst LoginForm = ({ visible, onCreate, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const dispatch = useDispatch();\r\n  const { logInError, logInDone } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (logInError) {\r\n      message.error({\r\n        content: logInError,\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }, [logInError]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"로그인하기\"\r\n      okText=\"로그인\"\r\n      cancelText=\"취소\"\r\n      css={modalStyle}\r\n      onCancel={() => {\r\n        onCancel();\r\n        form.resetFields();\r\n      }}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            dispatch({\r\n              type: LOG_IN_REQUEST,\r\n              data: {\r\n                nickname: values.id,\r\n                password: values.password,\r\n              },\r\n            });\r\n            form.resetFields();\r\n            if (logInDone) {\r\n              onCreate(values);\r\n            }\r\n          })\r\n          .catch((info) => {\r\n            console.log('Validate Failed:', info);\r\n          });\r\n      }}\r\n    >\r\n      <Form form={form} name=\"form_in_modal\">\r\n        <Form.Item\r\n          name=\"id\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '아이디를 입력해주세요!',\r\n            },\r\n          ]}\r\n          css={formStyle}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"아이디\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '패스워드를 입력해주세요!',\r\n            },\r\n          ]}\r\n          css={formStyle}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"패스워드\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item css={signup}>\r\n          아직 회원이 아니시라면,{' '}\r\n          <Link href=\"/signup\">\r\n            <a>회원가입하러가기</a>\r\n          </Link>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}