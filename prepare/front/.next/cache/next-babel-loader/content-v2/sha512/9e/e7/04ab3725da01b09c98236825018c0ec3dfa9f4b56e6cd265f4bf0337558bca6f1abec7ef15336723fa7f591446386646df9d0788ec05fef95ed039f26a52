{"ast":null,"code":"import { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/\\uAE40\\uC2B9\\uBBF8/Desktop/for-portfolio/2021-April/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC2B9\\uBBF8\\\\Desktop\\\\for-portfolio\\\\2021-April\\\\prepare\\\\front\\\\components\\\\ExpressionBox.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  svg {\\n    font-size: 50px;\\n    color: #3a18ff;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-bottom: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Form, Input } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport ExpressionInput from './ExpressionInput';\nvar expressionBox = css(_templateObject());\nvar plusBtn = css(_templateObject2());\n\nvar ExpressionBox = function ExpressionBox() {\n  _s();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var onClickPlus = useCallback(function () {\n    setCount(function (prev) {\n      return prev + 1;\n    });\n  }, []);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"div\", {\n      css: expressionBox,\n      id: \"expression-box\",\n      children: _jsxDEV(Form, {\n        form: form,\n        children: _jsxDEV(Form.Item, {\n          name: \"pinyin\",\n          label: \"\\uD55C\\uC5B4\\uBCD1\\uC74C\",\n          rules: [{\n            required: true,\n            message: '한어병음을 입력해주세요!'\n          }],\n          children: _jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), _jsxDEV(PlusCircleFilled, {\n      css: plusBtn,\n      onClick: onClickPlus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ExpressionBox, \"iIzfp5+v0IQvsydztsXL2HwffcM=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = ExpressionBox;\nexport default ExpressionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpressionBox\");","map":{"version":3,"sources":["C:/Users/김승미/Desktop/for-portfolio/2021-April/prepare/front/components/ExpressionBox.js"],"names":["css","useCallback","useEffect","useState","Form","Input","PlusCircleFilled","ExpressionInput","expressionBox","plusBtn","ExpressionBox","useForm","form","onClickPlus","setCount","prev","required","message"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,IAAMC,aAAa,GAAGR,GAAH,mBAAnB;AAOA,IAAMS,OAAO,GAAGT,GAAH,oBAAb;;AAOA,IAAMU,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,sBACXN,IAAI,CAACO,OAAL,EADW;AAAA;AAAA,MACnBC,IADmB;;AAG1B,MAAMC,WAAW,GAAGZ,WAAW,CAAC,YAAM;AACpCa,IAAAA,QAAQ,CAAC,UAACC,IAAD;AAAA,aAAUA,IAAI,GAAG,CAAjB;AAAA,KAAD,CAAR;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,SACE;AAAA,eACE;AAAK,MAAA,GAAG,EAAEP,aAAV;AAAyB,MAAA,EAAE,EAAC,gBAA5B;AAAA,gBAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEI,IAAZ;AAAA,kBACE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAC,0BAFR;AAGE,UAAA,KAAK,EAAE,CACL;AACEI,YAAAA,QAAQ,EAAE,IADZ;AAEEC,YAAAA,OAAO,EAAE;AAFX,WADK,CAHT;AAAA,oBAUE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,aADF,EAkBE,QAAC,gBAAD;AAAkB,MAAA,GAAG,EAAER,OAAvB;AAAgC,MAAA,OAAO,EAAEI;AAAzC;AAAA;AAAA;AAAA;AAAA,aAlBF;AAAA,kBADF;AAsBD,CA7BD;;GAAMH,a;UACWN,IAAI,CAACO,O;;;KADhBD,a;AA+BN,eAAeA,aAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Form, Input } from 'antd';\r\nimport { PlusCircleFilled } from '@ant-design/icons';\r\nimport ExpressionInput from './ExpressionInput';\r\n\r\nconst expressionBox = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst plusBtn = css`\r\n  svg {\r\n    font-size: 50px;\r\n    color: #3a18ff;\r\n  }\r\n`;\r\n\r\nconst ExpressionBox = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onClickPlus = useCallback(() => {\r\n    setCount((prev) => prev + 1);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div css={expressionBox} id=\"expression-box\">\r\n        {/* <ExpressionInput /> */}\r\n        <Form form={form}>\r\n          <Form.Item\r\n            name=\"pinyin\"\r\n            label=\"한어병음\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '한어병음을 입력해주세요!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      <PlusCircleFilled css={plusBtn} onClick={onClickPlus} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpressionBox;\r\n"]},"metadata":{},"sourceType":"module"}